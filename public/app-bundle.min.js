(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return webpackJsonp([0],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(5);
	
	var _angular = __webpack_require__(19);
	
	var _angular2 = _interopRequireDefault(_angular);
	
	var _angularUiRouter = __webpack_require__(21);
	
	var _angularUiRouter2 = _interopRequireDefault(_angularUiRouter);
	
	var _angularAnimate = __webpack_require__(22);
	
	var _angularAnimate2 = _interopRequireDefault(_angularAnimate);
	
	__webpack_require__(24);
	
	__webpack_require__(27);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Created by rdollete on 4/1/16.
	 */
	
	__webpack_require__(28);
	__webpack_require__(30);
	__webpack_require__(32);
	
	_angular2.default.module('phenoCom', [_angularUiRouter2.default, _angularAnimate2.default, 'ngCookies', 'ngMessages', '720kb.socialshare', 'sticky']);
	
	__webpack_require__(33);
	__webpack_require__(149);
	__webpack_require__(150);
	__webpack_require__(151);

/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(23);
	module.exports = 'ngAnimate';


/***/ },
/* 23 */
/***/ function(module, exports) {

	/**
	 * @license AngularJS v1.5.3
	 * (c) 2010-2016 Google, Inc. http://angularjs.org
	 * License: MIT
	 */
	(function(window, angular, undefined) {'use strict';
	
	/* jshint ignore:start */
	var noop        = angular.noop;
	var copy        = angular.copy;
	var extend      = angular.extend;
	var jqLite      = angular.element;
	var forEach     = angular.forEach;
	var isArray     = angular.isArray;
	var isString    = angular.isString;
	var isObject    = angular.isObject;
	var isUndefined = angular.isUndefined;
	var isDefined   = angular.isDefined;
	var isFunction  = angular.isFunction;
	var isElement   = angular.isElement;
	
	var ELEMENT_NODE = 1;
	var COMMENT_NODE = 8;
	
	var ADD_CLASS_SUFFIX = '-add';
	var REMOVE_CLASS_SUFFIX = '-remove';
	var EVENT_CLASS_PREFIX = 'ng-';
	var ACTIVE_CLASS_SUFFIX = '-active';
	var PREPARE_CLASS_SUFFIX = '-prepare';
	
	var NG_ANIMATE_CLASSNAME = 'ng-animate';
	var NG_ANIMATE_CHILDREN_DATA = '$$ngAnimateChildren';
	
	// Detect proper transitionend/animationend event names.
	var CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;
	
	// If unprefixed events are not supported but webkit-prefixed are, use the latter.
	// Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.
	// Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`
	// but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.
	// Register both events in case `window.onanimationend` is not supported because of that,
	// do the same for `transitionend` as Safari is likely to exhibit similar behavior.
	// Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit
	// therefore there is no reason to test anymore for other vendor prefixes:
	// http://caniuse.com/#search=transition
	if (isUndefined(window.ontransitionend) && isDefined(window.onwebkittransitionend)) {
	  CSS_PREFIX = '-webkit-';
	  TRANSITION_PROP = 'WebkitTransition';
	  TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';
	} else {
	  TRANSITION_PROP = 'transition';
	  TRANSITIONEND_EVENT = 'transitionend';
	}
	
	if (isUndefined(window.onanimationend) && isDefined(window.onwebkitanimationend)) {
	  CSS_PREFIX = '-webkit-';
	  ANIMATION_PROP = 'WebkitAnimation';
	  ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';
	} else {
	  ANIMATION_PROP = 'animation';
	  ANIMATIONEND_EVENT = 'animationend';
	}
	
	var DURATION_KEY = 'Duration';
	var PROPERTY_KEY = 'Property';
	var DELAY_KEY = 'Delay';
	var TIMING_KEY = 'TimingFunction';
	var ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';
	var ANIMATION_PLAYSTATE_KEY = 'PlayState';
	var SAFE_FAST_FORWARD_DURATION_VALUE = 9999;
	
	var ANIMATION_DELAY_PROP = ANIMATION_PROP + DELAY_KEY;
	var ANIMATION_DURATION_PROP = ANIMATION_PROP + DURATION_KEY;
	var TRANSITION_DELAY_PROP = TRANSITION_PROP + DELAY_KEY;
	var TRANSITION_DURATION_PROP = TRANSITION_PROP + DURATION_KEY;
	
	var isPromiseLike = function(p) {
	  return p && p.then ? true : false;
	};
	
	var ngMinErr = angular.$$minErr('ng');
	function assertArg(arg, name, reason) {
	  if (!arg) {
	    throw ngMinErr('areq', "Argument '{0}' is {1}", (name || '?'), (reason || "required"));
	  }
	  return arg;
	}
	
	function mergeClasses(a,b) {
	  if (!a && !b) return '';
	  if (!a) return b;
	  if (!b) return a;
	  if (isArray(a)) a = a.join(' ');
	  if (isArray(b)) b = b.join(' ');
	  return a + ' ' + b;
	}
	
	function packageStyles(options) {
	  var styles = {};
	  if (options && (options.to || options.from)) {
	    styles.to = options.to;
	    styles.from = options.from;
	  }
	  return styles;
	}
	
	function pendClasses(classes, fix, isPrefix) {
	  var className = '';
	  classes = isArray(classes)
	      ? classes
	      : classes && isString(classes) && classes.length
	          ? classes.split(/\s+/)
	          : [];
	  forEach(classes, function(klass, i) {
	    if (klass && klass.length > 0) {
	      className += (i > 0) ? ' ' : '';
	      className += isPrefix ? fix + klass
	                            : klass + fix;
	    }
	  });
	  return className;
	}
	
	function removeFromArray(arr, val) {
	  var index = arr.indexOf(val);
	  if (val >= 0) {
	    arr.splice(index, 1);
	  }
	}
	
	function stripCommentsFromElement(element) {
	  if (element instanceof jqLite) {
	    switch (element.length) {
	      case 0:
	        return [];
	        break;
	
	      case 1:
	        // there is no point of stripping anything if the element
	        // is the only element within the jqLite wrapper.
	        // (it's important that we retain the element instance.)
	        if (element[0].nodeType === ELEMENT_NODE) {
	          return element;
	        }
	        break;
	
	      default:
	        return jqLite(extractElementNode(element));
	        break;
	    }
	  }
	
	  if (element.nodeType === ELEMENT_NODE) {
	    return jqLite(element);
	  }
	}
	
	function extractElementNode(element) {
	  if (!element[0]) return element;
	  for (var i = 0; i < element.length; i++) {
	    var elm = element[i];
	    if (elm.nodeType == ELEMENT_NODE) {
	      return elm;
	    }
	  }
	}
	
	function $$addClass($$jqLite, element, className) {
	  forEach(element, function(elm) {
	    $$jqLite.addClass(elm, className);
	  });
	}
	
	function $$removeClass($$jqLite, element, className) {
	  forEach(element, function(elm) {
	    $$jqLite.removeClass(elm, className);
	  });
	}
	
	function applyAnimationClassesFactory($$jqLite) {
	  return function(element, options) {
	    if (options.addClass) {
	      $$addClass($$jqLite, element, options.addClass);
	      options.addClass = null;
	    }
	    if (options.removeClass) {
	      $$removeClass($$jqLite, element, options.removeClass);
	      options.removeClass = null;
	    }
	  }
	}
	
	function prepareAnimationOptions(options) {
	  options = options || {};
	  if (!options.$$prepared) {
	    var domOperation = options.domOperation || noop;
	    options.domOperation = function() {
	      options.$$domOperationFired = true;
	      domOperation();
	      domOperation = noop;
	    };
	    options.$$prepared = true;
	  }
	  return options;
	}
	
	function applyAnimationStyles(element, options) {
	  applyAnimationFromStyles(element, options);
	  applyAnimationToStyles(element, options);
	}
	
	function applyAnimationFromStyles(element, options) {
	  if (options.from) {
	    element.css(options.from);
	    options.from = null;
	  }
	}
	
	function applyAnimationToStyles(element, options) {
	  if (options.to) {
	    element.css(options.to);
	    options.to = null;
	  }
	}
	
	function mergeAnimationDetails(element, oldAnimation, newAnimation) {
	  var target = oldAnimation.options || {};
	  var newOptions = newAnimation.options || {};
	
	  var toAdd = (target.addClass || '') + ' ' + (newOptions.addClass || '');
	  var toRemove = (target.removeClass || '') + ' ' + (newOptions.removeClass || '');
	  var classes = resolveElementClasses(element.attr('class'), toAdd, toRemove);
	
	  if (newOptions.preparationClasses) {
	    target.preparationClasses = concatWithSpace(newOptions.preparationClasses, target.preparationClasses);
	    delete newOptions.preparationClasses;
	  }
	
	  // noop is basically when there is no callback; otherwise something has been set
	  var realDomOperation = target.domOperation !== noop ? target.domOperation : null;
	
	  extend(target, newOptions);
	
	  // TODO(matsko or sreeramu): proper fix is to maintain all animation callback in array and call at last,but now only leave has the callback so no issue with this.
	  if (realDomOperation) {
	    target.domOperation = realDomOperation;
	  }
	
	  if (classes.addClass) {
	    target.addClass = classes.addClass;
	  } else {
	    target.addClass = null;
	  }
	
	  if (classes.removeClass) {
	    target.removeClass = classes.removeClass;
	  } else {
	    target.removeClass = null;
	  }
	
	  oldAnimation.addClass = target.addClass;
	  oldAnimation.removeClass = target.removeClass;
	
	  return target;
	}
	
	function resolveElementClasses(existing, toAdd, toRemove) {
	  var ADD_CLASS = 1;
	  var REMOVE_CLASS = -1;
	
	  var flags = {};
	  existing = splitClassesToLookup(existing);
	
	  toAdd = splitClassesToLookup(toAdd);
	  forEach(toAdd, function(value, key) {
	    flags[key] = ADD_CLASS;
	  });
	
	  toRemove = splitClassesToLookup(toRemove);
	  forEach(toRemove, function(value, key) {
	    flags[key] = flags[key] === ADD_CLASS ? null : REMOVE_CLASS;
	  });
	
	  var classes = {
	    addClass: '',
	    removeClass: ''
	  };
	
	  forEach(flags, function(val, klass) {
	    var prop, allow;
	    if (val === ADD_CLASS) {
	      prop = 'addClass';
	      allow = !existing[klass];
	    } else if (val === REMOVE_CLASS) {
	      prop = 'removeClass';
	      allow = existing[klass];
	    }
	    if (allow) {
	      if (classes[prop].length) {
	        classes[prop] += ' ';
	      }
	      classes[prop] += klass;
	    }
	  });
	
	  function splitClassesToLookup(classes) {
	    if (isString(classes)) {
	      classes = classes.split(' ');
	    }
	
	    var obj = {};
	    forEach(classes, function(klass) {
	      // sometimes the split leaves empty string values
	      // incase extra spaces were applied to the options
	      if (klass.length) {
	        obj[klass] = true;
	      }
	    });
	    return obj;
	  }
	
	  return classes;
	}
	
	function getDomNode(element) {
	  return (element instanceof angular.element) ? element[0] : element;
	}
	
	function applyGeneratedPreparationClasses(element, event, options) {
	  var classes = '';
	  if (event) {
	    classes = pendClasses(event, EVENT_CLASS_PREFIX, true);
	  }
	  if (options.addClass) {
	    classes = concatWithSpace(classes, pendClasses(options.addClass, ADD_CLASS_SUFFIX));
	  }
	  if (options.removeClass) {
	    classes = concatWithSpace(classes, pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX));
	  }
	  if (classes.length) {
	    options.preparationClasses = classes;
	    element.addClass(classes);
	  }
	}
	
	function clearGeneratedClasses(element, options) {
	  if (options.preparationClasses) {
	    element.removeClass(options.preparationClasses);
	    options.preparationClasses = null;
	  }
	  if (options.activeClasses) {
	    element.removeClass(options.activeClasses);
	    options.activeClasses = null;
	  }
	}
	
	function blockTransitions(node, duration) {
	  // we use a negative delay value since it performs blocking
	  // yet it doesn't kill any existing transitions running on the
	  // same element which makes this safe for class-based animations
	  var value = duration ? '-' + duration + 's' : '';
	  applyInlineStyle(node, [TRANSITION_DELAY_PROP, value]);
	  return [TRANSITION_DELAY_PROP, value];
	}
	
	function blockKeyframeAnimations(node, applyBlock) {
	  var value = applyBlock ? 'paused' : '';
	  var key = ANIMATION_PROP + ANIMATION_PLAYSTATE_KEY;
	  applyInlineStyle(node, [key, value]);
	  return [key, value];
	}
	
	function applyInlineStyle(node, styleTuple) {
	  var prop = styleTuple[0];
	  var value = styleTuple[1];
	  node.style[prop] = value;
	}
	
	function concatWithSpace(a,b) {
	  if (!a) return b;
	  if (!b) return a;
	  return a + ' ' + b;
	}
	
	var $$rAFSchedulerFactory = ['$$rAF', function($$rAF) {
	  var queue, cancelFn;
	
	  function scheduler(tasks) {
	    // we make a copy since RAFScheduler mutates the state
	    // of the passed in array variable and this would be difficult
	    // to track down on the outside code
	    queue = queue.concat(tasks);
	    nextTick();
	  }
	
	  queue = scheduler.queue = [];
	
	  /* waitUntilQuiet does two things:
	   * 1. It will run the FINAL `fn` value only when an uncanceled RAF has passed through
	   * 2. It will delay the next wave of tasks from running until the quiet `fn` has run.
	   *
	   * The motivation here is that animation code can request more time from the scheduler
	   * before the next wave runs. This allows for certain DOM properties such as classes to
	   * be resolved in time for the next animation to run.
	   */
	  scheduler.waitUntilQuiet = function(fn) {
	    if (cancelFn) cancelFn();
	
	    cancelFn = $$rAF(function() {
	      cancelFn = null;
	      fn();
	      nextTick();
	    });
	  };
	
	  return scheduler;
	
	  function nextTick() {
	    if (!queue.length) return;
	
	    var items = queue.shift();
	    for (var i = 0; i < items.length; i++) {
	      items[i]();
	    }
	
	    if (!cancelFn) {
	      $$rAF(function() {
	        if (!cancelFn) nextTick();
	      });
	    }
	  }
	}];
	
	/**
	 * @ngdoc directive
	 * @name ngAnimateChildren
	 * @restrict AE
	 * @element ANY
	 *
	 * @description
	 *
	 * ngAnimateChildren allows you to specify that children of this element should animate even if any
	 * of the children's parents are currently animating. By default, when an element has an active `enter`, `leave`, or `move`
	 * (structural) animation, child elements that also have an active structural animation are not animated.
	 *
	 * Note that even if `ngAnimteChildren` is set, no child animations will run when the parent element is removed from the DOM (`leave` animation).
	 *
	 *
	 * @param {string} ngAnimateChildren If the value is empty, `true` or `on`,
	 *     then child animations are allowed. If the value is `false`, child animations are not allowed.
	 *
	 * @example
	 * <example module="ngAnimateChildren" name="ngAnimateChildren" deps="angular-animate.js" animations="true">
	     <file name="index.html">
	       <div ng-controller="mainController as main">
	         <label>Show container? <input type="checkbox" ng-model="main.enterElement" /></label>
	         <label>Animate children? <input type="checkbox" ng-model="main.animateChildren" /></label>
	         <hr>
	         <div ng-animate-children="{{main.animateChildren}}">
	           <div ng-if="main.enterElement" class="container">
	             List of items:
	             <div ng-repeat="item in [0, 1, 2, 3]" class="item">Item {{item}}</div>
	           </div>
	         </div>
	       </div>
	     </file>
	     <file name="animations.css">
	
	      .container.ng-enter,
	      .container.ng-leave {
	        transition: all ease 1.5s;
	      }
	
	      .container.ng-enter,
	      .container.ng-leave-active {
	        opacity: 0;
	      }
	
	      .container.ng-leave,
	      .container.ng-enter-active {
	        opacity: 1;
	      }
	
	      .item {
	        background: firebrick;
	        color: #FFF;
	        margin-bottom: 10px;
	      }
	
	      .item.ng-enter,
	      .item.ng-leave {
	        transition: transform 1.5s ease;
	      }
	
	      .item.ng-enter {
	        transform: translateX(50px);
	      }
	
	      .item.ng-enter-active {
	        transform: translateX(0);
	      }
	    </file>
	    <file name="script.js">
	      angular.module('ngAnimateChildren', ['ngAnimate'])
	        .controller('mainController', function() {
	          this.animateChildren = false;
	          this.enterElement = false;
	        });
	    </file>
	  </example>
	 */
	var $$AnimateChildrenDirective = ['$interpolate', function($interpolate) {
	  return {
	    link: function(scope, element, attrs) {
	      var val = attrs.ngAnimateChildren;
	      if (angular.isString(val) && val.length === 0) { //empty attribute
	        element.data(NG_ANIMATE_CHILDREN_DATA, true);
	      } else {
	        // Interpolate and set the value, so that it is available to
	        // animations that run right after compilation
	        setData($interpolate(val)(scope));
	        attrs.$observe('ngAnimateChildren', setData);
	      }
	
	      function setData(value) {
	        value = value === 'on' || value === 'true';
	        element.data(NG_ANIMATE_CHILDREN_DATA, value);
	      }
	    }
	  };
	}];
	
	var ANIMATE_TIMER_KEY = '$$animateCss';
	
	/**
	 * @ngdoc service
	 * @name $animateCss
	 * @kind object
	 *
	 * @description
	 * The `$animateCss` service is a useful utility to trigger customized CSS-based transitions/keyframes
	 * from a JavaScript-based animation or directly from a directive. The purpose of `$animateCss` is NOT
	 * to side-step how `$animate` and ngAnimate work, but the goal is to allow pre-existing animations or
	 * directives to create more complex animations that can be purely driven using CSS code.
	 *
	 * Note that only browsers that support CSS transitions and/or keyframe animations are capable of
	 * rendering animations triggered via `$animateCss` (bad news for IE9 and lower).
	 *
	 * ## Usage
	 * Once again, `$animateCss` is designed to be used inside of a registered JavaScript animation that
	 * is powered by ngAnimate. It is possible to use `$animateCss` directly inside of a directive, however,
	 * any automatic control over cancelling animations and/or preventing animations from being run on
	 * child elements will not be handled by Angular. For this to work as expected, please use `$animate` to
	 * trigger the animation and then setup a JavaScript animation that injects `$animateCss` to trigger
	 * the CSS animation.
	 *
	 * The example below shows how we can create a folding animation on an element using `ng-if`:
	 *
	 * ```html
	 * <!-- notice the `fold-animation` CSS class -->
	 * <div ng-if="onOff" class="fold-animation">
	 *   This element will go BOOM
	 * </div>
	 * <button ng-click="onOff=true">Fold In</button>
	 * ```
	 *
	 * Now we create the **JavaScript animation** that will trigger the CSS transition:
	 *
	 * ```js
	 * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {
	 *   return {
	 *     enter: function(element, doneFn) {
	 *       var height = element[0].offsetHeight;
	 *       return $animateCss(element, {
	 *         from: { height:'0px' },
	 *         to: { height:height + 'px' },
	 *         duration: 1 // one second
	 *       });
	 *     }
	 *   }
	 * }]);
	 * ```
	 *
	 * ## More Advanced Uses
	 *
	 * `$animateCss` is the underlying code that ngAnimate uses to power **CSS-based animations** behind the scenes. Therefore CSS hooks
	 * like `.ng-EVENT`, `.ng-EVENT-active`, `.ng-EVENT-stagger` are all features that can be triggered using `$animateCss` via JavaScript code.
	 *
	 * This also means that just about any combination of adding classes, removing classes, setting styles, dynamically setting a keyframe animation,
	 * applying a hardcoded duration or delay value, changing the animation easing or applying a stagger animation are all options that work with
	 * `$animateCss`. The service itself is smart enough to figure out the combination of options and examine the element styling properties in order
	 * to provide a working animation that will run in CSS.
	 *
	 * The example below showcases a more advanced version of the `.fold-animation` from the example above:
	 *
	 * ```js
	 * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {
	 *   return {
	 *     enter: function(element, doneFn) {
	 *       var height = element[0].offsetHeight;
	 *       return $animateCss(element, {
	 *         addClass: 'red large-text pulse-twice',
	 *         easing: 'ease-out',
	 *         from: { height:'0px' },
	 *         to: { height:height + 'px' },
	 *         duration: 1 // one second
	 *       });
	 *     }
	 *   }
	 * }]);
	 * ```
	 *
	 * Since we're adding/removing CSS classes then the CSS transition will also pick those up:
	 *
	 * ```css
	 * /&#42; since a hardcoded duration value of 1 was provided in the JavaScript animation code,
	 * the CSS classes below will be transitioned despite them being defined as regular CSS classes &#42;/
	 * .red { background:red; }
	 * .large-text { font-size:20px; }
	 *
	 * /&#42; we can also use a keyframe animation and $animateCss will make it work alongside the transition &#42;/
	 * .pulse-twice {
	 *   animation: 0.5s pulse linear 2;
	 *   -webkit-animation: 0.5s pulse linear 2;
	 * }
	 *
	 * @keyframes pulse {
	 *   from { transform: scale(0.5); }
	 *   to { transform: scale(1.5); }
	 * }
	 *
	 * @-webkit-keyframes pulse {
	 *   from { -webkit-transform: scale(0.5); }
	 *   to { -webkit-transform: scale(1.5); }
	 * }
	 * ```
	 *
	 * Given this complex combination of CSS classes, styles and options, `$animateCss` will figure everything out and make the animation happen.
	 *
	 * ## How the Options are handled
	 *
	 * `$animateCss` is very versatile and intelligent when it comes to figuring out what configurations to apply to the element to ensure the animation
	 * works with the options provided. Say for example we were adding a class that contained a keyframe value and we wanted to also animate some inline
	 * styles using the `from` and `to` properties.
	 *
	 * ```js
	 * var animator = $animateCss(element, {
	 *   from: { background:'red' },
	 *   to: { background:'blue' }
	 * });
	 * animator.start();
	 * ```
	 *
	 * ```css
	 * .rotating-animation {
	 *   animation:0.5s rotate linear;
	 *   -webkit-animation:0.5s rotate linear;
	 * }
	 *
	 * @keyframes rotate {
	 *   from { transform: rotate(0deg); }
	 *   to { transform: rotate(360deg); }
	 * }
	 *
	 * @-webkit-keyframes rotate {
	 *   from { -webkit-transform: rotate(0deg); }
	 *   to { -webkit-transform: rotate(360deg); }
	 * }
	 * ```
	 *
	 * The missing pieces here are that we do not have a transition set (within the CSS code nor within the `$animateCss` options) and the duration of the animation is
	 * going to be detected from what the keyframe styles on the CSS class are. In this event, `$animateCss` will automatically create an inline transition
	 * style matching the duration detected from the keyframe style (which is present in the CSS class that is being added) and then prepare both the transition
	 * and keyframe animations to run in parallel on the element. Then when the animation is underway the provided `from` and `to` CSS styles will be applied
	 * and spread across the transition and keyframe animation.
	 *
	 * ## What is returned
	 *
	 * `$animateCss` works in two stages: a preparation phase and an animation phase. Therefore when `$animateCss` is first called it will NOT actually
	 * start the animation. All that is going on here is that the element is being prepared for the animation (which means that the generated CSS classes are
	 * added and removed on the element). Once `$animateCss` is called it will return an object with the following properties:
	 *
	 * ```js
	 * var animator = $animateCss(element, { ... });
	 * ```
	 *
	 * Now what do the contents of our `animator` variable look like:
	 *
	 * ```js
	 * {
	 *   // starts the animation
	 *   start: Function,
	 *
	 *   // ends (aborts) the animation
	 *   end: Function
	 * }
	 * ```
	 *
	 * To actually start the animation we need to run `animation.start()` which will then return a promise that we can hook into to detect when the animation ends.
	 * If we choose not to run the animation then we MUST run `animation.end()` to perform a cleanup on the element (since some CSS classes and styles may have been
	 * applied to the element during the preparation phase). Note that all other properties such as duration, delay, transitions and keyframes are just properties
	 * and that changing them will not reconfigure the parameters of the animation.
	 *
	 * ### runner.done() vs runner.then()
	 * It is documented that `animation.start()` will return a promise object and this is true, however, there is also an additional method available on the
	 * runner called `.done(callbackFn)`. The done method works the same as `.finally(callbackFn)`, however, it does **not trigger a digest to occur**.
	 * Therefore, for performance reasons, it's always best to use `runner.done(callback)` instead of `runner.then()`, `runner.catch()` or `runner.finally()`
	 * unless you really need a digest to kick off afterwards.
	 *
	 * Keep in mind that, to make this easier, ngAnimate has tweaked the JS animations API to recognize when a runner instance is returned from $animateCss
	 * (so there is no need to call `runner.done(doneFn)` inside of your JavaScript animation code).
	 * Check the {@link ngAnimate.$animateCss#usage animation code above} to see how this works.
	 *
	 * @param {DOMElement} element the element that will be animated
	 * @param {object} options the animation-related options that will be applied during the animation
	 *
	 * * `event` - The DOM event (e.g. enter, leave, move). When used, a generated CSS class of `ng-EVENT` and `ng-EVENT-active` will be applied
	 * to the element during the animation. Multiple events can be provided when spaces are used as a separator. (Note that this will not perform any DOM operation.)
	 * * `structural` - Indicates that the `ng-` prefix will be added to the event class. Setting to `false` or omitting will turn `ng-EVENT` and
	 * `ng-EVENT-active` in `EVENT` and `EVENT-active`. Unused if `event` is omitted.
	 * * `easing` - The CSS easing value that will be applied to the transition or keyframe animation (or both).
	 * * `transitionStyle` - The raw CSS transition style that will be used (e.g. `1s linear all`).
	 * * `keyframeStyle` - The raw CSS keyframe animation style that will be used (e.g. `1s my_animation linear`).
	 * * `from` - The starting CSS styles (a key/value object) that will be applied at the start of the animation.
	 * * `to` - The ending CSS styles (a key/value object) that will be applied across the animation via a CSS transition.
	 * * `addClass` - A space separated list of CSS classes that will be added to the element and spread across the animation.
	 * * `removeClass` - A space separated list of CSS classes that will be removed from the element and spread across the animation.
	 * * `duration` - A number value representing the total duration of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `0`
	 * is provided then the animation will be skipped entirely.
	 * * `delay` - A number value representing the total delay of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `true` is
	 * used then whatever delay value is detected from the CSS classes will be mirrored on the elements styles (e.g. by setting delay true then the style value
	 * of the element will be `transition-delay: DETECTED_VALUE`). Using `true` is useful when you want the CSS classes and inline styles to all share the same
	 * CSS delay value.
	 * * `stagger` - A numeric time value representing the delay between successively animated elements
	 * ({@link ngAnimate#css-staggering-animations Click here to learn how CSS-based staggering works in ngAnimate.})
	 * * `staggerIndex` - The numeric index representing the stagger item (e.g. a value of 5 is equal to the sixth item in the stagger; therefore when a
	 *   `stagger` option value of `0.1` is used then there will be a stagger delay of `600ms`)
	 * * `applyClassesEarly` - Whether or not the classes being added or removed will be used when detecting the animation. This is set by `$animate` when enter/leave/move animations are fired to ensure that the CSS classes are resolved in time. (Note that this will prevent any transitions from occurring on the classes being added and removed.)
	 * * `cleanupStyles` - Whether or not the provided `from` and `to` styles will be removed once
	 *    the animation is closed. This is useful for when the styles are used purely for the sake of
	 *    the animation and do not have a lasting visual effect on the element (e.g. a collapse and open animation).
	 *    By default this value is set to `false`.
	 *
	 * @return {object} an object with start and end methods and details about the animation.
	 *
	 * * `start` - The method to start the animation. This will return a `Promise` when called.
	 * * `end` - This method will cancel the animation and remove all applied CSS classes and styles.
	 */
	var ONE_SECOND = 1000;
	var BASE_TEN = 10;
	
	var ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;
	var CLOSING_TIME_BUFFER = 1.5;
	
	var DETECT_CSS_PROPERTIES = {
	  transitionDuration:      TRANSITION_DURATION_PROP,
	  transitionDelay:         TRANSITION_DELAY_PROP,
	  transitionProperty:      TRANSITION_PROP + PROPERTY_KEY,
	  animationDuration:       ANIMATION_DURATION_PROP,
	  animationDelay:          ANIMATION_DELAY_PROP,
	  animationIterationCount: ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY
	};
	
	var DETECT_STAGGER_CSS_PROPERTIES = {
	  transitionDuration:      TRANSITION_DURATION_PROP,
	  transitionDelay:         TRANSITION_DELAY_PROP,
	  animationDuration:       ANIMATION_DURATION_PROP,
	  animationDelay:          ANIMATION_DELAY_PROP
	};
	
	function getCssKeyframeDurationStyle(duration) {
	  return [ANIMATION_DURATION_PROP, duration + 's'];
	}
	
	function getCssDelayStyle(delay, isKeyframeAnimation) {
	  var prop = isKeyframeAnimation ? ANIMATION_DELAY_PROP : TRANSITION_DELAY_PROP;
	  return [prop, delay + 's'];
	}
	
	function computeCssStyles($window, element, properties) {
	  var styles = Object.create(null);
	  var detectedStyles = $window.getComputedStyle(element) || {};
	  forEach(properties, function(formalStyleName, actualStyleName) {
	    var val = detectedStyles[formalStyleName];
	    if (val) {
	      var c = val.charAt(0);
	
	      // only numerical-based values have a negative sign or digit as the first value
	      if (c === '-' || c === '+' || c >= 0) {
	        val = parseMaxTime(val);
	      }
	
	      // by setting this to null in the event that the delay is not set or is set directly as 0
	      // then we can still allow for negative values to be used later on and not mistake this
	      // value for being greater than any other negative value.
	      if (val === 0) {
	        val = null;
	      }
	      styles[actualStyleName] = val;
	    }
	  });
	
	  return styles;
	}
	
	function parseMaxTime(str) {
	  var maxValue = 0;
	  var values = str.split(/\s*,\s*/);
	  forEach(values, function(value) {
	    // it's always safe to consider only second values and omit `ms` values since
	    // getComputedStyle will always handle the conversion for us
	    if (value.charAt(value.length - 1) == 's') {
	      value = value.substring(0, value.length - 1);
	    }
	    value = parseFloat(value) || 0;
	    maxValue = maxValue ? Math.max(value, maxValue) : value;
	  });
	  return maxValue;
	}
	
	function truthyTimingValue(val) {
	  return val === 0 || val != null;
	}
	
	function getCssTransitionDurationStyle(duration, applyOnlyDuration) {
	  var style = TRANSITION_PROP;
	  var value = duration + 's';
	  if (applyOnlyDuration) {
	    style += DURATION_KEY;
	  } else {
	    value += ' linear all';
	  }
	  return [style, value];
	}
	
	function createLocalCacheLookup() {
	  var cache = Object.create(null);
	  return {
	    flush: function() {
	      cache = Object.create(null);
	    },
	
	    count: function(key) {
	      var entry = cache[key];
	      return entry ? entry.total : 0;
	    },
	
	    get: function(key) {
	      var entry = cache[key];
	      return entry && entry.value;
	    },
	
	    put: function(key, value) {
	      if (!cache[key]) {
	        cache[key] = { total: 1, value: value };
	      } else {
	        cache[key].total++;
	      }
	    }
	  };
	}
	
	// we do not reassign an already present style value since
	// if we detect the style property value again we may be
	// detecting styles that were added via the `from` styles.
	// We make use of `isDefined` here since an empty string
	// or null value (which is what getPropertyValue will return
	// for a non-existing style) will still be marked as a valid
	// value for the style (a falsy value implies that the style
	// is to be removed at the end of the animation). If we had a simple
	// "OR" statement then it would not be enough to catch that.
	function registerRestorableStyles(backup, node, properties) {
	  forEach(properties, function(prop) {
	    backup[prop] = isDefined(backup[prop])
	        ? backup[prop]
	        : node.style.getPropertyValue(prop);
	  });
	}
	
	var $AnimateCssProvider = ['$animateProvider', function($animateProvider) {
	  var gcsLookup = createLocalCacheLookup();
	  var gcsStaggerLookup = createLocalCacheLookup();
	
	  this.$get = ['$window', '$$jqLite', '$$AnimateRunner', '$timeout',
	               '$$forceReflow', '$sniffer', '$$rAFScheduler', '$$animateQueue',
	       function($window,   $$jqLite,   $$AnimateRunner,   $timeout,
	                $$forceReflow,   $sniffer,   $$rAFScheduler, $$animateQueue) {
	
	    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);
	
	    var parentCounter = 0;
	    function gcsHashFn(node, extraClasses) {
	      var KEY = "$$ngAnimateParentKey";
	      var parentNode = node.parentNode;
	      var parentID = parentNode[KEY] || (parentNode[KEY] = ++parentCounter);
	      return parentID + '-' + node.getAttribute('class') + '-' + extraClasses;
	    }
	
	    function computeCachedCssStyles(node, className, cacheKey, properties) {
	      var timings = gcsLookup.get(cacheKey);
	
	      if (!timings) {
	        timings = computeCssStyles($window, node, properties);
	        if (timings.animationIterationCount === 'infinite') {
	          timings.animationIterationCount = 1;
	        }
	      }
	
	      // we keep putting this in multiple times even though the value and the cacheKey are the same
	      // because we're keeping an internal tally of how many duplicate animations are detected.
	      gcsLookup.put(cacheKey, timings);
	      return timings;
	    }
	
	    function computeCachedCssStaggerStyles(node, className, cacheKey, properties) {
	      var stagger;
	
	      // if we have one or more existing matches of matching elements
	      // containing the same parent + CSS styles (which is how cacheKey works)
	      // then staggering is possible
	      if (gcsLookup.count(cacheKey) > 0) {
	        stagger = gcsStaggerLookup.get(cacheKey);
	
	        if (!stagger) {
	          var staggerClassName = pendClasses(className, '-stagger');
	
	          $$jqLite.addClass(node, staggerClassName);
	
	          stagger = computeCssStyles($window, node, properties);
	
	          // force the conversion of a null value to zero incase not set
	          stagger.animationDuration = Math.max(stagger.animationDuration, 0);
	          stagger.transitionDuration = Math.max(stagger.transitionDuration, 0);
	
	          $$jqLite.removeClass(node, staggerClassName);
	
	          gcsStaggerLookup.put(cacheKey, stagger);
	        }
	      }
	
	      return stagger || {};
	    }
	
	    var cancelLastRAFRequest;
	    var rafWaitQueue = [];
	    function waitUntilQuiet(callback) {
	      rafWaitQueue.push(callback);
	      $$rAFScheduler.waitUntilQuiet(function() {
	        gcsLookup.flush();
	        gcsStaggerLookup.flush();
	
	        // DO NOT REMOVE THIS LINE OR REFACTOR OUT THE `pageWidth` variable.
	        // PLEASE EXAMINE THE `$$forceReflow` service to understand why.
	        var pageWidth = $$forceReflow();
	
	        // we use a for loop to ensure that if the queue is changed
	        // during this looping then it will consider new requests
	        for (var i = 0; i < rafWaitQueue.length; i++) {
	          rafWaitQueue[i](pageWidth);
	        }
	        rafWaitQueue.length = 0;
	      });
	    }
	
	    function computeTimings(node, className, cacheKey) {
	      var timings = computeCachedCssStyles(node, className, cacheKey, DETECT_CSS_PROPERTIES);
	      var aD = timings.animationDelay;
	      var tD = timings.transitionDelay;
	      timings.maxDelay = aD && tD
	          ? Math.max(aD, tD)
	          : (aD || tD);
	      timings.maxDuration = Math.max(
	          timings.animationDuration * timings.animationIterationCount,
	          timings.transitionDuration);
	
	      return timings;
	    }
	
	    return function init(element, initialOptions) {
	      // all of the animation functions should create
	      // a copy of the options data, however, if a
	      // parent service has already created a copy then
	      // we should stick to using that
	      var options = initialOptions || {};
	      if (!options.$$prepared) {
	        options = prepareAnimationOptions(copy(options));
	      }
	
	      var restoreStyles = {};
	      var node = getDomNode(element);
	      if (!node
	          || !node.parentNode
	          || !$$animateQueue.enabled()) {
	        return closeAndReturnNoopAnimator();
	      }
	
	      var temporaryStyles = [];
	      var classes = element.attr('class');
	      var styles = packageStyles(options);
	      var animationClosed;
	      var animationPaused;
	      var animationCompleted;
	      var runner;
	      var runnerHost;
	      var maxDelay;
	      var maxDelayTime;
	      var maxDuration;
	      var maxDurationTime;
	      var startTime;
	      var events = [];
	
	      if (options.duration === 0 || (!$sniffer.animations && !$sniffer.transitions)) {
	        return closeAndReturnNoopAnimator();
	      }
	
	      var method = options.event && isArray(options.event)
	            ? options.event.join(' ')
	            : options.event;
	
	      var isStructural = method && options.structural;
	      var structuralClassName = '';
	      var addRemoveClassName = '';
	
	      if (isStructural) {
	        structuralClassName = pendClasses(method, EVENT_CLASS_PREFIX, true);
	      } else if (method) {
	        structuralClassName = method;
	      }
	
	      if (options.addClass) {
	        addRemoveClassName += pendClasses(options.addClass, ADD_CLASS_SUFFIX);
	      }
	
	      if (options.removeClass) {
	        if (addRemoveClassName.length) {
	          addRemoveClassName += ' ';
	        }
	        addRemoveClassName += pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX);
	      }
	
	      // there may be a situation where a structural animation is combined together
	      // with CSS classes that need to resolve before the animation is computed.
	      // However this means that there is no explicit CSS code to block the animation
	      // from happening (by setting 0s none in the class name). If this is the case
	      // we need to apply the classes before the first rAF so we know to continue if
	      // there actually is a detected transition or keyframe animation
	      if (options.applyClassesEarly && addRemoveClassName.length) {
	        applyAnimationClasses(element, options);
	      }
	
	      var preparationClasses = [structuralClassName, addRemoveClassName].join(' ').trim();
	      var fullClassName = classes + ' ' + preparationClasses;
	      var activeClasses = pendClasses(preparationClasses, ACTIVE_CLASS_SUFFIX);
	      var hasToStyles = styles.to && Object.keys(styles.to).length > 0;
	      var containsKeyframeAnimation = (options.keyframeStyle || '').length > 0;
	
	      // there is no way we can trigger an animation if no styles and
	      // no classes are being applied which would then trigger a transition,
	      // unless there a is raw keyframe value that is applied to the element.
	      if (!containsKeyframeAnimation
	           && !hasToStyles
	           && !preparationClasses) {
	        return closeAndReturnNoopAnimator();
	      }
	
	      var cacheKey, stagger;
	      if (options.stagger > 0) {
	        var staggerVal = parseFloat(options.stagger);
	        stagger = {
	          transitionDelay: staggerVal,
	          animationDelay: staggerVal,
	          transitionDuration: 0,
	          animationDuration: 0
	        };
	      } else {
	        cacheKey = gcsHashFn(node, fullClassName);
	        stagger = computeCachedCssStaggerStyles(node, preparationClasses, cacheKey, DETECT_STAGGER_CSS_PROPERTIES);
	      }
	
	      if (!options.$$skipPreparationClasses) {
	        $$jqLite.addClass(element, preparationClasses);
	      }
	
	      var applyOnlyDuration;
	
	      if (options.transitionStyle) {
	        var transitionStyle = [TRANSITION_PROP, options.transitionStyle];
	        applyInlineStyle(node, transitionStyle);
	        temporaryStyles.push(transitionStyle);
	      }
	
	      if (options.duration >= 0) {
	        applyOnlyDuration = node.style[TRANSITION_PROP].length > 0;
	        var durationStyle = getCssTransitionDurationStyle(options.duration, applyOnlyDuration);
	
	        // we set the duration so that it will be picked up by getComputedStyle later
	        applyInlineStyle(node, durationStyle);
	        temporaryStyles.push(durationStyle);
	      }
	
	      if (options.keyframeStyle) {
	        var keyframeStyle = [ANIMATION_PROP, options.keyframeStyle];
	        applyInlineStyle(node, keyframeStyle);
	        temporaryStyles.push(keyframeStyle);
	      }
	
	      var itemIndex = stagger
	          ? options.staggerIndex >= 0
	              ? options.staggerIndex
	              : gcsLookup.count(cacheKey)
	          : 0;
	
	      var isFirst = itemIndex === 0;
	
	      // this is a pre-emptive way of forcing the setup classes to be added and applied INSTANTLY
	      // without causing any combination of transitions to kick in. By adding a negative delay value
	      // it forces the setup class' transition to end immediately. We later then remove the negative
	      // transition delay to allow for the transition to naturally do it's thing. The beauty here is
	      // that if there is no transition defined then nothing will happen and this will also allow
	      // other transitions to be stacked on top of each other without any chopping them out.
	      if (isFirst && !options.skipBlocking) {
	        blockTransitions(node, SAFE_FAST_FORWARD_DURATION_VALUE);
	      }
	
	      var timings = computeTimings(node, fullClassName, cacheKey);
	      var relativeDelay = timings.maxDelay;
	      maxDelay = Math.max(relativeDelay, 0);
	      maxDuration = timings.maxDuration;
	
	      var flags = {};
	      flags.hasTransitions          = timings.transitionDuration > 0;
	      flags.hasAnimations           = timings.animationDuration > 0;
	      flags.hasTransitionAll        = flags.hasTransitions && timings.transitionProperty == 'all';
	      flags.applyTransitionDuration = hasToStyles && (
	                                        (flags.hasTransitions && !flags.hasTransitionAll)
	                                         || (flags.hasAnimations && !flags.hasTransitions));
	      flags.applyAnimationDuration  = options.duration && flags.hasAnimations;
	      flags.applyTransitionDelay    = truthyTimingValue(options.delay) && (flags.applyTransitionDuration || flags.hasTransitions);
	      flags.applyAnimationDelay     = truthyTimingValue(options.delay) && flags.hasAnimations;
	      flags.recalculateTimingStyles = addRemoveClassName.length > 0;
	
	      if (flags.applyTransitionDuration || flags.applyAnimationDuration) {
	        maxDuration = options.duration ? parseFloat(options.duration) : maxDuration;
	
	        if (flags.applyTransitionDuration) {
	          flags.hasTransitions = true;
	          timings.transitionDuration = maxDuration;
	          applyOnlyDuration = node.style[TRANSITION_PROP + PROPERTY_KEY].length > 0;
	          temporaryStyles.push(getCssTransitionDurationStyle(maxDuration, applyOnlyDuration));
	        }
	
	        if (flags.applyAnimationDuration) {
	          flags.hasAnimations = true;
	          timings.animationDuration = maxDuration;
	          temporaryStyles.push(getCssKeyframeDurationStyle(maxDuration));
	        }
	      }
	
	      if (maxDuration === 0 && !flags.recalculateTimingStyles) {
	        return closeAndReturnNoopAnimator();
	      }
	
	      if (options.delay != null) {
	        var delayStyle;
	        if (typeof options.delay !== "boolean") {
	          delayStyle = parseFloat(options.delay);
	          // number in options.delay means we have to recalculate the delay for the closing timeout
	          maxDelay = Math.max(delayStyle, 0);
	        }
	
	        if (flags.applyTransitionDelay) {
	          temporaryStyles.push(getCssDelayStyle(delayStyle));
	        }
	
	        if (flags.applyAnimationDelay) {
	          temporaryStyles.push(getCssDelayStyle(delayStyle, true));
	        }
	      }
	
	      // we need to recalculate the delay value since we used a pre-emptive negative
	      // delay value and the delay value is required for the final event checking. This
	      // property will ensure that this will happen after the RAF phase has passed.
	      if (options.duration == null && timings.transitionDuration > 0) {
	        flags.recalculateTimingStyles = flags.recalculateTimingStyles || isFirst;
	      }
	
	      maxDelayTime = maxDelay * ONE_SECOND;
	      maxDurationTime = maxDuration * ONE_SECOND;
	      if (!options.skipBlocking) {
	        flags.blockTransition = timings.transitionDuration > 0;
	        flags.blockKeyframeAnimation = timings.animationDuration > 0 &&
	                                       stagger.animationDelay > 0 &&
	                                       stagger.animationDuration === 0;
	      }
	
	      if (options.from) {
	        if (options.cleanupStyles) {
	          registerRestorableStyles(restoreStyles, node, Object.keys(options.from));
	        }
	        applyAnimationFromStyles(element, options);
	      }
	
	      if (flags.blockTransition || flags.blockKeyframeAnimation) {
	        applyBlocking(maxDuration);
	      } else if (!options.skipBlocking) {
	        blockTransitions(node, false);
	      }
	
	      // TODO(matsko): for 1.5 change this code to have an animator object for better debugging
	      return {
	        $$willAnimate: true,
	        end: endFn,
	        start: function() {
	          if (animationClosed) return;
	
	          runnerHost = {
	            end: endFn,
	            cancel: cancelFn,
	            resume: null, //this will be set during the start() phase
	            pause: null
	          };
	
	          runner = new $$AnimateRunner(runnerHost);
	
	          waitUntilQuiet(start);
	
	          // we don't have access to pause/resume the animation
	          // since it hasn't run yet. AnimateRunner will therefore
	          // set noop functions for resume and pause and they will
	          // later be overridden once the animation is triggered
	          return runner;
	        }
	      };
	
	      function endFn() {
	        close();
	      }
	
	      function cancelFn() {
	        close(true);
	      }
	
	      function close(rejected) { // jshint ignore:line
	        // if the promise has been called already then we shouldn't close
	        // the animation again
	        if (animationClosed || (animationCompleted && animationPaused)) return;
	        animationClosed = true;
	        animationPaused = false;
	
	        if (!options.$$skipPreparationClasses) {
	          $$jqLite.removeClass(element, preparationClasses);
	        }
	        $$jqLite.removeClass(element, activeClasses);
	
	        blockKeyframeAnimations(node, false);
	        blockTransitions(node, false);
	
	        forEach(temporaryStyles, function(entry) {
	          // There is only one way to remove inline style properties entirely from elements.
	          // By using `removeProperty` this works, but we need to convert camel-cased CSS
	          // styles down to hyphenated values.
	          node.style[entry[0]] = '';
	        });
	
	        applyAnimationClasses(element, options);
	        applyAnimationStyles(element, options);
	
	        if (Object.keys(restoreStyles).length) {
	          forEach(restoreStyles, function(value, prop) {
	            value ? node.style.setProperty(prop, value)
	                  : node.style.removeProperty(prop);
	          });
	        }
	
	        // the reason why we have this option is to allow a synchronous closing callback
	        // that is fired as SOON as the animation ends (when the CSS is removed) or if
	        // the animation never takes off at all. A good example is a leave animation since
	        // the element must be removed just after the animation is over or else the element
	        // will appear on screen for one animation frame causing an overbearing flicker.
	        if (options.onDone) {
	          options.onDone();
	        }
	
	        if (events && events.length) {
	          // Remove the transitionend / animationend listener(s)
	          element.off(events.join(' '), onAnimationProgress);
	        }
	
	        //Cancel the fallback closing timeout and remove the timer data
	        var animationTimerData = element.data(ANIMATE_TIMER_KEY);
	        if (animationTimerData) {
	          $timeout.cancel(animationTimerData[0].timer);
	          element.removeData(ANIMATE_TIMER_KEY);
	        }
	
	        // if the preparation function fails then the promise is not setup
	        if (runner) {
	          runner.complete(!rejected);
	        }
	      }
	
	      function applyBlocking(duration) {
	        if (flags.blockTransition) {
	          blockTransitions(node, duration);
	        }
	
	        if (flags.blockKeyframeAnimation) {
	          blockKeyframeAnimations(node, !!duration);
	        }
	      }
	
	      function closeAndReturnNoopAnimator() {
	        runner = new $$AnimateRunner({
	          end: endFn,
	          cancel: cancelFn
	        });
	
	        // should flush the cache animation
	        waitUntilQuiet(noop);
	        close();
	
	        return {
	          $$willAnimate: false,
	          start: function() {
	            return runner;
	          },
	          end: endFn
	        };
	      }
	
	      function onAnimationProgress(event) {
	        event.stopPropagation();
	        var ev = event.originalEvent || event;
	
	        // we now always use `Date.now()` due to the recent changes with
	        // event.timeStamp in Firefox, Webkit and Chrome (see #13494 for more info)
	        var timeStamp = ev.$manualTimeStamp || Date.now();
	
	        /* Firefox (or possibly just Gecko) likes to not round values up
	         * when a ms measurement is used for the animation */
	        var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));
	
	        /* $manualTimeStamp is a mocked timeStamp value which is set
	         * within browserTrigger(). This is only here so that tests can
	         * mock animations properly. Real events fallback to event.timeStamp,
	         * or, if they don't, then a timeStamp is automatically created for them.
	         * We're checking to see if the timeStamp surpasses the expected delay,
	         * but we're using elapsedTime instead of the timeStamp on the 2nd
	         * pre-condition since animationPauseds sometimes close off early */
	        if (Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {
	          // we set this flag to ensure that if the transition is paused then, when resumed,
	          // the animation will automatically close itself since transitions cannot be paused.
	          animationCompleted = true;
	          close();
	        }
	      }
	
	      function start() {
	        if (animationClosed) return;
	        if (!node.parentNode) {
	          close();
	          return;
	        }
	
	        // even though we only pause keyframe animations here the pause flag
	        // will still happen when transitions are used. Only the transition will
	        // not be paused since that is not possible. If the animation ends when
	        // paused then it will not complete until unpaused or cancelled.
	        var playPause = function(playAnimation) {
	          if (!animationCompleted) {
	            animationPaused = !playAnimation;
	            if (timings.animationDuration) {
	              var value = blockKeyframeAnimations(node, animationPaused);
	              animationPaused
	                  ? temporaryStyles.push(value)
	                  : removeFromArray(temporaryStyles, value);
	            }
	          } else if (animationPaused && playAnimation) {
	            animationPaused = false;
	            close();
	          }
	        };
	
	        // checking the stagger duration prevents an accidentally cascade of the CSS delay style
	        // being inherited from the parent. If the transition duration is zero then we can safely
	        // rely that the delay value is an intentional stagger delay style.
	        var maxStagger = itemIndex > 0
	                         && ((timings.transitionDuration && stagger.transitionDuration === 0) ||
	                            (timings.animationDuration && stagger.animationDuration === 0))
	                         && Math.max(stagger.animationDelay, stagger.transitionDelay);
	        if (maxStagger) {
	          $timeout(triggerAnimationStart,
	                   Math.floor(maxStagger * itemIndex * ONE_SECOND),
	                   false);
	        } else {
	          triggerAnimationStart();
	        }
	
	        // this will decorate the existing promise runner with pause/resume methods
	        runnerHost.resume = function() {
	          playPause(true);
	        };
	
	        runnerHost.pause = function() {
	          playPause(false);
	        };
	
	        function triggerAnimationStart() {
	          // just incase a stagger animation kicks in when the animation
	          // itself was cancelled entirely
	          if (animationClosed) return;
	
	          applyBlocking(false);
	
	          forEach(temporaryStyles, function(entry) {
	            var key = entry[0];
	            var value = entry[1];
	            node.style[key] = value;
	          });
	
	          applyAnimationClasses(element, options);
	          $$jqLite.addClass(element, activeClasses);
	
	          if (flags.recalculateTimingStyles) {
	            fullClassName = node.className + ' ' + preparationClasses;
	            cacheKey = gcsHashFn(node, fullClassName);
	
	            timings = computeTimings(node, fullClassName, cacheKey);
	            relativeDelay = timings.maxDelay;
	            maxDelay = Math.max(relativeDelay, 0);
	            maxDuration = timings.maxDuration;
	
	            if (maxDuration === 0) {
	              close();
	              return;
	            }
	
	            flags.hasTransitions = timings.transitionDuration > 0;
	            flags.hasAnimations = timings.animationDuration > 0;
	          }
	
	          if (flags.applyAnimationDelay) {
	            relativeDelay = typeof options.delay !== "boolean" && truthyTimingValue(options.delay)
	                  ? parseFloat(options.delay)
	                  : relativeDelay;
	
	            maxDelay = Math.max(relativeDelay, 0);
	            timings.animationDelay = relativeDelay;
	            delayStyle = getCssDelayStyle(relativeDelay, true);
	            temporaryStyles.push(delayStyle);
	            node.style[delayStyle[0]] = delayStyle[1];
	          }
	
	          maxDelayTime = maxDelay * ONE_SECOND;
	          maxDurationTime = maxDuration * ONE_SECOND;
	
	          if (options.easing) {
	            var easeProp, easeVal = options.easing;
	            if (flags.hasTransitions) {
	              easeProp = TRANSITION_PROP + TIMING_KEY;
	              temporaryStyles.push([easeProp, easeVal]);
	              node.style[easeProp] = easeVal;
	            }
	            if (flags.hasAnimations) {
	              easeProp = ANIMATION_PROP + TIMING_KEY;
	              temporaryStyles.push([easeProp, easeVal]);
	              node.style[easeProp] = easeVal;
	            }
	          }
	
	          if (timings.transitionDuration) {
	            events.push(TRANSITIONEND_EVENT);
	          }
	
	          if (timings.animationDuration) {
	            events.push(ANIMATIONEND_EVENT);
	          }
	
	          startTime = Date.now();
	          var timerTime = maxDelayTime + CLOSING_TIME_BUFFER * maxDurationTime;
	          var endTime = startTime + timerTime;
	
	          var animationsData = element.data(ANIMATE_TIMER_KEY) || [];
	          var setupFallbackTimer = true;
	          if (animationsData.length) {
	            var currentTimerData = animationsData[0];
	            setupFallbackTimer = endTime > currentTimerData.expectedEndTime;
	            if (setupFallbackTimer) {
	              $timeout.cancel(currentTimerData.timer);
	            } else {
	              animationsData.push(close);
	            }
	          }
	
	          if (setupFallbackTimer) {
	            var timer = $timeout(onAnimationExpired, timerTime, false);
	            animationsData[0] = {
	              timer: timer,
	              expectedEndTime: endTime
	            };
	            animationsData.push(close);
	            element.data(ANIMATE_TIMER_KEY, animationsData);
	          }
	
	          if (events.length) {
	            element.on(events.join(' '), onAnimationProgress);
	          }
	
	          if (options.to) {
	            if (options.cleanupStyles) {
	              registerRestorableStyles(restoreStyles, node, Object.keys(options.to));
	            }
	            applyAnimationToStyles(element, options);
	          }
	        }
	
	        function onAnimationExpired() {
	          var animationsData = element.data(ANIMATE_TIMER_KEY);
	
	          // this will be false in the event that the element was
	          // removed from the DOM (via a leave animation or something
	          // similar)
	          if (animationsData) {
	            for (var i = 1; i < animationsData.length; i++) {
	              animationsData[i]();
	            }
	            element.removeData(ANIMATE_TIMER_KEY);
	          }
	        }
	      }
	    };
	  }];
	}];
	
	var $$AnimateCssDriverProvider = ['$$animationProvider', function($$animationProvider) {
	  $$animationProvider.drivers.push('$$animateCssDriver');
	
	  var NG_ANIMATE_SHIM_CLASS_NAME = 'ng-animate-shim';
	  var NG_ANIMATE_ANCHOR_CLASS_NAME = 'ng-anchor';
	
	  var NG_OUT_ANCHOR_CLASS_NAME = 'ng-anchor-out';
	  var NG_IN_ANCHOR_CLASS_NAME = 'ng-anchor-in';
	
	  function isDocumentFragment(node) {
	    return node.parentNode && node.parentNode.nodeType === 11;
	  }
	
	  this.$get = ['$animateCss', '$rootScope', '$$AnimateRunner', '$rootElement', '$sniffer', '$$jqLite', '$document',
	       function($animateCss,   $rootScope,   $$AnimateRunner,   $rootElement,   $sniffer,   $$jqLite,   $document) {
	
	    // only browsers that support these properties can render animations
	    if (!$sniffer.animations && !$sniffer.transitions) return noop;
	
	    var bodyNode = $document[0].body;
	    var rootNode = getDomNode($rootElement);
	
	    var rootBodyElement = jqLite(
	      // this is to avoid using something that exists outside of the body
	      // we also special case the doc fragment case because our unit test code
	      // appends the $rootElement to the body after the app has been bootstrapped
	      isDocumentFragment(rootNode) || bodyNode.contains(rootNode) ? rootNode : bodyNode
	    );
	
	    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);
	
	    return function initDriverFn(animationDetails) {
	      return animationDetails.from && animationDetails.to
	          ? prepareFromToAnchorAnimation(animationDetails.from,
	                                         animationDetails.to,
	                                         animationDetails.classes,
	                                         animationDetails.anchors)
	          : prepareRegularAnimation(animationDetails);
	    };
	
	    function filterCssClasses(classes) {
	      //remove all the `ng-` stuff
	      return classes.replace(/\bng-\S+\b/g, '');
	    }
	
	    function getUniqueValues(a, b) {
	      if (isString(a)) a = a.split(' ');
	      if (isString(b)) b = b.split(' ');
	      return a.filter(function(val) {
	        return b.indexOf(val) === -1;
	      }).join(' ');
	    }
	
	    function prepareAnchoredAnimation(classes, outAnchor, inAnchor) {
	      var clone = jqLite(getDomNode(outAnchor).cloneNode(true));
	      var startingClasses = filterCssClasses(getClassVal(clone));
	
	      outAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);
	      inAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);
	
	      clone.addClass(NG_ANIMATE_ANCHOR_CLASS_NAME);
	
	      rootBodyElement.append(clone);
	
	      var animatorIn, animatorOut = prepareOutAnimation();
	
	      // the user may not end up using the `out` animation and
	      // only making use of the `in` animation or vice-versa.
	      // In either case we should allow this and not assume the
	      // animation is over unless both animations are not used.
	      if (!animatorOut) {
	        animatorIn = prepareInAnimation();
	        if (!animatorIn) {
	          return end();
	        }
	      }
	
	      var startingAnimator = animatorOut || animatorIn;
	
	      return {
	        start: function() {
	          var runner;
	
	          var currentAnimation = startingAnimator.start();
	          currentAnimation.done(function() {
	            currentAnimation = null;
	            if (!animatorIn) {
	              animatorIn = prepareInAnimation();
	              if (animatorIn) {
	                currentAnimation = animatorIn.start();
	                currentAnimation.done(function() {
	                  currentAnimation = null;
	                  end();
	                  runner.complete();
	                });
	                return currentAnimation;
	              }
	            }
	            // in the event that there is no `in` animation
	            end();
	            runner.complete();
	          });
	
	          runner = new $$AnimateRunner({
	            end: endFn,
	            cancel: endFn
	          });
	
	          return runner;
	
	          function endFn() {
	            if (currentAnimation) {
	              currentAnimation.end();
	            }
	          }
	        }
	      };
	
	      function calculateAnchorStyles(anchor) {
	        var styles = {};
	
	        var coords = getDomNode(anchor).getBoundingClientRect();
	
	        // we iterate directly since safari messes up and doesn't return
	        // all the keys for the coords object when iterated
	        forEach(['width','height','top','left'], function(key) {
	          var value = coords[key];
	          switch (key) {
	            case 'top':
	              value += bodyNode.scrollTop;
	              break;
	            case 'left':
	              value += bodyNode.scrollLeft;
	              break;
	          }
	          styles[key] = Math.floor(value) + 'px';
	        });
	        return styles;
	      }
	
	      function prepareOutAnimation() {
	        var animator = $animateCss(clone, {
	          addClass: NG_OUT_ANCHOR_CLASS_NAME,
	          delay: true,
	          from: calculateAnchorStyles(outAnchor)
	        });
	
	        // read the comment within `prepareRegularAnimation` to understand
	        // why this check is necessary
	        return animator.$$willAnimate ? animator : null;
	      }
	
	      function getClassVal(element) {
	        return element.attr('class') || '';
	      }
	
	      function prepareInAnimation() {
	        var endingClasses = filterCssClasses(getClassVal(inAnchor));
	        var toAdd = getUniqueValues(endingClasses, startingClasses);
	        var toRemove = getUniqueValues(startingClasses, endingClasses);
	
	        var animator = $animateCss(clone, {
	          to: calculateAnchorStyles(inAnchor),
	          addClass: NG_IN_ANCHOR_CLASS_NAME + ' ' + toAdd,
	          removeClass: NG_OUT_ANCHOR_CLASS_NAME + ' ' + toRemove,
	          delay: true
	        });
	
	        // read the comment within `prepareRegularAnimation` to understand
	        // why this check is necessary
	        return animator.$$willAnimate ? animator : null;
	      }
	
	      function end() {
	        clone.remove();
	        outAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);
	        inAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);
	      }
	    }
	
	    function prepareFromToAnchorAnimation(from, to, classes, anchors) {
	      var fromAnimation = prepareRegularAnimation(from, noop);
	      var toAnimation = prepareRegularAnimation(to, noop);
	
	      var anchorAnimations = [];
	      forEach(anchors, function(anchor) {
	        var outElement = anchor['out'];
	        var inElement = anchor['in'];
	        var animator = prepareAnchoredAnimation(classes, outElement, inElement);
	        if (animator) {
	          anchorAnimations.push(animator);
	        }
	      });
	
	      // no point in doing anything when there are no elements to animate
	      if (!fromAnimation && !toAnimation && anchorAnimations.length === 0) return;
	
	      return {
	        start: function() {
	          var animationRunners = [];
	
	          if (fromAnimation) {
	            animationRunners.push(fromAnimation.start());
	          }
	
	          if (toAnimation) {
	            animationRunners.push(toAnimation.start());
	          }
	
	          forEach(anchorAnimations, function(animation) {
	            animationRunners.push(animation.start());
	          });
	
	          var runner = new $$AnimateRunner({
	            end: endFn,
	            cancel: endFn // CSS-driven animations cannot be cancelled, only ended
	          });
	
	          $$AnimateRunner.all(animationRunners, function(status) {
	            runner.complete(status);
	          });
	
	          return runner;
	
	          function endFn() {
	            forEach(animationRunners, function(runner) {
	              runner.end();
	            });
	          }
	        }
	      };
	    }
	
	    function prepareRegularAnimation(animationDetails) {
	      var element = animationDetails.element;
	      var options = animationDetails.options || {};
	
	      if (animationDetails.structural) {
	        options.event = animationDetails.event;
	        options.structural = true;
	        options.applyClassesEarly = true;
	
	        // we special case the leave animation since we want to ensure that
	        // the element is removed as soon as the animation is over. Otherwise
	        // a flicker might appear or the element may not be removed at all
	        if (animationDetails.event === 'leave') {
	          options.onDone = options.domOperation;
	        }
	      }
	
	      // We assign the preparationClasses as the actual animation event since
	      // the internals of $animateCss will just suffix the event token values
	      // with `-active` to trigger the animation.
	      if (options.preparationClasses) {
	        options.event = concatWithSpace(options.event, options.preparationClasses);
	      }
	
	      var animator = $animateCss(element, options);
	
	      // the driver lookup code inside of $$animation attempts to spawn a
	      // driver one by one until a driver returns a.$$willAnimate animator object.
	      // $animateCss will always return an object, however, it will pass in
	      // a flag as a hint as to whether an animation was detected or not
	      return animator.$$willAnimate ? animator : null;
	    }
	  }];
	}];
	
	// TODO(matsko): use caching here to speed things up for detection
	// TODO(matsko): add documentation
	//  by the time...
	
	var $$AnimateJsProvider = ['$animateProvider', function($animateProvider) {
	  this.$get = ['$injector', '$$AnimateRunner', '$$jqLite',
	       function($injector,   $$AnimateRunner,   $$jqLite) {
	
	    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);
	         // $animateJs(element, 'enter');
	    return function(element, event, classes, options) {
	      var animationClosed = false;
	
	      // the `classes` argument is optional and if it is not used
	      // then the classes will be resolved from the element's className
	      // property as well as options.addClass/options.removeClass.
	      if (arguments.length === 3 && isObject(classes)) {
	        options = classes;
	        classes = null;
	      }
	
	      options = prepareAnimationOptions(options);
	      if (!classes) {
	        classes = element.attr('class') || '';
	        if (options.addClass) {
	          classes += ' ' + options.addClass;
	        }
	        if (options.removeClass) {
	          classes += ' ' + options.removeClass;
	        }
	      }
	
	      var classesToAdd = options.addClass;
	      var classesToRemove = options.removeClass;
	
	      // the lookupAnimations function returns a series of animation objects that are
	      // matched up with one or more of the CSS classes. These animation objects are
	      // defined via the module.animation factory function. If nothing is detected then
	      // we don't return anything which then makes $animation query the next driver.
	      var animations = lookupAnimations(classes);
	      var before, after;
	      if (animations.length) {
	        var afterFn, beforeFn;
	        if (event == 'leave') {
	          beforeFn = 'leave';
	          afterFn = 'afterLeave'; // TODO(matsko): get rid of this
	        } else {
	          beforeFn = 'before' + event.charAt(0).toUpperCase() + event.substr(1);
	          afterFn = event;
	        }
	
	        if (event !== 'enter' && event !== 'move') {
	          before = packageAnimations(element, event, options, animations, beforeFn);
	        }
	        after  = packageAnimations(element, event, options, animations, afterFn);
	      }
	
	      // no matching animations
	      if (!before && !after) return;
	
	      function applyOptions() {
	        options.domOperation();
	        applyAnimationClasses(element, options);
	      }
	
	      function close() {
	        animationClosed = true;
	        applyOptions();
	        applyAnimationStyles(element, options);
	      }
	
	      var runner;
	
	      return {
	        $$willAnimate: true,
	        end: function() {
	          if (runner) {
	            runner.end();
	          } else {
	            close();
	            runner = new $$AnimateRunner();
	            runner.complete(true);
	          }
	          return runner;
	        },
	        start: function() {
	          if (runner) {
	            return runner;
	          }
	
	          runner = new $$AnimateRunner();
	          var closeActiveAnimations;
	          var chain = [];
	
	          if (before) {
	            chain.push(function(fn) {
	              closeActiveAnimations = before(fn);
	            });
	          }
	
	          if (chain.length) {
	            chain.push(function(fn) {
	              applyOptions();
	              fn(true);
	            });
	          } else {
	            applyOptions();
	          }
	
	          if (after) {
	            chain.push(function(fn) {
	              closeActiveAnimations = after(fn);
	            });
	          }
	
	          runner.setHost({
	            end: function() {
	              endAnimations();
	            },
	            cancel: function() {
	              endAnimations(true);
	            }
	          });
	
	          $$AnimateRunner.chain(chain, onComplete);
	          return runner;
	
	          function onComplete(success) {
	            close(success);
	            runner.complete(success);
	          }
	
	          function endAnimations(cancelled) {
	            if (!animationClosed) {
	              (closeActiveAnimations || noop)(cancelled);
	              onComplete(cancelled);
	            }
	          }
	        }
	      };
	
	      function executeAnimationFn(fn, element, event, options, onDone) {
	        var args;
	        switch (event) {
	          case 'animate':
	            args = [element, options.from, options.to, onDone];
	            break;
	
	          case 'setClass':
	            args = [element, classesToAdd, classesToRemove, onDone];
	            break;
	
	          case 'addClass':
	            args = [element, classesToAdd, onDone];
	            break;
	
	          case 'removeClass':
	            args = [element, classesToRemove, onDone];
	            break;
	
	          default:
	            args = [element, onDone];
	            break;
	        }
	
	        args.push(options);
	
	        var value = fn.apply(fn, args);
	        if (value) {
	          if (isFunction(value.start)) {
	            value = value.start();
	          }
	
	          if (value instanceof $$AnimateRunner) {
	            value.done(onDone);
	          } else if (isFunction(value)) {
	            // optional onEnd / onCancel callback
	            return value;
	          }
	        }
	
	        return noop;
	      }
	
	      function groupEventedAnimations(element, event, options, animations, fnName) {
	        var operations = [];
	        forEach(animations, function(ani) {
	          var animation = ani[fnName];
	          if (!animation) return;
	
	          // note that all of these animations will run in parallel
	          operations.push(function() {
	            var runner;
	            var endProgressCb;
	
	            var resolved = false;
	            var onAnimationComplete = function(rejected) {
	              if (!resolved) {
	                resolved = true;
	                (endProgressCb || noop)(rejected);
	                runner.complete(!rejected);
	              }
	            };
	
	            runner = new $$AnimateRunner({
	              end: function() {
	                onAnimationComplete();
	              },
	              cancel: function() {
	                onAnimationComplete(true);
	              }
	            });
	
	            endProgressCb = executeAnimationFn(animation, element, event, options, function(result) {
	              var cancelled = result === false;
	              onAnimationComplete(cancelled);
	            });
	
	            return runner;
	          });
	        });
	
	        return operations;
	      }
	
	      function packageAnimations(element, event, options, animations, fnName) {
	        var operations = groupEventedAnimations(element, event, options, animations, fnName);
	        if (operations.length === 0) {
	          var a,b;
	          if (fnName === 'beforeSetClass') {
	            a = groupEventedAnimations(element, 'removeClass', options, animations, 'beforeRemoveClass');
	            b = groupEventedAnimations(element, 'addClass', options, animations, 'beforeAddClass');
	          } else if (fnName === 'setClass') {
	            a = groupEventedAnimations(element, 'removeClass', options, animations, 'removeClass');
	            b = groupEventedAnimations(element, 'addClass', options, animations, 'addClass');
	          }
	
	          if (a) {
	            operations = operations.concat(a);
	          }
	          if (b) {
	            operations = operations.concat(b);
	          }
	        }
	
	        if (operations.length === 0) return;
	
	        // TODO(matsko): add documentation
	        return function startAnimation(callback) {
	          var runners = [];
	          if (operations.length) {
	            forEach(operations, function(animateFn) {
	              runners.push(animateFn());
	            });
	          }
	
	          runners.length ? $$AnimateRunner.all(runners, callback) : callback();
	
	          return function endFn(reject) {
	            forEach(runners, function(runner) {
	              reject ? runner.cancel() : runner.end();
	            });
	          };
	        };
	      }
	    };
	
	    function lookupAnimations(classes) {
	      classes = isArray(classes) ? classes : classes.split(' ');
	      var matches = [], flagMap = {};
	      for (var i=0; i < classes.length; i++) {
	        var klass = classes[i],
	            animationFactory = $animateProvider.$$registeredAnimations[klass];
	        if (animationFactory && !flagMap[klass]) {
	          matches.push($injector.get(animationFactory));
	          flagMap[klass] = true;
	        }
	      }
	      return matches;
	    }
	  }];
	}];
	
	var $$AnimateJsDriverProvider = ['$$animationProvider', function($$animationProvider) {
	  $$animationProvider.drivers.push('$$animateJsDriver');
	  this.$get = ['$$animateJs', '$$AnimateRunner', function($$animateJs, $$AnimateRunner) {
	    return function initDriverFn(animationDetails) {
	      if (animationDetails.from && animationDetails.to) {
	        var fromAnimation = prepareAnimation(animationDetails.from);
	        var toAnimation = prepareAnimation(animationDetails.to);
	        if (!fromAnimation && !toAnimation) return;
	
	        return {
	          start: function() {
	            var animationRunners = [];
	
	            if (fromAnimation) {
	              animationRunners.push(fromAnimation.start());
	            }
	
	            if (toAnimation) {
	              animationRunners.push(toAnimation.start());
	            }
	
	            $$AnimateRunner.all(animationRunners, done);
	
	            var runner = new $$AnimateRunner({
	              end: endFnFactory(),
	              cancel: endFnFactory()
	            });
	
	            return runner;
	
	            function endFnFactory() {
	              return function() {
	                forEach(animationRunners, function(runner) {
	                  // at this point we cannot cancel animations for groups just yet. 1.5+
	                  runner.end();
	                });
	              };
	            }
	
	            function done(status) {
	              runner.complete(status);
	            }
	          }
	        };
	      } else {
	        return prepareAnimation(animationDetails);
	      }
	    };
	
	    function prepareAnimation(animationDetails) {
	      // TODO(matsko): make sure to check for grouped animations and delegate down to normal animations
	      var element = animationDetails.element;
	      var event = animationDetails.event;
	      var options = animationDetails.options;
	      var classes = animationDetails.classes;
	      return $$animateJs(element, event, classes, options);
	    }
	  }];
	}];
	
	var NG_ANIMATE_ATTR_NAME = 'data-ng-animate';
	var NG_ANIMATE_PIN_DATA = '$ngAnimatePin';
	var $$AnimateQueueProvider = ['$animateProvider', function($animateProvider) {
	  var PRE_DIGEST_STATE = 1;
	  var RUNNING_STATE = 2;
	  var ONE_SPACE = ' ';
	
	  var rules = this.rules = {
	    skip: [],
	    cancel: [],
	    join: []
	  };
	
	  function makeTruthyCssClassMap(classString) {
	    if (!classString) {
	      return null;
	    }
	
	    var keys = classString.split(ONE_SPACE);
	    var map = Object.create(null);
	
	    forEach(keys, function(key) {
	      map[key] = true;
	    });
	    return map;
	  }
	
	  function hasMatchingClasses(newClassString, currentClassString) {
	    if (newClassString && currentClassString) {
	      var currentClassMap = makeTruthyCssClassMap(currentClassString);
	      return newClassString.split(ONE_SPACE).some(function(className) {
	        return currentClassMap[className];
	      });
	    }
	  }
	
	  function isAllowed(ruleType, element, currentAnimation, previousAnimation) {
	    return rules[ruleType].some(function(fn) {
	      return fn(element, currentAnimation, previousAnimation);
	    });
	  }
	
	  function hasAnimationClasses(animation, and) {
	    var a = (animation.addClass || '').length > 0;
	    var b = (animation.removeClass || '').length > 0;
	    return and ? a && b : a || b;
	  }
	
	  rules.join.push(function(element, newAnimation, currentAnimation) {
	    // if the new animation is class-based then we can just tack that on
	    return !newAnimation.structural && hasAnimationClasses(newAnimation);
	  });
	
	  rules.skip.push(function(element, newAnimation, currentAnimation) {
	    // there is no need to animate anything if no classes are being added and
	    // there is no structural animation that will be triggered
	    return !newAnimation.structural && !hasAnimationClasses(newAnimation);
	  });
	
	  rules.skip.push(function(element, newAnimation, currentAnimation) {
	    // why should we trigger a new structural animation if the element will
	    // be removed from the DOM anyway?
	    return currentAnimation.event == 'leave' && newAnimation.structural;
	  });
	
	  rules.skip.push(function(element, newAnimation, currentAnimation) {
	    // if there is an ongoing current animation then don't even bother running the class-based animation
	    return currentAnimation.structural && currentAnimation.state === RUNNING_STATE && !newAnimation.structural;
	  });
	
	  rules.cancel.push(function(element, newAnimation, currentAnimation) {
	    // there can never be two structural animations running at the same time
	    return currentAnimation.structural && newAnimation.structural;
	  });
	
	  rules.cancel.push(function(element, newAnimation, currentAnimation) {
	    // if the previous animation is already running, but the new animation will
	    // be triggered, but the new animation is structural
	    return currentAnimation.state === RUNNING_STATE && newAnimation.structural;
	  });
	
	  rules.cancel.push(function(element, newAnimation, currentAnimation) {
	    // cancel the animation if classes added / removed in both animation cancel each other out,
	    // but only if the current animation isn't structural
	
	    if (currentAnimation.structural) return false;
	
	    var nA = newAnimation.addClass;
	    var nR = newAnimation.removeClass;
	    var cA = currentAnimation.addClass;
	    var cR = currentAnimation.removeClass;
	
	    // early detection to save the global CPU shortage :)
	    if ((isUndefined(nA) && isUndefined(nR)) || (isUndefined(cA) && isUndefined(cR))) {
	      return false;
	    }
	
	    return hasMatchingClasses(nA, cR) || hasMatchingClasses(nR, cA);
	  });
	
	  this.$get = ['$$rAF', '$rootScope', '$rootElement', '$document', '$$HashMap',
	               '$$animation', '$$AnimateRunner', '$templateRequest', '$$jqLite', '$$forceReflow',
	       function($$rAF,   $rootScope,   $rootElement,   $document,   $$HashMap,
	                $$animation,   $$AnimateRunner,   $templateRequest,   $$jqLite,   $$forceReflow) {
	
	    var activeAnimationsLookup = new $$HashMap();
	    var disabledElementsLookup = new $$HashMap();
	    var animationsEnabled = null;
	
	    function postDigestTaskFactory() {
	      var postDigestCalled = false;
	      return function(fn) {
	        // we only issue a call to postDigest before
	        // it has first passed. This prevents any callbacks
	        // from not firing once the animation has completed
	        // since it will be out of the digest cycle.
	        if (postDigestCalled) {
	          fn();
	        } else {
	          $rootScope.$$postDigest(function() {
	            postDigestCalled = true;
	            fn();
	          });
	        }
	      };
	    }
	
	    // Wait until all directive and route-related templates are downloaded and
	    // compiled. The $templateRequest.totalPendingRequests variable keeps track of
	    // all of the remote templates being currently downloaded. If there are no
	    // templates currently downloading then the watcher will still fire anyway.
	    var deregisterWatch = $rootScope.$watch(
	      function() { return $templateRequest.totalPendingRequests === 0; },
	      function(isEmpty) {
	        if (!isEmpty) return;
	        deregisterWatch();
	
	        // Now that all templates have been downloaded, $animate will wait until
	        // the post digest queue is empty before enabling animations. By having two
	        // calls to $postDigest calls we can ensure that the flag is enabled at the
	        // very end of the post digest queue. Since all of the animations in $animate
	        // use $postDigest, it's important that the code below executes at the end.
	        // This basically means that the page is fully downloaded and compiled before
	        // any animations are triggered.
	        $rootScope.$$postDigest(function() {
	          $rootScope.$$postDigest(function() {
	            // we check for null directly in the event that the application already called
	            // .enabled() with whatever arguments that it provided it with
	            if (animationsEnabled === null) {
	              animationsEnabled = true;
	            }
	          });
	        });
	      }
	    );
	
	    var callbackRegistry = {};
	
	    // remember that the classNameFilter is set during the provider/config
	    // stage therefore we can optimize here and setup a helper function
	    var classNameFilter = $animateProvider.classNameFilter();
	    var isAnimatableClassName = !classNameFilter
	              ? function() { return true; }
	              : function(className) {
	                return classNameFilter.test(className);
	              };
	
	    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);
	
	    function normalizeAnimationDetails(element, animation) {
	      return mergeAnimationDetails(element, animation, {});
	    }
	
	    // IE9-11 has no method "contains" in SVG element and in Node.prototype. Bug #10259.
	    var contains = Node.prototype.contains || function(arg) {
	      // jshint bitwise: false
	      return this === arg || !!(this.compareDocumentPosition(arg) & 16);
	      // jshint bitwise: true
	    };
	
	    function findCallbacks(parent, element, event) {
	      var targetNode = getDomNode(element);
	      var targetParentNode = getDomNode(parent);
	
	      var matches = [];
	      var entries = callbackRegistry[event];
	      if (entries) {
	        forEach(entries, function(entry) {
	          if (contains.call(entry.node, targetNode)) {
	            matches.push(entry.callback);
	          } else if (event === 'leave' && contains.call(entry.node, targetParentNode)) {
	            matches.push(entry.callback);
	          }
	        });
	      }
	
	      return matches;
	    }
	
	    var $animate = {
	      on: function(event, container, callback) {
	        var node = extractElementNode(container);
	        callbackRegistry[event] = callbackRegistry[event] || [];
	        callbackRegistry[event].push({
	          node: node,
	          callback: callback
	        });
	
	        // Remove the callback when the element is removed from the DOM
	        jqLite(container).on('$destroy', function() {
	          $animate.off(event, container, callback);
	        });
	      },
	
	      off: function(event, container, callback) {
	        var entries = callbackRegistry[event];
	        if (!entries) return;
	
	        callbackRegistry[event] = arguments.length === 1
	            ? null
	            : filterFromRegistry(entries, container, callback);
	
	        function filterFromRegistry(list, matchContainer, matchCallback) {
	          var containerNode = extractElementNode(matchContainer);
	          return list.filter(function(entry) {
	            var isMatch = entry.node === containerNode &&
	                            (!matchCallback || entry.callback === matchCallback);
	            return !isMatch;
	          });
	        }
	      },
	
	      pin: function(element, parentElement) {
	        assertArg(isElement(element), 'element', 'not an element');
	        assertArg(isElement(parentElement), 'parentElement', 'not an element');
	        element.data(NG_ANIMATE_PIN_DATA, parentElement);
	      },
	
	      push: function(element, event, options, domOperation) {
	        options = options || {};
	        options.domOperation = domOperation;
	        return queueAnimation(element, event, options);
	      },
	
	      // this method has four signatures:
	      //  () - global getter
	      //  (bool) - global setter
	      //  (element) - element getter
	      //  (element, bool) - element setter<F37>
	      enabled: function(element, bool) {
	        var argCount = arguments.length;
	
	        if (argCount === 0) {
	          // () - Global getter
	          bool = !!animationsEnabled;
	        } else {
	          var hasElement = isElement(element);
	
	          if (!hasElement) {
	            // (bool) - Global setter
	            bool = animationsEnabled = !!element;
	          } else {
	            var node = getDomNode(element);
	            var recordExists = disabledElementsLookup.get(node);
	
	            if (argCount === 1) {
	              // (element) - Element getter
	              bool = !recordExists;
	            } else {
	              // (element, bool) - Element setter
	              disabledElementsLookup.put(node, !bool);
	            }
	          }
	        }
	
	        return bool;
	      }
	    };
	
	    return $animate;
	
	    function queueAnimation(element, event, initialOptions) {
	      // we always make a copy of the options since
	      // there should never be any side effects on
	      // the input data when running `$animateCss`.
	      var options = copy(initialOptions);
	
	      var node, parent;
	      element = stripCommentsFromElement(element);
	      if (element) {
	        node = getDomNode(element);
	        parent = element.parent();
	      }
	
	      options = prepareAnimationOptions(options);
	
	      // we create a fake runner with a working promise.
	      // These methods will become available after the digest has passed
	      var runner = new $$AnimateRunner();
	
	      // this is used to trigger callbacks in postDigest mode
	      var runInNextPostDigestOrNow = postDigestTaskFactory();
	
	      if (isArray(options.addClass)) {
	        options.addClass = options.addClass.join(' ');
	      }
	
	      if (options.addClass && !isString(options.addClass)) {
	        options.addClass = null;
	      }
	
	      if (isArray(options.removeClass)) {
	        options.removeClass = options.removeClass.join(' ');
	      }
	
	      if (options.removeClass && !isString(options.removeClass)) {
	        options.removeClass = null;
	      }
	
	      if (options.from && !isObject(options.from)) {
	        options.from = null;
	      }
	
	      if (options.to && !isObject(options.to)) {
	        options.to = null;
	      }
	
	      // there are situations where a directive issues an animation for
	      // a jqLite wrapper that contains only comment nodes... If this
	      // happens then there is no way we can perform an animation
	      if (!node) {
	        close();
	        return runner;
	      }
	
	      var className = [node.className, options.addClass, options.removeClass].join(' ');
	      if (!isAnimatableClassName(className)) {
	        close();
	        return runner;
	      }
	
	      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;
	
	      // this is a hard disable of all animations for the application or on
	      // the element itself, therefore  there is no need to continue further
	      // past this point if not enabled
	      // Animations are also disabled if the document is currently hidden (page is not visible
	      // to the user), because browsers slow down or do not flush calls to requestAnimationFrame
	      var skipAnimations = !animationsEnabled || $document[0].hidden || disabledElementsLookup.get(node);
	      var existingAnimation = (!skipAnimations && activeAnimationsLookup.get(node)) || {};
	      var hasExistingAnimation = !!existingAnimation.state;
	
	      // there is no point in traversing the same collection of parent ancestors if a followup
	      // animation will be run on the same element that already did all that checking work
	      if (!skipAnimations && (!hasExistingAnimation || existingAnimation.state != PRE_DIGEST_STATE)) {
	        skipAnimations = !areAnimationsAllowed(element, parent, event);
	      }
	
	      if (skipAnimations) {
	        close();
	        return runner;
	      }
	
	      if (isStructural) {
	        closeChildAnimations(element);
	      }
	
	      var newAnimation = {
	        structural: isStructural,
	        element: element,
	        event: event,
	        addClass: options.addClass,
	        removeClass: options.removeClass,
	        close: close,
	        options: options,
	        runner: runner
	      };
	
	      if (hasExistingAnimation) {
	        var skipAnimationFlag = isAllowed('skip', element, newAnimation, existingAnimation);
	        if (skipAnimationFlag) {
	          if (existingAnimation.state === RUNNING_STATE) {
	            close();
	            return runner;
	          } else {
	            mergeAnimationDetails(element, existingAnimation, newAnimation);
	            return existingAnimation.runner;
	          }
	        }
	        var cancelAnimationFlag = isAllowed('cancel', element, newAnimation, existingAnimation);
	        if (cancelAnimationFlag) {
	          if (existingAnimation.state === RUNNING_STATE) {
	            // this will end the animation right away and it is safe
	            // to do so since the animation is already running and the
	            // runner callback code will run in async
	            existingAnimation.runner.end();
	          } else if (existingAnimation.structural) {
	            // this means that the animation is queued into a digest, but
	            // hasn't started yet. Therefore it is safe to run the close
	            // method which will call the runner methods in async.
	            existingAnimation.close();
	          } else {
	            // this will merge the new animation options into existing animation options
	            mergeAnimationDetails(element, existingAnimation, newAnimation);
	
	            return existingAnimation.runner;
	          }
	        } else {
	          // a joined animation means that this animation will take over the existing one
	          // so an example would involve a leave animation taking over an enter. Then when
	          // the postDigest kicks in the enter will be ignored.
	          var joinAnimationFlag = isAllowed('join', element, newAnimation, existingAnimation);
	          if (joinAnimationFlag) {
	            if (existingAnimation.state === RUNNING_STATE) {
	              normalizeAnimationDetails(element, newAnimation);
	            } else {
	              applyGeneratedPreparationClasses(element, isStructural ? event : null, options);
	
	              event = newAnimation.event = existingAnimation.event;
	              options = mergeAnimationDetails(element, existingAnimation, newAnimation);
	
	              //we return the same runner since only the option values of this animation will
	              //be fed into the `existingAnimation`.
	              return existingAnimation.runner;
	            }
	          }
	        }
	      } else {
	        // normalization in this case means that it removes redundant CSS classes that
	        // already exist (addClass) or do not exist (removeClass) on the element
	        normalizeAnimationDetails(element, newAnimation);
	      }
	
	      // when the options are merged and cleaned up we may end up not having to do
	      // an animation at all, therefore we should check this before issuing a post
	      // digest callback. Structural animations will always run no matter what.
	      var isValidAnimation = newAnimation.structural;
	      if (!isValidAnimation) {
	        // animate (from/to) can be quickly checked first, otherwise we check if any classes are present
	        isValidAnimation = (newAnimation.event === 'animate' && Object.keys(newAnimation.options.to || {}).length > 0)
	                            || hasAnimationClasses(newAnimation);
	      }
	
	      if (!isValidAnimation) {
	        close();
	        clearElementAnimationState(element);
	        return runner;
	      }
	
	      // the counter keeps track of cancelled animations
	      var counter = (existingAnimation.counter || 0) + 1;
	      newAnimation.counter = counter;
	
	      markElementAnimationState(element, PRE_DIGEST_STATE, newAnimation);
	
	      $rootScope.$$postDigest(function() {
	        var animationDetails = activeAnimationsLookup.get(node);
	        var animationCancelled = !animationDetails;
	        animationDetails = animationDetails || {};
	
	        // if addClass/removeClass is called before something like enter then the
	        // registered parent element may not be present. The code below will ensure
	        // that a final value for parent element is obtained
	        var parentElement = element.parent() || [];
	
	        // animate/structural/class-based animations all have requirements. Otherwise there
	        // is no point in performing an animation. The parent node must also be set.
	        var isValidAnimation = parentElement.length > 0
	                                && (animationDetails.event === 'animate'
	                                    || animationDetails.structural
	                                    || hasAnimationClasses(animationDetails));
	
	        // this means that the previous animation was cancelled
	        // even if the follow-up animation is the same event
	        if (animationCancelled || animationDetails.counter !== counter || !isValidAnimation) {
	          // if another animation did not take over then we need
	          // to make sure that the domOperation and options are
	          // handled accordingly
	          if (animationCancelled) {
	            applyAnimationClasses(element, options);
	            applyAnimationStyles(element, options);
	          }
	
	          // if the event changed from something like enter to leave then we do
	          // it, otherwise if it's the same then the end result will be the same too
	          if (animationCancelled || (isStructural && animationDetails.event !== event)) {
	            options.domOperation();
	            runner.end();
	          }
	
	          // in the event that the element animation was not cancelled or a follow-up animation
	          // isn't allowed to animate from here then we need to clear the state of the element
	          // so that any future animations won't read the expired animation data.
	          if (!isValidAnimation) {
	            clearElementAnimationState(element);
	          }
	
	          return;
	        }
	
	        // this combined multiple class to addClass / removeClass into a setClass event
	        // so long as a structural event did not take over the animation
	        event = !animationDetails.structural && hasAnimationClasses(animationDetails, true)
	            ? 'setClass'
	            : animationDetails.event;
	
	        markElementAnimationState(element, RUNNING_STATE);
	        var realRunner = $$animation(element, event, animationDetails.options);
	
	        realRunner.done(function(status) {
	          close(!status);
	          var animationDetails = activeAnimationsLookup.get(node);
	          if (animationDetails && animationDetails.counter === counter) {
	            clearElementAnimationState(getDomNode(element));
	          }
	          notifyProgress(runner, event, 'close', {});
	        });
	
	        // this will update the runner's flow-control events based on
	        // the `realRunner` object.
	        runner.setHost(realRunner);
	        notifyProgress(runner, event, 'start', {});
	      });
	
	      return runner;
	
	      function notifyProgress(runner, event, phase, data) {
	        runInNextPostDigestOrNow(function() {
	          var callbacks = findCallbacks(parent, element, event);
	          if (callbacks.length) {
	            // do not optimize this call here to RAF because
	            // we don't know how heavy the callback code here will
	            // be and if this code is buffered then this can
	            // lead to a performance regression.
	            $$rAF(function() {
	              forEach(callbacks, function(callback) {
	                callback(element, phase, data);
	              });
	            });
	          }
	        });
	        runner.progress(event, phase, data);
	      }
	
	      function close(reject) { // jshint ignore:line
	        clearGeneratedClasses(element, options);
	        applyAnimationClasses(element, options);
	        applyAnimationStyles(element, options);
	        options.domOperation();
	        runner.complete(!reject);
	      }
	    }
	
	    function closeChildAnimations(element) {
	      var node = getDomNode(element);
	      var children = node.querySelectorAll('[' + NG_ANIMATE_ATTR_NAME + ']');
	      forEach(children, function(child) {
	        var state = parseInt(child.getAttribute(NG_ANIMATE_ATTR_NAME));
	        var animationDetails = activeAnimationsLookup.get(child);
	        if (animationDetails) {
	          switch (state) {
	            case RUNNING_STATE:
	              animationDetails.runner.end();
	              /* falls through */
	            case PRE_DIGEST_STATE:
	              activeAnimationsLookup.remove(child);
	              break;
	          }
	        }
	      });
	    }
	
	    function clearElementAnimationState(element) {
	      var node = getDomNode(element);
	      node.removeAttribute(NG_ANIMATE_ATTR_NAME);
	      activeAnimationsLookup.remove(node);
	    }
	
	    function isMatchingElement(nodeOrElmA, nodeOrElmB) {
	      return getDomNode(nodeOrElmA) === getDomNode(nodeOrElmB);
	    }
	
	    /**
	     * This fn returns false if any of the following is true:
	     * a) animations on any parent element are disabled, and animations on the element aren't explicitly allowed
	     * b) a parent element has an ongoing structural animation, and animateChildren is false
	     * c) the element is not a child of the body
	     * d) the element is not a child of the $rootElement
	     */
	    function areAnimationsAllowed(element, parentElement, event) {
	      var bodyElement = jqLite($document[0].body);
	      var bodyElementDetected = isMatchingElement(element, bodyElement) || element[0].nodeName === 'HTML';
	      var rootElementDetected = isMatchingElement(element, $rootElement);
	      var parentAnimationDetected = false;
	      var animateChildren;
	      var elementDisabled = disabledElementsLookup.get(getDomNode(element));
	
	      var parentHost = jqLite.data(element[0], NG_ANIMATE_PIN_DATA);
	      if (parentHost) {
	        parentElement = parentHost;
	      }
	
	      parentElement = getDomNode(parentElement);
	
	      while (parentElement) {
	        if (!rootElementDetected) {
	          // angular doesn't want to attempt to animate elements outside of the application
	          // therefore we need to ensure that the rootElement is an ancestor of the current element
	          rootElementDetected = isMatchingElement(parentElement, $rootElement);
	        }
	
	        if (parentElement.nodeType !== ELEMENT_NODE) {
	          // no point in inspecting the #document element
	          break;
	        }
	
	        var details = activeAnimationsLookup.get(parentElement) || {};
	        // either an enter, leave or move animation will commence
	        // therefore we can't allow any animations to take place
	        // but if a parent animation is class-based then that's ok
	        if (!parentAnimationDetected) {
	          var parentElementDisabled = disabledElementsLookup.get(parentElement);
	
	          if (parentElementDisabled === true && elementDisabled !== false) {
	            // disable animations if the user hasn't explicitly enabled animations on the
	            // current element
	            elementDisabled = true;
	            // element is disabled via parent element, no need to check anything else
	            break;
	          } else if (parentElementDisabled === false) {
	            elementDisabled = false;
	          }
	          parentAnimationDetected = details.structural;
	        }
	
	        if (isUndefined(animateChildren) || animateChildren === true) {
	          var value = jqLite.data(parentElement, NG_ANIMATE_CHILDREN_DATA);
	          if (isDefined(value)) {
	            animateChildren = value;
	          }
	        }
	
	        // there is no need to continue traversing at this point
	        if (parentAnimationDetected && animateChildren === false) break;
	
	        if (!bodyElementDetected) {
	          // we also need to ensure that the element is or will be a part of the body element
	          // otherwise it is pointless to even issue an animation to be rendered
	          bodyElementDetected = isMatchingElement(parentElement, bodyElement);
	        }
	
	        if (bodyElementDetected && rootElementDetected) {
	          // If both body and root have been found, any other checks are pointless,
	          // as no animation data should live outside the application
	          break;
	        }
	
	        if (!rootElementDetected) {
	          // If no rootElement is detected, check if the parentElement is pinned to another element
	          parentHost = jqLite.data(parentElement, NG_ANIMATE_PIN_DATA);
	          if (parentHost) {
	            // The pin target element becomes the next parent element
	            parentElement = getDomNode(parentHost);
	            continue;
	          }
	        }
	
	        parentElement = parentElement.parentNode;
	      }
	
	      var allowAnimation = (!parentAnimationDetected || animateChildren) && elementDisabled !== true;
	      return allowAnimation && rootElementDetected && bodyElementDetected;
	    }
	
	    function markElementAnimationState(element, state, details) {
	      details = details || {};
	      details.state = state;
	
	      var node = getDomNode(element);
	      node.setAttribute(NG_ANIMATE_ATTR_NAME, state);
	
	      var oldValue = activeAnimationsLookup.get(node);
	      var newValue = oldValue
	          ? extend(oldValue, details)
	          : details;
	      activeAnimationsLookup.put(node, newValue);
	    }
	  }];
	}];
	
	var $$AnimationProvider = ['$animateProvider', function($animateProvider) {
	  var NG_ANIMATE_REF_ATTR = 'ng-animate-ref';
	
	  var drivers = this.drivers = [];
	
	  var RUNNER_STORAGE_KEY = '$$animationRunner';
	
	  function setRunner(element, runner) {
	    element.data(RUNNER_STORAGE_KEY, runner);
	  }
	
	  function removeRunner(element) {
	    element.removeData(RUNNER_STORAGE_KEY);
	  }
	
	  function getRunner(element) {
	    return element.data(RUNNER_STORAGE_KEY);
	  }
	
	  this.$get = ['$$jqLite', '$rootScope', '$injector', '$$AnimateRunner', '$$HashMap', '$$rAFScheduler',
	       function($$jqLite,   $rootScope,   $injector,   $$AnimateRunner,   $$HashMap,   $$rAFScheduler) {
	
	    var animationQueue = [];
	    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);
	
	    function sortAnimations(animations) {
	      var tree = { children: [] };
	      var i, lookup = new $$HashMap();
	
	      // this is done first beforehand so that the hashmap
	      // is filled with a list of the elements that will be animated
	      for (i = 0; i < animations.length; i++) {
	        var animation = animations[i];
	        lookup.put(animation.domNode, animations[i] = {
	          domNode: animation.domNode,
	          fn: animation.fn,
	          children: []
	        });
	      }
	
	      for (i = 0; i < animations.length; i++) {
	        processNode(animations[i]);
	      }
	
	      return flatten(tree);
	
	      function processNode(entry) {
	        if (entry.processed) return entry;
	        entry.processed = true;
	
	        var elementNode = entry.domNode;
	        var parentNode = elementNode.parentNode;
	        lookup.put(elementNode, entry);
	
	        var parentEntry;
	        while (parentNode) {
	          parentEntry = lookup.get(parentNode);
	          if (parentEntry) {
	            if (!parentEntry.processed) {
	              parentEntry = processNode(parentEntry);
	            }
	            break;
	          }
	          parentNode = parentNode.parentNode;
	        }
	
	        (parentEntry || tree).children.push(entry);
	        return entry;
	      }
	
	      function flatten(tree) {
	        var result = [];
	        var queue = [];
	        var i;
	
	        for (i = 0; i < tree.children.length; i++) {
	          queue.push(tree.children[i]);
	        }
	
	        var remainingLevelEntries = queue.length;
	        var nextLevelEntries = 0;
	        var row = [];
	
	        for (i = 0; i < queue.length; i++) {
	          var entry = queue[i];
	          if (remainingLevelEntries <= 0) {
	            remainingLevelEntries = nextLevelEntries;
	            nextLevelEntries = 0;
	            result.push(row);
	            row = [];
	          }
	          row.push(entry.fn);
	          entry.children.forEach(function(childEntry) {
	            nextLevelEntries++;
	            queue.push(childEntry);
	          });
	          remainingLevelEntries--;
	        }
	
	        if (row.length) {
	          result.push(row);
	        }
	
	        return result;
	      }
	    }
	
	    // TODO(matsko): document the signature in a better way
	    return function(element, event, options) {
	      options = prepareAnimationOptions(options);
	      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;
	
	      // there is no animation at the current moment, however
	      // these runner methods will get later updated with the
	      // methods leading into the driver's end/cancel methods
	      // for now they just stop the animation from starting
	      var runner = new $$AnimateRunner({
	        end: function() { close(); },
	        cancel: function() { close(true); }
	      });
	
	      if (!drivers.length) {
	        close();
	        return runner;
	      }
	
	      setRunner(element, runner);
	
	      var classes = mergeClasses(element.attr('class'), mergeClasses(options.addClass, options.removeClass));
	      var tempClasses = options.tempClasses;
	      if (tempClasses) {
	        classes += ' ' + tempClasses;
	        options.tempClasses = null;
	      }
	
	      var prepareClassName;
	      if (isStructural) {
	        prepareClassName = 'ng-' + event + PREPARE_CLASS_SUFFIX;
	        $$jqLite.addClass(element, prepareClassName);
	      }
	
	      animationQueue.push({
	        // this data is used by the postDigest code and passed into
	        // the driver step function
	        element: element,
	        classes: classes,
	        event: event,
	        structural: isStructural,
	        options: options,
	        beforeStart: beforeStart,
	        close: close
	      });
	
	      element.on('$destroy', handleDestroyedElement);
	
	      // we only want there to be one function called within the post digest
	      // block. This way we can group animations for all the animations that
	      // were apart of the same postDigest flush call.
	      if (animationQueue.length > 1) return runner;
	
	      $rootScope.$$postDigest(function() {
	        var animations = [];
	        forEach(animationQueue, function(entry) {
	          // the element was destroyed early on which removed the runner
	          // form its storage. This means we can't animate this element
	          // at all and it already has been closed due to destruction.
	          if (getRunner(entry.element)) {
	            animations.push(entry);
	          } else {
	            entry.close();
	          }
	        });
	
	        // now any future animations will be in another postDigest
	        animationQueue.length = 0;
	
	        var groupedAnimations = groupAnimations(animations);
	        var toBeSortedAnimations = [];
	
	        forEach(groupedAnimations, function(animationEntry) {
	          toBeSortedAnimations.push({
	            domNode: getDomNode(animationEntry.from ? animationEntry.from.element : animationEntry.element),
	            fn: function triggerAnimationStart() {
	              // it's important that we apply the `ng-animate` CSS class and the
	              // temporary classes before we do any driver invoking since these
	              // CSS classes may be required for proper CSS detection.
	              animationEntry.beforeStart();
	
	              var startAnimationFn, closeFn = animationEntry.close;
	
	              // in the event that the element was removed before the digest runs or
	              // during the RAF sequencing then we should not trigger the animation.
	              var targetElement = animationEntry.anchors
	                  ? (animationEntry.from.element || animationEntry.to.element)
	                  : animationEntry.element;
	
	              if (getRunner(targetElement)) {
	                var operation = invokeFirstDriver(animationEntry);
	                if (operation) {
	                  startAnimationFn = operation.start;
	                }
	              }
	
	              if (!startAnimationFn) {
	                closeFn();
	              } else {
	                var animationRunner = startAnimationFn();
	                animationRunner.done(function(status) {
	                  closeFn(!status);
	                });
	                updateAnimationRunners(animationEntry, animationRunner);
	              }
	            }
	          });
	        });
	
	        // we need to sort each of the animations in order of parent to child
	        // relationships. This ensures that the child classes are applied at the
	        // right time.
	        $$rAFScheduler(sortAnimations(toBeSortedAnimations));
	      });
	
	      return runner;
	
	      // TODO(matsko): change to reference nodes
	      function getAnchorNodes(node) {
	        var SELECTOR = '[' + NG_ANIMATE_REF_ATTR + ']';
	        var items = node.hasAttribute(NG_ANIMATE_REF_ATTR)
	              ? [node]
	              : node.querySelectorAll(SELECTOR);
	        var anchors = [];
	        forEach(items, function(node) {
	          var attr = node.getAttribute(NG_ANIMATE_REF_ATTR);
	          if (attr && attr.length) {
	            anchors.push(node);
	          }
	        });
	        return anchors;
	      }
	
	      function groupAnimations(animations) {
	        var preparedAnimations = [];
	        var refLookup = {};
	        forEach(animations, function(animation, index) {
	          var element = animation.element;
	          var node = getDomNode(element);
	          var event = animation.event;
	          var enterOrMove = ['enter', 'move'].indexOf(event) >= 0;
	          var anchorNodes = animation.structural ? getAnchorNodes(node) : [];
	
	          if (anchorNodes.length) {
	            var direction = enterOrMove ? 'to' : 'from';
	
	            forEach(anchorNodes, function(anchor) {
	              var key = anchor.getAttribute(NG_ANIMATE_REF_ATTR);
	              refLookup[key] = refLookup[key] || {};
	              refLookup[key][direction] = {
	                animationID: index,
	                element: jqLite(anchor)
	              };
	            });
	          } else {
	            preparedAnimations.push(animation);
	          }
	        });
	
	        var usedIndicesLookup = {};
	        var anchorGroups = {};
	        forEach(refLookup, function(operations, key) {
	          var from = operations.from;
	          var to = operations.to;
	
	          if (!from || !to) {
	            // only one of these is set therefore we can't have an
	            // anchor animation since all three pieces are required
	            var index = from ? from.animationID : to.animationID;
	            var indexKey = index.toString();
	            if (!usedIndicesLookup[indexKey]) {
	              usedIndicesLookup[indexKey] = true;
	              preparedAnimations.push(animations[index]);
	            }
	            return;
	          }
	
	          var fromAnimation = animations[from.animationID];
	          var toAnimation = animations[to.animationID];
	          var lookupKey = from.animationID.toString();
	          if (!anchorGroups[lookupKey]) {
	            var group = anchorGroups[lookupKey] = {
	              structural: true,
	              beforeStart: function() {
	                fromAnimation.beforeStart();
	                toAnimation.beforeStart();
	              },
	              close: function() {
	                fromAnimation.close();
	                toAnimation.close();
	              },
	              classes: cssClassesIntersection(fromAnimation.classes, toAnimation.classes),
	              from: fromAnimation,
	              to: toAnimation,
	              anchors: [] // TODO(matsko): change to reference nodes
	            };
	
	            // the anchor animations require that the from and to elements both have at least
	            // one shared CSS class which effectively marries the two elements together to use
	            // the same animation driver and to properly sequence the anchor animation.
	            if (group.classes.length) {
	              preparedAnimations.push(group);
	            } else {
	              preparedAnimations.push(fromAnimation);
	              preparedAnimations.push(toAnimation);
	            }
	          }
	
	          anchorGroups[lookupKey].anchors.push({
	            'out': from.element, 'in': to.element
	          });
	        });
	
	        return preparedAnimations;
	      }
	
	      function cssClassesIntersection(a,b) {
	        a = a.split(' ');
	        b = b.split(' ');
	        var matches = [];
	
	        for (var i = 0; i < a.length; i++) {
	          var aa = a[i];
	          if (aa.substring(0,3) === 'ng-') continue;
	
	          for (var j = 0; j < b.length; j++) {
	            if (aa === b[j]) {
	              matches.push(aa);
	              break;
	            }
	          }
	        }
	
	        return matches.join(' ');
	      }
	
	      function invokeFirstDriver(animationDetails) {
	        // we loop in reverse order since the more general drivers (like CSS and JS)
	        // may attempt more elements, but custom drivers are more particular
	        for (var i = drivers.length - 1; i >= 0; i--) {
	          var driverName = drivers[i];
	          if (!$injector.has(driverName)) continue; // TODO(matsko): remove this check
	
	          var factory = $injector.get(driverName);
	          var driver = factory(animationDetails);
	          if (driver) {
	            return driver;
	          }
	        }
	      }
	
	      function beforeStart() {
	        element.addClass(NG_ANIMATE_CLASSNAME);
	        if (tempClasses) {
	          $$jqLite.addClass(element, tempClasses);
	        }
	        if (prepareClassName) {
	          $$jqLite.removeClass(element, prepareClassName);
	          prepareClassName = null;
	        }
	      }
	
	      function updateAnimationRunners(animation, newRunner) {
	        if (animation.from && animation.to) {
	          update(animation.from.element);
	          update(animation.to.element);
	        } else {
	          update(animation.element);
	        }
	
	        function update(element) {
	          getRunner(element).setHost(newRunner);
	        }
	      }
	
	      function handleDestroyedElement() {
	        var runner = getRunner(element);
	        if (runner && (event !== 'leave' || !options.$$domOperationFired)) {
	          runner.end();
	        }
	      }
	
	      function close(rejected) { // jshint ignore:line
	        element.off('$destroy', handleDestroyedElement);
	        removeRunner(element);
	
	        applyAnimationClasses(element, options);
	        applyAnimationStyles(element, options);
	        options.domOperation();
	
	        if (tempClasses) {
	          $$jqLite.removeClass(element, tempClasses);
	        }
	
	        element.removeClass(NG_ANIMATE_CLASSNAME);
	        runner.complete(!rejected);
	      }
	    };
	  }];
	}];
	
	/**
	 * @ngdoc directive
	 * @name ngAnimateSwap
	 * @restrict A
	 * @scope
	 *
	 * @description
	 *
	 * ngAnimateSwap is a animation-oriented directive that allows for the container to
	 * be removed and entered in whenever the associated expression changes. A
	 * common usecase for this directive is a rotating banner or slider component which
	 * contains one image being present at a time. When the active image changes
	 * then the old image will perform a `leave` animation and the new element
	 * will be inserted via an `enter` animation.
	 *
	 * @animations
	 * | Animation                        | Occurs                               |
	 * |----------------------------------|--------------------------------------|
	 * | {@link ng.$animate#enter enter}  | when the new element is inserted to the DOM  |
	 * | {@link ng.$animate#leave leave}  | when the old element is removed from the DOM |
	 *
	 * @example
	 * <example name="ngAnimateSwap-directive" module="ngAnimateSwapExample"
	 *          deps="angular-animate.js"
	 *          animations="true" fixBase="true">
	 *   <file name="index.html">
	 *     <div class="container" ng-controller="AppCtrl">
	 *       <div ng-animate-swap="number" class="cell swap-animation" ng-class="colorClass(number)">
	 *         {{ number }}
	 *       </div>
	 *     </div>
	 *   </file>
	 *   <file name="script.js">
	 *     angular.module('ngAnimateSwapExample', ['ngAnimate'])
	 *       .controller('AppCtrl', ['$scope', '$interval', function($scope, $interval) {
	 *         $scope.number = 0;
	 *         $interval(function() {
	 *           $scope.number++;
	 *         }, 1000);
	 *
	 *         var colors = ['red','blue','green','yellow','orange'];
	 *         $scope.colorClass = function(number) {
	 *           return colors[number % colors.length];
	 *         };
	 *       }]);
	 *   </file>
	 *  <file name="animations.css">
	 *  .container {
	 *    height:250px;
	 *    width:250px;
	 *    position:relative;
	 *    overflow:hidden;
	 *    border:2px solid black;
	 *  }
	 *  .container .cell {
	 *    font-size:150px;
	 *    text-align:center;
	 *    line-height:250px;
	 *    position:absolute;
	 *    top:0;
	 *    left:0;
	 *    right:0;
	 *    border-bottom:2px solid black;
	 *  }
	 *  .swap-animation.ng-enter, .swap-animation.ng-leave {
	 *    transition:0.5s linear all;
	 *  }
	 *  .swap-animation.ng-enter {
	 *    top:-250px;
	 *  }
	 *  .swap-animation.ng-enter-active {
	 *    top:0px;
	 *  }
	 *  .swap-animation.ng-leave {
	 *    top:0px;
	 *  }
	 *  .swap-animation.ng-leave-active {
	 *    top:250px;
	 *  }
	 *  .red { background:red; }
	 *  .green { background:green; }
	 *  .blue { background:blue; }
	 *  .yellow { background:yellow; }
	 *  .orange { background:orange; }
	 *  </file>
	 * </example>
	 */
	var ngAnimateSwapDirective = ['$animate', '$rootScope', function($animate, $rootScope) {
	  return {
	    restrict: 'A',
	    transclude: 'element',
	    terminal: true,
	    priority: 600, // we use 600 here to ensure that the directive is caught before others
	    link: function(scope, $element, attrs, ctrl, $transclude) {
	      var previousElement, previousScope;
	      scope.$watchCollection(attrs.ngAnimateSwap || attrs['for'], function(value) {
	        if (previousElement) {
	          $animate.leave(previousElement);
	        }
	        if (previousScope) {
	          previousScope.$destroy();
	          previousScope = null;
	        }
	        if (value || value === 0) {
	          previousScope = scope.$new();
	          $transclude(previousScope, function(element) {
	            previousElement = element;
	            $animate.enter(element, null, $element);
	          });
	        }
	      });
	    }
	  };
	}];
	
	/* global angularAnimateModule: true,
	
	   ngAnimateSwapDirective,
	   $$AnimateAsyncRunFactory,
	   $$rAFSchedulerFactory,
	   $$AnimateChildrenDirective,
	   $$AnimateQueueProvider,
	   $$AnimationProvider,
	   $AnimateCssProvider,
	   $$AnimateCssDriverProvider,
	   $$AnimateJsProvider,
	   $$AnimateJsDriverProvider,
	*/
	
	/**
	 * @ngdoc module
	 * @name ngAnimate
	 * @description
	 *
	 * The `ngAnimate` module provides support for CSS-based animations (keyframes and transitions) as well as JavaScript-based animations via
	 * callback hooks. Animations are not enabled by default, however, by including `ngAnimate` the animation hooks are enabled for an Angular app.
	 *
	 * <div doc-module-components="ngAnimate"></div>
	 *
	 * # Usage
	 * Simply put, there are two ways to make use of animations when ngAnimate is used: by using **CSS** and **JavaScript**. The former works purely based
	 * using CSS (by using matching CSS selectors/styles) and the latter triggers animations that are registered via `module.animation()`. For
	 * both CSS and JS animations the sole requirement is to have a matching `CSS class` that exists both in the registered animation and within
	 * the HTML element that the animation will be triggered on.
	 *
	 * ## Directive Support
	 * The following directives are "animation aware":
	 *
	 * | Directive                                                                                                | Supported Animations                                                     |
	 * |----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------|
	 * | {@link ng.directive:ngRepeat#animations ngRepeat}                                                        | enter, leave and move                                                    |
	 * | {@link ngRoute.directive:ngView#animations ngView}                                                       | enter and leave                                                          |
	 * | {@link ng.directive:ngInclude#animations ngInclude}                                                      | enter and leave                                                          |
	 * | {@link ng.directive:ngSwitch#animations ngSwitch}                                                        | enter and leave                                                          |
	 * | {@link ng.directive:ngIf#animations ngIf}                                                                | enter and leave                                                          |
	 * | {@link ng.directive:ngClass#animations ngClass}                                                          | add and remove (the CSS class(es) present)                               |
	 * | {@link ng.directive:ngShow#animations ngShow} & {@link ng.directive:ngHide#animations ngHide}            | add and remove (the ng-hide class value)                                 |
	 * | {@link ng.directive:form#animation-hooks form} & {@link ng.directive:ngModel#animation-hooks ngModel}    | add and remove (dirty, pristine, valid, invalid & all other validations) |
	 * | {@link module:ngMessages#animations ngMessages}                                                          | add and remove (ng-active & ng-inactive)                                 |
	 * | {@link module:ngMessages#animations ngMessage}                                                           | enter and leave                                                          |
	 *
	 * (More information can be found by visiting each the documentation associated with each directive.)
	 *
	 * ## CSS-based Animations
	 *
	 * CSS-based animations with ngAnimate are unique since they require no JavaScript code at all. By using a CSS class that we reference between our HTML
	 * and CSS code we can create an animation that will be picked up by Angular when an the underlying directive performs an operation.
	 *
	 * The example below shows how an `enter` animation can be made possible on an element using `ng-if`:
	 *
	 * ```html
	 * <div ng-if="bool" class="fade">
	 *    Fade me in out
	 * </div>
	 * <button ng-click="bool=true">Fade In!</button>
	 * <button ng-click="bool=false">Fade Out!</button>
	 * ```
	 *
	 * Notice the CSS class **fade**? We can now create the CSS transition code that references this class:
	 *
	 * ```css
	 * /&#42; The starting CSS styles for the enter animation &#42;/
	 * .fade.ng-enter {
	 *   transition:0.5s linear all;
	 *   opacity:0;
	 * }
	 *
	 * /&#42; The finishing CSS styles for the enter animation &#42;/
	 * .fade.ng-enter.ng-enter-active {
	 *   opacity:1;
	 * }
	 * ```
	 *
	 * The key thing to remember here is that, depending on the animation event (which each of the directives above trigger depending on what's going on) two
	 * generated CSS classes will be applied to the element; in the example above we have `.ng-enter` and `.ng-enter-active`. For CSS transitions, the transition
	 * code **must** be defined within the starting CSS class (in this case `.ng-enter`). The destination class is what the transition will animate towards.
	 *
	 * If for example we wanted to create animations for `leave` and `move` (ngRepeat triggers move) then we can do so using the same CSS naming conventions:
	 *
	 * ```css
	 * /&#42; now the element will fade out before it is removed from the DOM &#42;/
	 * .fade.ng-leave {
	 *   transition:0.5s linear all;
	 *   opacity:1;
	 * }
	 * .fade.ng-leave.ng-leave-active {
	 *   opacity:0;
	 * }
	 * ```
	 *
	 * We can also make use of **CSS Keyframes** by referencing the keyframe animation within the starting CSS class:
	 *
	 * ```css
	 * /&#42; there is no need to define anything inside of the destination
	 * CSS class since the keyframe will take charge of the animation &#42;/
	 * .fade.ng-leave {
	 *   animation: my_fade_animation 0.5s linear;
	 *   -webkit-animation: my_fade_animation 0.5s linear;
	 * }
	 *
	 * @keyframes my_fade_animation {
	 *   from { opacity:1; }
	 *   to { opacity:0; }
	 * }
	 *
	 * @-webkit-keyframes my_fade_animation {
	 *   from { opacity:1; }
	 *   to { opacity:0; }
	 * }
	 * ```
	 *
	 * Feel free also mix transitions and keyframes together as well as any other CSS classes on the same element.
	 *
	 * ### CSS Class-based Animations
	 *
	 * Class-based animations (animations that are triggered via `ngClass`, `ngShow`, `ngHide` and some other directives) have a slightly different
	 * naming convention. Class-based animations are basic enough that a standard transition or keyframe can be referenced on the class being added
	 * and removed.
	 *
	 * For example if we wanted to do a CSS animation for `ngHide` then we place an animation on the `.ng-hide` CSS class:
	 *
	 * ```html
	 * <div ng-show="bool" class="fade">
	 *   Show and hide me
	 * </div>
	 * <button ng-click="bool=true">Toggle</button>
	 *
	 * <style>
	 * .fade.ng-hide {
	 *   transition:0.5s linear all;
	 *   opacity:0;
	 * }
	 * </style>
	 * ```
	 *
	 * All that is going on here with ngShow/ngHide behind the scenes is the `.ng-hide` class is added/removed (when the hidden state is valid). Since
	 * ngShow and ngHide are animation aware then we can match up a transition and ngAnimate handles the rest.
	 *
	 * In addition the addition and removal of the CSS class, ngAnimate also provides two helper methods that we can use to further decorate the animation
	 * with CSS styles.
	 *
	 * ```html
	 * <div ng-class="{on:onOff}" class="highlight">
	 *   Highlight this box
	 * </div>
	 * <button ng-click="onOff=!onOff">Toggle</button>
	 *
	 * <style>
	 * .highlight {
	 *   transition:0.5s linear all;
	 * }
	 * .highlight.on-add {
	 *   background:white;
	 * }
	 * .highlight.on {
	 *   background:yellow;
	 * }
	 * .highlight.on-remove {
	 *   background:black;
	 * }
	 * </style>
	 * ```
	 *
	 * We can also make use of CSS keyframes by placing them within the CSS classes.
	 *
	 *
	 * ### CSS Staggering Animations
	 * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a
	 * curtain-like effect. The ngAnimate module (versions >=1.2) supports staggering animations and the stagger effect can be
	 * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for
	 * the animation. The style property expected within the stagger class can either be a **transition-delay** or an
	 * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).
	 *
	 * ```css
	 * .my-animation.ng-enter {
	 *   /&#42; standard transition code &#42;/
	 *   transition: 1s linear all;
	 *   opacity:0;
	 * }
	 * .my-animation.ng-enter-stagger {
	 *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/
	 *   transition-delay: 0.1s;
	 *
	 *   /&#42; As of 1.4.4, this must always be set: it signals ngAnimate
	 *     to not accidentally inherit a delay property from another CSS class &#42;/
	 *   transition-duration: 0s;
	 * }
	 * .my-animation.ng-enter.ng-enter-active {
	 *   /&#42; standard transition styles &#42;/
	 *   opacity:1;
	 * }
	 * ```
	 *
	 * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations
	 * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this
	 * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation
	 * will also be reset if one or more animation frames have passed since the multiple calls to `$animate` were fired.
	 *
	 * The following code will issue the **ng-leave-stagger** event on the element provided:
	 *
	 * ```js
	 * var kids = parent.children();
	 *
	 * $animate.leave(kids[0]); //stagger index=0
	 * $animate.leave(kids[1]); //stagger index=1
	 * $animate.leave(kids[2]); //stagger index=2
	 * $animate.leave(kids[3]); //stagger index=3
	 * $animate.leave(kids[4]); //stagger index=4
	 *
	 * window.requestAnimationFrame(function() {
	 *   //stagger has reset itself
	 *   $animate.leave(kids[5]); //stagger index=0
	 *   $animate.leave(kids[6]); //stagger index=1
	 *
	 *   $scope.$digest();
	 * });
	 * ```
	 *
	 * Stagger animations are currently only supported within CSS-defined animations.
	 *
	 * ### The `ng-animate` CSS class
	 *
	 * When ngAnimate is animating an element it will apply the `ng-animate` CSS class to the element for the duration of the animation.
	 * This is a temporary CSS class and it will be removed once the animation is over (for both JavaScript and CSS-based animations).
	 *
	 * Therefore, animations can be applied to an element using this temporary class directly via CSS.
	 *
	 * ```css
	 * .zipper.ng-animate {
	 *   transition:0.5s linear all;
	 * }
	 * .zipper.ng-enter {
	 *   opacity:0;
	 * }
	 * .zipper.ng-enter.ng-enter-active {
	 *   opacity:1;
	 * }
	 * .zipper.ng-leave {
	 *   opacity:1;
	 * }
	 * .zipper.ng-leave.ng-leave-active {
	 *   opacity:0;
	 * }
	 * ```
	 *
	 * (Note that the `ng-animate` CSS class is reserved and it cannot be applied on an element directly since ngAnimate will always remove
	 * the CSS class once an animation has completed.)
	 *
	 *
	 * ### The `ng-[event]-prepare` class
	 *
	 * This is a special class that can be used to prevent unwanted flickering / flash of content before
	 * the actual animation starts. The class is added as soon as an animation is initialized, but removed
	 * before the actual animation starts (after waiting for a $digest).
	 * It is also only added for *structural* animations (`enter`, `move`, and `leave`).
	 *
	 * In practice, flickering can appear when nesting elements with structural animations such as `ngIf`
	 * into elements that have class-based animations such as `ngClass`.
	 *
	 * ```html
	 * <div ng-class="{red: myProp}">
	 *   <div ng-class="{blue: myProp}">
	 *     <div class="message" ng-if="myProp"></div>
	 *   </div>
	 * </div>
	 * ```
	 *
	 * It is possible that during the `enter` animation, the `.message` div will be briefly visible before it starts animating.
	 * In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:
	 *
	 * ```css
	 * .message.ng-enter-prepare {
	 *   opacity: 0;
	 * }
	 *
	 * ```
	 *
	 * ## JavaScript-based Animations
	 *
	 * ngAnimate also allows for animations to be consumed by JavaScript code. The approach is similar to CSS-based animations (where there is a shared
	 * CSS class that is referenced in our HTML code) but in addition we need to register the JavaScript animation on the module. By making use of the
	 * `module.animation()` module function we can register the animation.
	 *
	 * Let's see an example of a enter/leave animation using `ngRepeat`:
	 *
	 * ```html
	 * <div ng-repeat="item in items" class="slide">
	 *   {{ item }}
	 * </div>
	 * ```
	 *
	 * See the **slide** CSS class? Let's use that class to define an animation that we'll structure in our module code by using `module.animation`:
	 *
	 * ```js
	 * myModule.animation('.slide', [function() {
	 *   return {
	 *     // make note that other events (like addClass/removeClass)
	 *     // have different function input parameters
	 *     enter: function(element, doneFn) {
	 *       jQuery(element).fadeIn(1000, doneFn);
	 *
	 *       // remember to call doneFn so that angular
	 *       // knows that the animation has concluded
	 *     },
	 *
	 *     move: function(element, doneFn) {
	 *       jQuery(element).fadeIn(1000, doneFn);
	 *     },
	 *
	 *     leave: function(element, doneFn) {
	 *       jQuery(element).fadeOut(1000, doneFn);
	 *     }
	 *   }
	 * }]);
	 * ```
	 *
	 * The nice thing about JS-based animations is that we can inject other services and make use of advanced animation libraries such as
	 * greensock.js and velocity.js.
	 *
	 * If our animation code class-based (meaning that something like `ngClass`, `ngHide` and `ngShow` triggers it) then we can still define
	 * our animations inside of the same registered animation, however, the function input arguments are a bit different:
	 *
	 * ```html
	 * <div ng-class="color" class="colorful">
	 *   this box is moody
	 * </div>
	 * <button ng-click="color='red'">Change to red</button>
	 * <button ng-click="color='blue'">Change to blue</button>
	 * <button ng-click="color='green'">Change to green</button>
	 * ```
	 *
	 * ```js
	 * myModule.animation('.colorful', [function() {
	 *   return {
	 *     addClass: function(element, className, doneFn) {
	 *       // do some cool animation and call the doneFn
	 *     },
	 *     removeClass: function(element, className, doneFn) {
	 *       // do some cool animation and call the doneFn
	 *     },
	 *     setClass: function(element, addedClass, removedClass, doneFn) {
	 *       // do some cool animation and call the doneFn
	 *     }
	 *   }
	 * }]);
	 * ```
	 *
	 * ## CSS + JS Animations Together
	 *
	 * AngularJS 1.4 and higher has taken steps to make the amalgamation of CSS and JS animations more flexible. However, unlike earlier versions of Angular,
	 * defining CSS and JS animations to work off of the same CSS class will not work anymore. Therefore the example below will only result in **JS animations taking
	 * charge of the animation**:
	 *
	 * ```html
	 * <div ng-if="bool" class="slide">
	 *   Slide in and out
	 * </div>
	 * ```
	 *
	 * ```js
	 * myModule.animation('.slide', [function() {
	 *   return {
	 *     enter: function(element, doneFn) {
	 *       jQuery(element).slideIn(1000, doneFn);
	 *     }
	 *   }
	 * }]);
	 * ```
	 *
	 * ```css
	 * .slide.ng-enter {
	 *   transition:0.5s linear all;
	 *   transform:translateY(-100px);
	 * }
	 * .slide.ng-enter.ng-enter-active {
	 *   transform:translateY(0);
	 * }
	 * ```
	 *
	 * Does this mean that CSS and JS animations cannot be used together? Do JS-based animations always have higher priority? We can make up for the
	 * lack of CSS animations by using the `$animateCss` service to trigger our own tweaked-out, CSS-based animations directly from
	 * our own JS-based animation code:
	 *
	 * ```js
	 * myModule.animation('.slide', ['$animateCss', function($animateCss) {
	 *   return {
	 *     enter: function(element) {
	*        // this will trigger `.slide.ng-enter` and `.slide.ng-enter-active`.
	 *       return $animateCss(element, {
	 *         event: 'enter',
	 *         structural: true
	 *       });
	 *     }
	 *   }
	 * }]);
	 * ```
	 *
	 * The nice thing here is that we can save bandwidth by sticking to our CSS-based animation code and we don't need to rely on a 3rd-party animation framework.
	 *
	 * The `$animateCss` service is very powerful since we can feed in all kinds of extra properties that will be evaluated and fed into a CSS transition or
	 * keyframe animation. For example if we wanted to animate the height of an element while adding and removing classes then we can do so by providing that
	 * data into `$animateCss` directly:
	 *
	 * ```js
	 * myModule.animation('.slide', ['$animateCss', function($animateCss) {
	 *   return {
	 *     enter: function(element) {
	 *       return $animateCss(element, {
	 *         event: 'enter',
	 *         structural: true,
	 *         addClass: 'maroon-setting',
	 *         from: { height:0 },
	 *         to: { height: 200 }
	 *       });
	 *     }
	 *   }
	 * }]);
	 * ```
	 *
	 * Now we can fill in the rest via our transition CSS code:
	 *
	 * ```css
	 * /&#42; the transition tells ngAnimate to make the animation happen &#42;/
	 * .slide.ng-enter { transition:0.5s linear all; }
	 *
	 * /&#42; this extra CSS class will be absorbed into the transition
	 * since the $animateCss code is adding the class &#42;/
	 * .maroon-setting { background:red; }
	 * ```
	 *
	 * And `$animateCss` will figure out the rest. Just make sure to have the `done()` callback fire the `doneFn` function to signal when the animation is over.
	 *
	 * To learn more about what's possible be sure to visit the {@link ngAnimate.$animateCss $animateCss service}.
	 *
	 * ## Animation Anchoring (via `ng-animate-ref`)
	 *
	 * ngAnimate in AngularJS 1.4 comes packed with the ability to cross-animate elements between
	 * structural areas of an application (like views) by pairing up elements using an attribute
	 * called `ng-animate-ref`.
	 *
	 * Let's say for example we have two views that are managed by `ng-view` and we want to show
	 * that there is a relationship between two components situated in within these views. By using the
	 * `ng-animate-ref` attribute we can identify that the two components are paired together and we
	 * can then attach an animation, which is triggered when the view changes.
	 *
	 * Say for example we have the following template code:
	 *
	 * ```html
	 * <!-- index.html -->
	 * <div ng-view class="view-animation">
	 * </div>
	 *
	 * <!-- home.html -->
	 * <a href="#/banner-page">
	 *   <img src="./banner.jpg" class="banner" ng-animate-ref="banner">
	 * </a>
	 *
	 * <!-- banner-page.html -->
	 * <img src="./banner.jpg" class="banner" ng-animate-ref="banner">
	 * ```
	 *
	 * Now, when the view changes (once the link is clicked), ngAnimate will examine the
	 * HTML contents to see if there is a match reference between any components in the view
	 * that is leaving and the view that is entering. It will scan both the view which is being
	 * removed (leave) and inserted (enter) to see if there are any paired DOM elements that
	 * contain a matching ref value.
	 *
	 * The two images match since they share the same ref value. ngAnimate will now create a
	 * transport element (which is a clone of the first image element) and it will then attempt
	 * to animate to the position of the second image element in the next view. For the animation to
	 * work a special CSS class called `ng-anchor` will be added to the transported element.
	 *
	 * We can now attach a transition onto the `.banner.ng-anchor` CSS class and then
	 * ngAnimate will handle the entire transition for us as well as the addition and removal of
	 * any changes of CSS classes between the elements:
	 *
	 * ```css
	 * .banner.ng-anchor {
	 *   /&#42; this animation will last for 1 second since there are
	 *          two phases to the animation (an `in` and an `out` phase) &#42;/
	 *   transition:0.5s linear all;
	 * }
	 * ```
	 *
	 * We also **must** include animations for the views that are being entered and removed
	 * (otherwise anchoring wouldn't be possible since the new view would be inserted right away).
	 *
	 * ```css
	 * .view-animation.ng-enter, .view-animation.ng-leave {
	 *   transition:0.5s linear all;
	 *   position:fixed;
	 *   left:0;
	 *   top:0;
	 *   width:100%;
	 * }
	 * .view-animation.ng-enter {
	 *   transform:translateX(100%);
	 * }
	 * .view-animation.ng-leave,
	 * .view-animation.ng-enter.ng-enter-active {
	 *   transform:translateX(0%);
	 * }
	 * .view-animation.ng-leave.ng-leave-active {
	 *   transform:translateX(-100%);
	 * }
	 * ```
	 *
	 * Now we can jump back to the anchor animation. When the animation happens, there are two stages that occur:
	 * an `out` and an `in` stage. The `out` stage happens first and that is when the element is animated away
	 * from its origin. Once that animation is over then the `in` stage occurs which animates the
	 * element to its destination. The reason why there are two animations is to give enough time
	 * for the enter animation on the new element to be ready.
	 *
	 * The example above sets up a transition for both the in and out phases, but we can also target the out or
	 * in phases directly via `ng-anchor-out` and `ng-anchor-in`.
	 *
	 * ```css
	 * .banner.ng-anchor-out {
	 *   transition: 0.5s linear all;
	 *
	 *   /&#42; the scale will be applied during the out animation,
	 *          but will be animated away when the in animation runs &#42;/
	 *   transform: scale(1.2);
	 * }
	 *
	 * .banner.ng-anchor-in {
	 *   transition: 1s linear all;
	 * }
	 * ```
	 *
	 *
	 *
	 *
	 * ### Anchoring Demo
	 *
	  <example module="anchoringExample"
	           name="anchoringExample"
	           id="anchoringExample"
	           deps="angular-animate.js;angular-route.js"
	           animations="true">
	    <file name="index.html">
	      <a href="#/">Home</a>
	      <hr />
	      <div class="view-container">
	        <div ng-view class="view"></div>
	      </div>
	    </file>
	    <file name="script.js">
	      angular.module('anchoringExample', ['ngAnimate', 'ngRoute'])
	        .config(['$routeProvider', function($routeProvider) {
	          $routeProvider.when('/', {
	            templateUrl: 'home.html',
	            controller: 'HomeController as home'
	          });
	          $routeProvider.when('/profile/:id', {
	            templateUrl: 'profile.html',
	            controller: 'ProfileController as profile'
	          });
	        }])
	        .run(['$rootScope', function($rootScope) {
	          $rootScope.records = [
	            { id:1, title: "Miss Beulah Roob" },
	            { id:2, title: "Trent Morissette" },
	            { id:3, title: "Miss Ava Pouros" },
	            { id:4, title: "Rod Pouros" },
	            { id:5, title: "Abdul Rice" },
	            { id:6, title: "Laurie Rutherford Sr." },
	            { id:7, title: "Nakia McLaughlin" },
	            { id:8, title: "Jordon Blanda DVM" },
	            { id:9, title: "Rhoda Hand" },
	            { id:10, title: "Alexandrea Sauer" }
	          ];
	        }])
	        .controller('HomeController', [function() {
	          //empty
	        }])
	        .controller('ProfileController', ['$rootScope', '$routeParams', function($rootScope, $routeParams) {
	          var index = parseInt($routeParams.id, 10);
	          var record = $rootScope.records[index - 1];
	
	          this.title = record.title;
	          this.id = record.id;
	        }]);
	    </file>
	    <file name="home.html">
	      <h2>Welcome to the home page</h1>
	      <p>Please click on an element</p>
	      <a class="record"
	         ng-href="#/profile/{{ record.id }}"
	         ng-animate-ref="{{ record.id }}"
	         ng-repeat="record in records">
	        {{ record.title }}
	      </a>
	    </file>
	    <file name="profile.html">
	      <div class="profile record" ng-animate-ref="{{ profile.id }}">
	        {{ profile.title }}
	      </div>
	    </file>
	    <file name="animations.css">
	      .record {
	        display:block;
	        font-size:20px;
	      }
	      .profile {
	        background:black;
	        color:white;
	        font-size:100px;
	      }
	      .view-container {
	        position:relative;
	      }
	      .view-container > .view.ng-animate {
	        position:absolute;
	        top:0;
	        left:0;
	        width:100%;
	        min-height:500px;
	      }
	      .view.ng-enter, .view.ng-leave,
	      .record.ng-anchor {
	        transition:0.5s linear all;
	      }
	      .view.ng-enter {
	        transform:translateX(100%);
	      }
	      .view.ng-enter.ng-enter-active, .view.ng-leave {
	        transform:translateX(0%);
	      }
	      .view.ng-leave.ng-leave-active {
	        transform:translateX(-100%);
	      }
	      .record.ng-anchor-out {
	        background:red;
	      }
	    </file>
	  </example>
	 *
	 * ### How is the element transported?
	 *
	 * When an anchor animation occurs, ngAnimate will clone the starting element and position it exactly where the starting
	 * element is located on screen via absolute positioning. The cloned element will be placed inside of the root element
	 * of the application (where ng-app was defined) and all of the CSS classes of the starting element will be applied. The
	 * element will then animate into the `out` and `in` animations and will eventually reach the coordinates and match
	 * the dimensions of the destination element. During the entire animation a CSS class of `.ng-animate-shim` will be applied
	 * to both the starting and destination elements in order to hide them from being visible (the CSS styling for the class
	 * is: `visibility:hidden`). Once the anchor reaches its destination then it will be removed and the destination element
	 * will become visible since the shim class will be removed.
	 *
	 * ### How is the morphing handled?
	 *
	 * CSS Anchoring relies on transitions and keyframes and the internal code is intelligent enough to figure out
	 * what CSS classes differ between the starting element and the destination element. These different CSS classes
	 * will be added/removed on the anchor element and a transition will be applied (the transition that is provided
	 * in the anchor class). Long story short, ngAnimate will figure out what classes to add and remove which will
	 * make the transition of the element as smooth and automatic as possible. Be sure to use simple CSS classes that
	 * do not rely on DOM nesting structure so that the anchor element appears the same as the starting element (since
	 * the cloned element is placed inside of root element which is likely close to the body element).
	 *
	 * Note that if the root element is on the `<html>` element then the cloned node will be placed inside of body.
	 *
	 *
	 * ## Using $animate in your directive code
	 *
	 * So far we've explored how to feed in animations into an Angular application, but how do we trigger animations within our own directives in our application?
	 * By injecting the `$animate` service into our directive code, we can trigger structural and class-based hooks which can then be consumed by animations. Let's
	 * imagine we have a greeting box that shows and hides itself when the data changes
	 *
	 * ```html
	 * <greeting-box active="onOrOff">Hi there</greeting-box>
	 * ```
	 *
	 * ```js
	 * ngModule.directive('greetingBox', ['$animate', function($animate) {
	 *   return function(scope, element, attrs) {
	 *     attrs.$observe('active', function(value) {
	 *       value ? $animate.addClass(element, 'on') : $animate.removeClass(element, 'on');
	 *     });
	 *   });
	 * }]);
	 * ```
	 *
	 * Now the `on` CSS class is added and removed on the greeting box component. Now if we add a CSS class on top of the greeting box element
	 * in our HTML code then we can trigger a CSS or JS animation to happen.
	 *
	 * ```css
	 * /&#42; normally we would create a CSS class to reference on the element &#42;/
	 * greeting-box.on { transition:0.5s linear all; background:green; color:white; }
	 * ```
	 *
	 * The `$animate` service contains a variety of other methods like `enter`, `leave`, `animate` and `setClass`. To learn more about what's
	 * possible be sure to visit the {@link ng.$animate $animate service API page}.
	 *
	 *
	 * ## Callbacks and Promises
	 *
	 * When `$animate` is called it returns a promise that can be used to capture when the animation has ended. Therefore if we were to trigger
	 * an animation (within our directive code) then we can continue performing directive and scope related activities after the animation has
	 * ended by chaining onto the returned promise that animation method returns.
	 *
	 * ```js
	 * // somewhere within the depths of the directive
	 * $animate.enter(element, parent).then(function() {
	 *   //the animation has completed
	 * });
	 * ```
	 *
	 * (Note that earlier versions of Angular prior to v1.4 required the promise code to be wrapped using `$scope.$apply(...)`. This is not the case
	 * anymore.)
	 *
	 * In addition to the animation promise, we can also make use of animation-related callbacks within our directives and controller code by registering
	 * an event listener using the `$animate` service. Let's say for example that an animation was triggered on our view
	 * routing controller to hook into that:
	 *
	 * ```js
	 * ngModule.controller('HomePageController', ['$animate', function($animate) {
	 *   $animate.on('enter', ngViewElement, function(element) {
	 *     // the animation for this route has completed
	 *   }]);
	 * }])
	 * ```
	 *
	 * (Note that you will need to trigger a digest within the callback to get angular to notice any scope-related changes.)
	 */
	
	/**
	 * @ngdoc service
	 * @name $animate
	 * @kind object
	 *
	 * @description
	 * The ngAnimate `$animate` service documentation is the same for the core `$animate` service.
	 *
	 * Click here {@link ng.$animate to learn more about animations with `$animate`}.
	 */
	angular.module('ngAnimate', [])
	  .directive('ngAnimateSwap', ngAnimateSwapDirective)
	
	  .directive('ngAnimateChildren', $$AnimateChildrenDirective)
	  .factory('$$rAFScheduler', $$rAFSchedulerFactory)
	
	  .provider('$$animateQueue', $$AnimateQueueProvider)
	  .provider('$$animation', $$AnimationProvider)
	
	  .provider('$animateCss', $AnimateCssProvider)
	  .provider('$$animateCssDriver', $$AnimateCssDriverProvider)
	
	  .provider('$$animateJs', $$AnimateJsProvider)
	  .provider('$$animateJsDriver', $$AnimateJsDriverProvider);
	
	
	})(window, window.angular);


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var require;/* WEBPACK VAR INJECTION */(function(module) {(function commonJS(require, module) {
	    'use strict';
	
	    __webpack_require__(26);
	
	    module.exports = '720kb.socialshare';
	}(require, module));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)(module)))

/***/ },
/* 25 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 26 */
/***/ function(module, exports) {

	/*
	 * angular-socialshare
	 * @latest
	 *
	 * A social urls and content sharing directive for angularjs.
	 * http://720kb.githb.io/angular-socialshare
	 *
	 * MIT license
	 * Thu Feb 04 2016
	 */
	/*global angular*/
	/*eslint no-loop-func:0, func-names:0*/
	
	(function withAngular(angular) {
	  'use strict';
	
	  var directiveName = 'socialshare'
	    , socialshareProviderNames = ['facebook', 'facebook-messenger', 'twitter', 'linkedin', 'google', 'pinterest', 'tumblr', 'reddit', 'stumbleupon', 'buffer', 'digg', 'delicious', 'vk', 'pocket', 'wordpress', 'flipboard', 'xing', 'hackernews', 'evernote', 'whatsapp', 'viber', 'skype', 'email', 'ok']
	    , socialshareConfigurationProvider = /*@ngInject*/ function socialshareConfigurationProvider() {
	
	      var socialshareConfigurationDefault = [{
	        'provider': 'email',
	        'conf': {
	          'subject': '',
	          'body': '',
	          'to': '',
	          'cc': '',
	          'bcc': '',
	          'trigger': 'click'
	        }
	      },
	      {
	        'provider': 'facebook',
	        'conf': {
	          'url':'',
	          'text': '',
	          'media': '',
	          'type': '',
	          'via': '',
	          'to': '',
	          'from': '',
	          'ref': '',
	          'display': '',
	          'source': '',
	          'caption': '',
	          'redirectUri': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'facebook-messenger',
	        'conf': {
	          'url': ''
	        }
	      },
	      {
	        'provider': 'twitter',
	        'conf': {
	          'url': '',
	          'text': '',
	          'via': '',
	          'hashtags': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'linkedin',
	        'conf': {
	          'url': '',
	          'text': '',
	          'description': '',
	          'source': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'reddit',
	        'conf': {
	          'url': '',
	          'text': '',
	          'subreddit': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'vk',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'ok',
	        'conf': {
	          'url': '',
	          'text': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'digg',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'delicious',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'stumbleupon',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'pinterest',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'google',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'tumblr',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'buffer',
	        'conf': {
	          'url': '',
	          'text': '',
	          'via': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'pocket',
	        'conf': {
	          'url': '',
	          'text': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'flipboard',
	        'conf': {
	          'url': '',
	          'text': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'hackernews',
	        'conf': {
	          'url': '',
	          'text': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'wordpress',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'xing',
	        'conf': {
	          'url': '',
	          'text': '',
	          'media': '',
	          'follow' : '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'evernote',
	        'conf': {
	          'url': '',
	          'text': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      },
	      {
	        'provider': 'whatsapp',
	        'conf': {
	          'url': '',
	          'text': ''
	        }
	      },
	      {
	        'provider': 'viber',
	        'conf': {
	          'url': '',
	          'text': ''
	        }
	      },
	      {
	        'provider': 'skype',
	        'conf': {
	          'url': '',
	          'text': '',
	          'trigger': 'click',
	          'popupHeight': 600,
	          'popupWidth': 500
	        }
	      }];
	
	      return {
	        'configure': function configure(configuration) {
	
	          var configIndex = 0
	            , configurationKeys
	            , configurationIndex
	            , aConfigurationKey
	            , configElement
	            , internIndex = 0
	          //this is necessary becuase provider run before any service
	          //so i have to take the log from another injector
	          , $log = angular.injector(['ng']).get('$log');
	
	          if (configuration && configuration.length > 0) {
	            for (; configIndex < configuration.length; configIndex += 1) {
	              if (configuration[configIndex].provider && socialshareProviderNames.indexOf(configuration[configIndex].provider) > -1) {
	
	                for (; internIndex < socialshareConfigurationDefault.length; internIndex += 1) {
	                  configElement = socialshareConfigurationDefault[internIndex];
	
	                  if (configElement &&
	                    configElement.provider &&
	                    configuration[configIndex].provider === configElement.provider) {
	
	                      configurationKeys = Object.keys(configElement.conf);
	                      configurationIndex = 0;
	
	                      for (; configurationIndex < configurationKeys.length; configurationIndex += 1) {
	
	                        aConfigurationKey = configurationKeys[configurationIndex];
	                        if (aConfigurationKey && configuration[configIndex].conf[aConfigurationKey]) {
	
	                          configElement.conf[aConfigurationKey] = configuration[configIndex].conf[aConfigurationKey];
	                        }
	                      }
	                    }
	                  }
	                } else {
	                  $log.warn('Invalid provider at element ' + configIndex + ' with name:' + configuration[configIndex].provider);
	                }
	              }
	            }
	        }
	        , '$get': /*@ngInject*/ function instantiateProvider() {
	
	            return socialshareConfigurationDefault;
	        }
	      };
	    }
	    , socialshareDirective = /*@ngInject*/ ['$window', '$location', 'socialshareConf', '$log', function socialshareDirective($window, $location, socialshareConf, $log) {
	
	      var linkingFunction = function linkingFunction($scope, element, attrs) {
	
	        // observe the values in each of the properties so that if they're updated elsewhere,
	        // they are updated in this directive.
	        var configurationElement
	        , index = 0
	        , onEventTriggered = function onEventTriggered() {
	          /*eslint-disable no-use-before-define*/
	          if (attrs.socialshareProvider in sharingFunctions) {
	            sharingFunctions[attrs.socialshareProvider]($window, $location, attrs, element);
	          } else {
	            return true;
	          }
	        };
	        /*eslint-enable no-use-before-define*/
	        //looking into configuration if there is a config for the current provider
	        for (; index < socialshareConf.length; index += 1) {
	          if (socialshareConf[index].provider === attrs.socialshareProvider) {
	            configurationElement = socialshareConf[index];
	            break;
	          }
	        }
	
	        if (socialshareProviderNames.indexOf(configurationElement.provider) === -1) {
	          $log.warn('Invalid Provider Name : ' + attrs.socialshareProvider);
	        }
	
	        //if some attribute is not define provide a default one
	        attrs.socialshareUrl = attrs.socialshareUrl || configurationElement.conf.url;
	        attrs.socialshareText = attrs.socialshareText || configurationElement.conf.text;
	        attrs.socialshareMedia = attrs.socialshareMedia || configurationElement.conf.media;
	        attrs.socialshareType =  attrs.socialshareType || configurationElement.conf.type;
	        attrs.socialshareVia = attrs.socialshareVia || configurationElement.conf.via;
	        attrs.socialshareTo =  attrs.socialshareTo || configurationElement.conf.to;
	        attrs.socialshareFrom =  attrs.socialshareFrom || configurationElement.conf.from;
	        attrs.socialshareRef = attrs.socialshareRef || configurationElement.conf.ref;
	        attrs.socialshareDislay = attrs.socialshareDislay || configurationElement.conf.display;
	        attrs.socialshareSource = attrs.socialshareSource || configurationElement.conf.source;
	        attrs.socialshareCaption = attrs.socialshareCaption || configurationElement.conf.caption;
	        attrs.socialshareRedirectUri = attrs.socialshareRedirectUri || configurationElement.conf.redirectUri;
	        attrs.socialshareTrigger =  attrs.socialshareTrigger || configurationElement.conf.trigger;
	        attrs.socialsharePopupHeight = attrs.socialsharePopupHeight || configurationElement.conf.popupHeight;
	        attrs.socialsharePopupWidth = attrs.socialsharePopupWidth || configurationElement.conf.popupWidth;
	        attrs.socialshareSubreddit = attrs.socialshareSubreddit || configurationElement.conf.subreddit;
	        attrs.socialshareDescription = attrs.socialshareDescription || configurationElement.conf.description;
	        attrs.socialshareFollow = attrs.socialshareFollow || configurationElement.conf.follow;
	        attrs.socialshareHashtags = attrs.socialshareHashtags || configurationElement.conf.hashtags;
	
	        if (attrs.socialshareTrigger) {
	
	          element.bind(attrs.socialshareTrigger, onEventTriggered);
	        } else {
	
	          onEventTriggered();
	        }
	      };
	
	      return {
	        'restrict': 'A',
	        'link': linkingFunction
	      };
	    }]
	    , manageEmailShare = function manageEmailShare($window, $location, attrs) {
	      var urlString = 'mailto:';
	
	      if (attrs.socialshareTo) {
	
	        urlString += encodeURIComponent(attrs.socialshareTo);
	      }
	
	      urlString += '?';
	
	      if (attrs.socialshareBody) {
	
	        urlString += 'body=' + encodeURIComponent(attrs.socialshareBody);
	      }
	
	      if (attrs.socialshareSubject) {
	
	        urlString += '&subject=' + encodeURIComponent(attrs.socialshareSubject);
	      }
	      if (attrs.socialshareCc) {
	
	        urlString += '&cc=' + encodeURIComponent(attrs.socialshareCc);
	      }
	      if (attrs.socialshareBcc) {
	
	        urlString += '&bcc=' + encodeURIComponent(attrs.socialshareBcc);
	      }
	
	      $window.open(urlString, '_self');
	    }
	    , manageFacebookShare = function manageFacebookShare($window, $location, attrs) {
	
	      var urlString;
	
	      if (attrs.socialshareType && attrs.socialshareType === 'feed') {
	        // if user specifies that they want to use the Facebook feed dialog (https://developers.facebook.com/docs/sharing/reference/feed-dialog/v2.4)
	        urlString = 'https://www.facebook.com/dialog/feed?';
	
	        if (attrs.socialshareVia) {
	          urlString += '&app_id=' + encodeURIComponent(attrs.socialshareVia);
	        }
	
	        if (attrs.socialshareRedirectUri) {
	          urlString += '&redirect_uri=' + encodeURIComponent(attrs.socialshareRedirectUri);
	        }
	        if (attrs.socialshareUrl) {
	          urlString += '&link=' + encodeURIComponent(attrs.socialshareUrl);
	        }
	
	        if (attrs.socialshareTo) {
	          urlString += '&to=' + encodeURIComponent(attrs.socialshareTo);
	        }
	
	        if (attrs.socialshareDisplay) {
	          urlString += '&display=' + encodeURIComponent(attrs.socialshareDisplay);
	        }
	
	        if (attrs.socialshareRef) {
	          urlString += '&ref=' + encodeURIComponent(attrs.socialshareRef);
	        }
	
	        if (attrs.socialshareFrom) {
	          urlString += '&from=' + encodeURIComponent(attrs.socialshareFrom);
	        }
	
	        if (attrs.socialshareDescription) {
	          urlString += '&description=' + encodeURIComponent(attrs.socialshareDescription);
	        }
	
	        if (attrs.socialshareText) {
	          urlString += '&name=' + encodeURIComponent(attrs.socialshareText);
	        }
	
	        if (attrs.socialshareCaption) {
	          urlString += '&caption=' + encodeURIComponent(attrs.socialshareCaption);
	        }
	
	        if (attrs.socialshareMedia) {
	          urlString += '&picture=' + encodeURIComponent(attrs.socialshareMedia);
	        }
	
	        if (attrs.socialshareSource) {
	          urlString += '&source=' + encodeURIComponent(attrs.socialshareSource);
	        }
	
	        $window.open(
	          urlString,
	          'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	          + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	
	      } else if (attrs.socialshareType && attrs.socialshareType === 'send') {
	        // if user specifies that they want to use the Facebook send dialog (https://developers.facebook.com/docs/sharing/reference/send-dialog)
	        urlString = 'https://www.facebook.com/dialog/send?';
	
	        if (attrs.socialshareVia) {
	          urlString += '&app_id=' + encodeURIComponent(attrs.socialshareVia);
	        }
	
	        if (attrs.socialshareRedirectUri) {
	          urlString += '&redirect_uri=' + encodeURIComponent(attrs.socialshareRedirectUri);
	        }
	
	        if (attrs.socialshareUrl) {
	          urlString += '&link=' + encodeURIComponent(attrs.socialshareUrl);
	        }
	
	        if (attrs.socialshareTo) {
	          urlString += '&to=' + encodeURIComponent(attrs.socialshareTo);
	        }
	
	        if (attrs.socialshareDisplay) {
	          urlString += '&display=' + encodeURIComponent(attrs.socialshareDisplay);
	        }
	
	        if (attrs.socialshareRef) {
	          urlString += '&ref=' + encodeURIComponent(attrs.socialshareRef);
	        }
	
	        $window.open(
	          urlString,
	          'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	          + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	
	      } else {
	        //otherwise default to using sharer.php
	        $window.open(
	          'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl())
	          , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	          + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	      }
	    }
	    , facebookMessengerShare = function facebookMessengerShare($window, $location, attrs, element) {
	
	      var href = 'fb-messenger://share?link=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      element.attr('href', href);
	    }
	    , manageTwitterShare = function manageTwitterShare($window, $location, attrs) {
	      var urlString = 'https://www.twitter.com/intent/tweet?';
	
	      if (attrs.socialshareText) {
	        urlString += 'text=' + encodeURIComponent(attrs.socialshareText);
	      }
	
	      if (attrs.socialshareVia) {
	        urlString += '&via=' + encodeURIComponent(attrs.socialshareVia);
	      }
	
	      if (attrs.socialshareHashtags) {
	        urlString += '&hashtags=' + encodeURIComponent(attrs.socialshareHashtags);
	      }
	
	      //default to the current page if a URL isn't specified
	      urlString += '&url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      $window.open(
	        urlString,
	        'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageGooglePlusShare = function manageGooglePlusShare($window, $location, attrs) {
	
	      $window.open(
	        'https://plus.google.com/share?url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl())
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	      }
	    , manageRedditShare = function manageRedditShare($window, $location, attrs) {
	      var urlString = 'https://www.reddit.com/';
	
	      if (attrs.socialshareSubreddit) {
	        urlString += 'r/' + attrs.socialshareSubreddit + '/submit?url=';
	      } else {
	        urlString += 'submit?url=';
	      }
	      /*-
	      * Reddit isn't responsive and at default width for our popups (500 x 500), everything is messed up.
	      * So, overriding the width if it is less than 900 (played around to settle on this) and height if
	      * it is less than 650px.
	      */
	      if (attrs.socialsharePopupWidth < 900) {
	        attrs.socialsharePopupWidth = 900;
	      }
	
	      if (attrs.socialsharePopupHeight < 650) {
	        attrs.socialsharePopupHeight = 650;
	      }
	
	      $window.open(
	        urlString + encodeURIComponent(attrs.socialshareUrl || $location.absUrl()) + '&title=' + encodeURIComponent(attrs.socialshareText)
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	      }
	    , manageStumbleuponShare = function manageStumbleuponShare($window, $location, attrs) {
	
	      $window.open(
	        'https://www.stumbleupon.com/submit?url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl()) + '&title=' + encodeURIComponent(attrs.socialshareText)
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageLinkedinShare = function manageLinkedinShare($window, $location, attrs) {
	      /*
	      * Refer: https://developer.linkedin.com/docs/share-on-linkedin
	      * Tab: Customized URL
	      */
	      var urlString = 'https://www.linkedin.com/shareArticle?mini=true';
	
	      urlString += '&url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      if (attrs.socialshareText) {
	        urlString += '&title=' + encodeURIComponent(attrs.socialshareText);
	      }
	
	      if (attrs.socialshareDescription) {
	        urlString += '&summary=' + encodeURIComponent(attrs.socialshareDescription);
	      }
	
	      if (attrs.socialshareSource) {
	        urlString += '&source=' + encodeURIComponent(attrs.socialshareSource);
	      }
	
	      $window.open(
	        urlString,
	        'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , managePinterestShare = function managePinterestShare($window, $location, attrs) {
	
	      $window.open(
	        'https://www.pinterest.com/pin/create/button/?url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl()) + '&media=' + encodeURIComponent(attrs.socialshareMedia) + '&description=' + encodeURIComponent(attrs.socialshareText)
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageDiggShare = function manageDiggShare($window, $location, attrs) {
	
	      $window.open(
	        'https://www.digg.com/submit?url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl()) + '&title=' + encodeURIComponent(attrs.socialshareText)
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageTumblrShare = function manageTumblrShare($window, $location, attrs) {
	
	      if (attrs.socialshareMedia) {
	        var urlString = 'https://www.tumblr.com/share/photo?source=' + encodeURIComponent(attrs.socialshareMedia);
	
	        if (attrs.socialshareText) {
	          urlString += '&caption=' + encodeURIComponent(attrs.socialshareText);
	        }
	
	        $window.open(
	          urlString,
	          'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	          + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	      } else {
	
	        $window.open(
	          'https://www.tumblr.com/share/link?url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl()) + '&description=' + encodeURIComponent(attrs.socialshareText)
	          , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	          + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	      }
	    }
	    , manageVkShare = function manageVkShare($window, $location, attrs) {
	      var urlString = 'https://www.vk.com/share.php?url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      if (attrs.socialshareText) {
	        urlString += '&title=' + encodeURIComponent(attrs.socialshareText);
	      }
	
	      if (attrs.socialshareMedia) {
	        urlString += '&image=' + encodeURIComponent(attrs.socialshareMedia);
	      }
	
	      if (attrs.socialshareDescription) {
	        urlString += '&description=' + encodeURIComponent(attrs.socialshareDescription);
	      }
	
	      $window.open(
	       urlString
	       , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	       + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageOkShare = function manageOkShare($window, $location, attrs) {
	      $window.open(
	        'http://www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1&st._surl=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl()) + '&st.comments=' + encodeURIComponent(attrs.socialshareText)
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageDeliciousShare = function manageDeliciousShare($window, $location, attrs) {
	
	     $window.open(
	       'https://www.delicious.com/save?v=5&noui&jump=close&url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl()) + '&title=' + encodeURIComponent(attrs.socialshareText)
	       , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	       + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageBufferShare = function manageBufferShare($window, $location, attrs) {
	      var urlString = 'https://bufferapp.com/add?';
	
	      if (attrs.socialshareText) {
	        urlString += 'text=' + encodeURIComponent(attrs.socialshareText);
	      }
	
	      if (attrs.socialshareVia) {
	        urlString += '&via=' + encodeURIComponent(attrs.socialshareVia);
	      }
	
	      //default to the current page if a URL isn't specified
	      urlString += '&url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      $window.open(
	        urlString,
	        'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageHackernewsShare = function manageHackernewsShare($window, $location, attrs) {
	      var urlString = 'https://news.ycombinator.com/submitlink?';
	
	      if (attrs.socialshareText) {
	        urlString += 't=' + encodeURIComponent(attrs.socialshareText) + '&';
	      }
	      //default to the current page if a URL isn't specified
	      urlString += 'u=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      $window.open(
	       urlString,
	       'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	      + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageFlipboardShare = function manageFlipboardShare($window, $location, attrs) {
	      var urlString = 'https://share.flipboard.com/bookmarklet/popout?v=2&';
	
	      if (attrs.socialshareText) {
	        urlString += 'title=' + encodeURIComponent(attrs.socialshareText) + '&';
	      }
	
	      //default to the current page if a URL isn't specified
	      urlString += 'url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      $window.open(
	        urlString,
	        'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , managePocketShare = function managePocketShare($window, $location, attrs) {
	      var urlString = 'https://getpocket.com/save?';
	
	      if (attrs.socialshareText) {
	        urlString += 'text=' + encodeURIComponent(attrs.socialshareText) + '&';
	      }
	
	      //default to the current page if a URL isn't specified
	      urlString += 'url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      $window.open(
	        urlString,
	        'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageWordpressShare = function manageWordpressShare($window, $location, attrs) {
	      var urlString = 'http://wordpress.com/press-this.php?';
	
	      if (attrs.socialshareText) {
	        urlString += 't=' + encodeURIComponent(attrs.socialshareText) + '&';
	      }
	      if (attrs.socialshareMedia) {
	        urlString += 'i=' + encodeURIComponent(attrs.socialshareMedia) + '&';
	      }
	
	      //default to the current page if a URL isn't specified
	      urlString += 'u=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      $window.open(
	        urlString,
	        'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageXingShare = function manageXingShare($window, $location, attrs) {
	      var followUrl = '';
	
	      if (attrs.socialshareFollow) {
	        followUrl = '&follow_url=' + encodeURIComponent(attrs.socialshareFollow);
	      }
	      $window.open(
	        'https://www.xing.com/spi/shares/new?url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl()) + followUrl
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageEvernoteShare = function manageEvernoteShare($window, $location, attrs) {
	
	      var urlString = 'http://www.evernote.com/clip.action?url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      if (attrs.socialshareText) {
	        urlString += '&title=' + encodeURIComponent(attrs.socialshareText);
	      }
	
	      $window.open(
	        urlString
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , manageWhatsappShare = function manageWhatsappShare($window, $location, attrs, element) {
	
	      var href = 'whatsapp://send?text=' + encodeURIComponent(attrs.socialshareText + ' ') + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      element.attr('href', href);
	    }
	    , manageViberShare = function manageViberShare($window, $location, attrs, element) {
	
	      var href = 'viber://forward?text=' + encodeURIComponent(attrs.socialshareText + ' ') + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      element.attr('href', href);
	    }
	    , skypeShare = function skypeShare($window, $location, attrs) {
	
	      var urlString = 'https://web.skype.com/share?source=button&url=' + encodeURIComponent(attrs.socialshareUrl || $location.absUrl());
	
	      if (attrs.socialshareText) {
	        urlString += '&text=' + encodeURIComponent(attrs.socialshareText);
	      }
	
	      $window.open(
	        urlString
	        , 'sharer', 'toolbar=0,status=0,width=' + attrs.socialsharePopupWidth + ',height=' + attrs.socialsharePopupHeight
	        + ',top=' + ($window.innerHeight - attrs.socialsharePopupHeight) / 2 + ',left=' + ($window.innerWidth - attrs.socialsharePopupWidth) / 2);
	    }
	    , sharingFunctions = {
	      'email': manageEmailShare
	      , 'facebook': manageFacebookShare
	      , 'facebook-messenger': facebookMessengerShare
	      , 'twitter': manageTwitterShare
	      , 'google': manageGooglePlusShare
	      , 'reddit': manageRedditShare
	      , 'stumbleupon': manageStumbleuponShare
	      , 'linkedin': manageLinkedinShare
	      , 'pinterest': managePinterestShare
	      , 'digg': manageDiggShare
	      , 'tumblr': manageTumblrShare
	      , 'vk': manageVkShare
	      , 'ok': manageOkShare
	      , 'delicious': manageDeliciousShare
	      , 'buffer': manageBufferShare
	      , 'hackernews': manageHackernewsShare
	      , 'flipboard': manageFlipboardShare
	      , 'pocket': managePocketShare
	      , 'wordpress': manageWordpressShare
	      , 'xing': manageXingShare
	      , 'evernote': manageEvernoteShare
	      , 'whatsapp': manageWhatsappShare
	      , 'viber': manageViberShare
	      , 'skype': skypeShare
	    };
	
	
	  angular.module('720kb.socialshare', [])
	  .provider(directiveName + 'Conf', socialshareConfigurationProvider)
	  .directive(directiveName, socialshareDirective);
	}(angular));


/***/ },
/* 27 */
/***/ function(module, exports) {

	"use strict";
	
	!function () {
	  "use strict";
	  var module = angular.module("sticky", []);module.directive("sticky", ["$window", "$timeout", function ($window, $timeout) {
	    return { restrict: "A", scope: { disabled: "=disabledSticky" }, link: function link($scope, $elem, $attrs) {
	        function initSticky() {
	          shouldInitialize && (scrollbarElement.on("scroll", checkIfShouldStick), windowElement.on("resize", $scope.$apply.bind($scope, onResize)), memorizeDimensions(), $scope.$watch(onDigest, onChange), $scope.$on("$destroy", onDestroy), shouldInitialize = !1);
	        }function memorizeDimensions() {
	          initialCSS = $scope.getInitialDimensions(), isStickyLayoutDeferred && ($elem[0].getBoundingClientRect().height || (onStickyHeighUnbind = $scope.$watch(function () {
	            return $elem.height();
	          }, function (newValue, oldValue) {
	            newValue > 0 && (initialCSS = $scope.getInitialDimensions(), isStickyLayoutWatched || onStickyHeighUnbind());
	          })));
	        }function deriveScrollingViewport(stickyNode) {
	          var match = findAncestorTag(scrollableNodeTagName, stickyNode);return 1 === match.length ? match[0] : $window;
	        }function findAncestorTag(tag, context) {
	          var p,
	              m = [],
	              n = context.parent();do {
	            var node = n[0];if (1 !== node.nodeType) break;if (node.tagName.toUpperCase() === tag.toUpperCase()) return n;p = n.parent(), n = p;
	          } while (0 !== p.length);return m;
	        }function shouldStickWithLimit(shouldApplyWithLimit) {
	          return "true" === shouldApplyWithLimit ? $window.innerHeight - ($elem[0].offsetHeight + parseInt(offset)) < 0 : !1;
	        }function getClosest(scrollTop, stickyLine, stickyBottomLine) {
	          var closest = "top",
	              topDistance = Math.abs(scrollTop - stickyLine),
	              bottomDistance = Math.abs(scrollTop - stickyBottomLine);return topDistance > bottomDistance && (closest = "bottom"), closest;
	        }function unStickElement(fromDirection) {
	          $elem.attr("style", initialStyle), isSticking = !1, $body.removeClass(bodyClass), $elem.removeClass(stickyClass), $elem.addClass(unstickyClass), "top" === fromDirection ? ($elem.removeClass(bottomClass), $elem.css("z-index", 10).css("width", initialCSS.width).css("top", initialCSS.top).css("position", initialCSS.position).css("left", initialCSS.cssLeft).css("margin-top", initialCSS.marginTop).css("height", initialCSS.height)) : "bottom" === fromDirection && confine === !0 && ($elem.addClass(bottomClass), createPlaceholder(), $elem.css("z-index", 10).css("width", initialCSS.width).css("top", "").css("bottom", 0).css("position", "absolute").css("left", initialCSS.cssLeft).css("margin-top", initialCSS.marginTop).css("margin-bottom", initialCSS.marginBottom).css("height", initialCSS.height)), placeholder && fromDirection === anchor && placeholder.remove();
	        }function stickElement(closestLine) {
	          isSticking = !0, $timeout(function () {
	            initialCSS.offsetWidth = $elem[0].offsetWidth;
	          }, 0), $body.addClass(bodyClass), $elem.removeClass(unstickyClass), $elem.removeClass(bottomClass), $elem.addClass(stickyClass), createPlaceholder(), $elem.css("z-index", "10").css("width", $elem[0].offsetWidth + "px").css("position", "fixed").css("left", $elem.css("left").replace("px", "") + "px").css(anchor, offset + elementsOffsetFromTop(scrollbar) + "px").css("margin-top", 0), "bottom" === anchor && $elem.css("margin-bottom", 0);
	        }function onResize() {
	          unStickElement(anchor), checkIfShouldStick();
	        }function createPlaceholder() {
	          if (usePlaceholder) {
	            placeholder && placeholder.remove(), placeholder = angular.element("<div>");var elementsHeight = $elem[0].offsetHeight,
	                computedStyle = $elem[0].currentStyle || window.getComputedStyle($elem[0]);elementsHeight += parseInt(computedStyle.marginTop, 10), elementsHeight += parseInt(computedStyle.marginBottom, 10), elementsHeight += parseInt(computedStyle.borderTopWidth, 10), elementsHeight += parseInt(computedStyle.borderBottomWidth, 10), placeholder.css("height", $elem[0].offsetHeight + "px"), $elem.after(placeholder);
	          }
	        }function isBottomedOut() {
	          return !!(confine && scrollbarYPos() > stickyBottomLine);
	        }function elementsOffsetFromTop(element) {
	          var offset = 0;return element.getBoundingClientRect && (offset = element.getBoundingClientRect().top), offset;
	        }function scrollbarYPos() {
	          var position;return position = "undefined" != typeof scrollbar.scrollTop ? scrollbar.scrollTop : "undefined" != typeof scrollbar.pageYOffset ? scrollbar.pageYOffset : document.documentElement.scrollTop;
	        }function scrollbarHeight() {
	          var height;return height = scrollbarElement[0] instanceof HTMLElement ? $window.getComputedStyle(scrollbarElement[0], null).getPropertyValue("height").replace(/px;?/, "") : $window.innerHeight, parseInt(height) || 0;
	        }function mediaQueryMatches() {
	          var mediaQuery = $attrs.mediaQuery || !1,
	              matchMedia = $window.matchMedia;return mediaQuery && !(matchMedia("(" + mediaQuery + ")").matches || matchMedia(mediaQuery).matches);
	        }var onStickyHeighUnbind,
	            originalInitialCSS,
	            originalOffset,
	            placeholder,
	            stickyLine,
	            initialCSS,
	            scrollableNodeTagName = "sticky-scroll",
	            initialPosition = $elem.css("position"),
	            initialStyle = $elem.attr("style") || "",
	            stickyBottomLine = 0,
	            isSticking = !1,
	            stickyClass = $attrs.stickyClass || "",
	            unstickyClass = $attrs.unstickyClass || "",
	            bodyClass = $attrs.bodyClass || "",
	            bottomClass = $attrs.bottomClass || "",
	            scrollbar = deriveScrollingViewport($elem),
	            windowElement = angular.element($window),
	            scrollbarElement = angular.element(scrollbar),
	            $body = angular.element(document.body),
	            $onResize = $scope.$apply.bind($scope, onResize),
	            usePlaceholder = "false" !== $attrs.usePlaceholder,
	            anchor = "bottom" === $attrs.anchor ? "bottom" : "top",
	            confine = "true" === $attrs.confine,
	            isStickyLayoutDeferred = void 0 !== $attrs.isStickyLayoutDeferred ? "true" === $attrs.isStickyLayoutDeferred : !1,
	            isStickyLayoutWatched = void 0 !== $attrs.isStickyLayoutWatched ? "true" === $attrs.isStickyLayoutWatched : !0,
	            offset = $attrs.offset ? parseInt($attrs.offset.replace(/px;?/, "")) : 0,
	            shouldInitialize = !0,
	            checkIfShouldStick = function checkIfShouldStick() {
	          if ($scope.disabled === !0 || mediaQueryMatches()) return isSticking && unStickElement(), !1;var shouldStick,
	              scrollbarPosition = scrollbarYPos();shouldStick = "top" === anchor ? confine === !0 ? scrollbarPosition > stickyLine && stickyBottomLine >= scrollbarPosition : scrollbarPosition > stickyLine : stickyLine >= scrollbarPosition;var closestLine = getClosest(scrollbarPosition, stickyLine, stickyBottomLine);!shouldStick || shouldStickWithLimit($attrs.stickLimit) || isSticking ? !shouldStick && isSticking ? unStickElement(closestLine, scrollbarPosition) : confine && !shouldStick && (originalOffset = elementsOffsetFromTop($elem[0]), unStickElement(closestLine, scrollbarPosition)) : stickElement(closestLine);
	        },
	            onDestroy = function onDestroy() {
	          scrollbarElement.off("scroll", checkIfShouldStick), windowElement.off("resize", $onResize), $onResize = null, $body.removeClass(bodyClass), placeholder && placeholder.remove();
	        },
	            onDigest = function onDigest() {
	          if ($scope.disabled === !0) return unStickElement();var offsetFromTop = elementsOffsetFromTop($elem[0]);return 0 === offsetFromTop ? offsetFromTop : "top" === anchor ? (originalOffset || offsetFromTop) - elementsOffsetFromTop(scrollbar) + scrollbarYPos() : offsetFromTop - scrollbarHeight() + $elem[0].offsetHeight + scrollbarYPos();
	        },
	            onChange = function onChange(newVal, oldVal) {
	          var elemIsShowed = !!newVal,
	              elemWasHidden = !oldVal,
	              valChange = newVal !== oldVal || "undefined" == typeof stickyLine,
	              notSticking = !isSticking && !isBottomedOut();if (valChange && notSticking && 0 !== newVal && elemIsShowed) {
	            stickyLine = newVal - offset, elemIsShowed && elemWasHidden && $scope.updateStickyContentUpdateDimensions($elem[0].offsetWidth, $elem[0].offsetHeight), confine && $elem.parent().css({ position: "relative" });var parent = $elem.parent()[0],
	                parentHeight = parseInt(parent.offsetHeight) - (usePlaceholder ? 0 : $elem[0].offsetHeight),
	                marginBottom = parseInt($elem.css("margin-bottom").replace(/px;?/, "")) || 0,
	                elementsDistanceFromTop = elementsOffsetFromTop($elem[0]),
	                parentsDistanceFromTop = elementsOffsetFromTop(parent),
	                scrollbarDistanceFromTop = elementsOffsetFromTop(scrollbar),
	                elementsDistanceFromScrollbarStart = elementsDistanceFromTop - scrollbarDistanceFromTop,
	                elementsDistanceFromBottom = parentsDistanceFromTop + parentHeight - elementsDistanceFromTop;stickyBottomLine = elementsDistanceFromScrollbarStart + elementsDistanceFromBottom - $elem[0].offsetHeight - marginBottom - offset + +scrollbarYPos(), checkIfShouldStick();
	          }
	        };$scope.getElement = function () {
	          return $elem;
	        }, $scope.getScrollbar = function () {
	          return scrollbar;
	        }, $scope.getInitialCSS = function () {
	          return initialCSS;
	        }, $scope.getAnchor = function () {
	          return anchor;
	        }, $scope.isSticking = function () {
	          return isSticking;
	        }, $scope.getOriginalInitialCSS = function () {
	          return originalInitialCSS;
	        }, $scope.processUnStickElement = function (anchor) {
	          unStickElement(anchor);
	        }, $scope.processCheckIfShouldStick = function () {
	          checkIfShouldStick();
	        }, $scope.getInitialDimensions = function () {
	          return { zIndex: $elem.css("z-index"), top: $elem.css("top"), position: initialPosition, marginTop: $elem.css("margin-top"), marginBottom: $elem.css("margin-bottom"), cssLeft: $elem.css("left"), width: $elem[0].offsetWidth, height: $elem.css("height") };
	        }, $scope.updateStickyContentUpdateDimensions = function (width, height) {
	          width && height && (initSticky(), initialCSS.width = width + "px", initialCSS.height = height + "px");
	        }, $timeout(function () {
	          originalInitialCSS = $scope.getInitialDimensions(), initSticky();
	        }, 0);
	      }, controller: ["$scope", "$window", function ($scope, $window) {
	        this.resetLayout = function (newWidth, newHeight) {
	          function _resetScrollPosition() {
	            "top" === anchor && (scrollbar === $window ? $window.scrollTo(0, 0) : scrollbar.scrollTop > 0 && (scrollbar.scrollTop = 0));
	          }var scrollbar = $scope.getScrollbar(),
	              initialCSS = $scope.getInitialCSS(),
	              anchor = $scope.getAnchor();if ($scope.isSticking() && ($scope.processUnStickElement(anchor), $scope.processCheckIfShouldStick()), $scope.getElement().css({ width: "", height: "", position: "", top: "", zIndex: "" }), initialCSS.position = $scope.getOriginalInitialCSS().position, delete initialCSS.offsetWidth, void 0 === newWidth && void 0 === newHeight) {
	            var e_bcr = $scope.getElement()[0].getBoundingClientRect();newWidth = e_bcr.width, newHeight = e_bcr.height;
	          }$scope.updateStickyContentUpdateDimensions(newWidth, newHeight), _resetScrollPosition();
	        }, this.getScrollbar = function () {
	          return $scope.getScrollbar();
	        };
	      }] };
	  }]), window.matchMedia = window.matchMedia || function () {
	    var warning = "angular-sticky: This browser does not support matchMedia, therefore the minWidth option will not work on this browser. Polyfill matchMedia to fix this issue.";return window.console && console.warn && console.warn(warning), function () {
	      return { matches: !0 };
	    };
	  }();
	}();

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(29);
	module.exports = 'ngCookies';


/***/ },
/* 29 */
/***/ function(module, exports) {

	/**
	 * @license AngularJS v1.5.3
	 * (c) 2010-2016 Google, Inc. http://angularjs.org
	 * License: MIT
	 */
	(function(window, angular, undefined) {'use strict';
	
	/**
	 * @ngdoc module
	 * @name ngCookies
	 * @description
	 *
	 * # ngCookies
	 *
	 * The `ngCookies` module provides a convenient wrapper for reading and writing browser cookies.
	 *
	 *
	 * <div doc-module-components="ngCookies"></div>
	 *
	 * See {@link ngCookies.$cookies `$cookies`} for usage.
	 */
	
	
	angular.module('ngCookies', ['ng']).
	  /**
	   * @ngdoc provider
	   * @name $cookiesProvider
	   * @description
	   * Use `$cookiesProvider` to change the default behavior of the {@link ngCookies.$cookies $cookies} service.
	   * */
	   provider('$cookies', [function $CookiesProvider() {
	    /**
	     * @ngdoc property
	     * @name $cookiesProvider#defaults
	     * @description
	     *
	     * Object containing default options to pass when setting cookies.
	     *
	     * The object may have following properties:
	     *
	     * - **path** - `{string}` - The cookie will be available only for this path and its
	     *   sub-paths. By default, this is the URL that appears in your `<base>` tag.
	     * - **domain** - `{string}` - The cookie will be available only for this domain and
	     *   its sub-domains. For security reasons the user agent will not accept the cookie
	     *   if the current domain is not a sub-domain of this domain or equal to it.
	     * - **expires** - `{string|Date}` - String of the form "Wdy, DD Mon YYYY HH:MM:SS GMT"
	     *   or a Date object indicating the exact date/time this cookie will expire.
	     * - **secure** - `{boolean}` - If `true`, then the cookie will only be available through a
	     *   secured connection.
	     *
	     * Note: By default, the address that appears in your `<base>` tag will be used as the path.
	     * This is important so that cookies will be visible for all routes when html5mode is enabled.
	     *
	     **/
	    var defaults = this.defaults = {};
	
	    function calcOptions(options) {
	      return options ? angular.extend({}, defaults, options) : defaults;
	    }
	
	    /**
	     * @ngdoc service
	     * @name $cookies
	     *
	     * @description
	     * Provides read/write access to browser's cookies.
	     *
	     * <div class="alert alert-info">
	     * Up until Angular 1.3, `$cookies` exposed properties that represented the
	     * current browser cookie values. In version 1.4, this behavior has changed, and
	     * `$cookies` now provides a standard api of getters, setters etc.
	     * </div>
	     *
	     * Requires the {@link ngCookies `ngCookies`} module to be installed.
	     *
	     * @example
	     *
	     * ```js
	     * angular.module('cookiesExample', ['ngCookies'])
	     *   .controller('ExampleController', ['$cookies', function($cookies) {
	     *     // Retrieving a cookie
	     *     var favoriteCookie = $cookies.get('myFavorite');
	     *     // Setting a cookie
	     *     $cookies.put('myFavorite', 'oatmeal');
	     *   }]);
	     * ```
	     */
	    this.$get = ['$$cookieReader', '$$cookieWriter', function($$cookieReader, $$cookieWriter) {
	      return {
	        /**
	         * @ngdoc method
	         * @name $cookies#get
	         *
	         * @description
	         * Returns the value of given cookie key
	         *
	         * @param {string} key Id to use for lookup.
	         * @returns {string} Raw cookie value.
	         */
	        get: function(key) {
	          return $$cookieReader()[key];
	        },
	
	        /**
	         * @ngdoc method
	         * @name $cookies#getObject
	         *
	         * @description
	         * Returns the deserialized value of given cookie key
	         *
	         * @param {string} key Id to use for lookup.
	         * @returns {Object} Deserialized cookie value.
	         */
	        getObject: function(key) {
	          var value = this.get(key);
	          return value ? angular.fromJson(value) : value;
	        },
	
	        /**
	         * @ngdoc method
	         * @name $cookies#getAll
	         *
	         * @description
	         * Returns a key value object with all the cookies
	         *
	         * @returns {Object} All cookies
	         */
	        getAll: function() {
	          return $$cookieReader();
	        },
	
	        /**
	         * @ngdoc method
	         * @name $cookies#put
	         *
	         * @description
	         * Sets a value for given cookie key
	         *
	         * @param {string} key Id for the `value`.
	         * @param {string} value Raw value to be stored.
	         * @param {Object=} options Options object.
	         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}
	         */
	        put: function(key, value, options) {
	          $$cookieWriter(key, value, calcOptions(options));
	        },
	
	        /**
	         * @ngdoc method
	         * @name $cookies#putObject
	         *
	         * @description
	         * Serializes and sets a value for given cookie key
	         *
	         * @param {string} key Id for the `value`.
	         * @param {Object} value Value to be stored.
	         * @param {Object=} options Options object.
	         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}
	         */
	        putObject: function(key, value, options) {
	          this.put(key, angular.toJson(value), options);
	        },
	
	        /**
	         * @ngdoc method
	         * @name $cookies#remove
	         *
	         * @description
	         * Remove given cookie
	         *
	         * @param {string} key Id of the key-value pair to delete.
	         * @param {Object=} options Options object.
	         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}
	         */
	        remove: function(key, options) {
	          $$cookieWriter(key, undefined, calcOptions(options));
	        }
	      };
	    }];
	  }]);
	
	angular.module('ngCookies').
	/**
	 * @ngdoc service
	 * @name $cookieStore
	 * @deprecated
	 * @requires $cookies
	 *
	 * @description
	 * Provides a key-value (string-object) storage, that is backed by session cookies.
	 * Objects put or retrieved from this storage are automatically serialized or
	 * deserialized by angular's toJson/fromJson.
	 *
	 * Requires the {@link ngCookies `ngCookies`} module to be installed.
	 *
	 * <div class="alert alert-danger">
	 * **Note:** The $cookieStore service is **deprecated**.
	 * Please use the {@link ngCookies.$cookies `$cookies`} service instead.
	 * </div>
	 *
	 * @example
	 *
	 * ```js
	 * angular.module('cookieStoreExample', ['ngCookies'])
	 *   .controller('ExampleController', ['$cookieStore', function($cookieStore) {
	 *     // Put cookie
	 *     $cookieStore.put('myFavorite','oatmeal');
	 *     // Get cookie
	 *     var favoriteCookie = $cookieStore.get('myFavorite');
	 *     // Removing a cookie
	 *     $cookieStore.remove('myFavorite');
	 *   }]);
	 * ```
	 */
	 factory('$cookieStore', ['$cookies', function($cookies) {
	
	    return {
	      /**
	       * @ngdoc method
	       * @name $cookieStore#get
	       *
	       * @description
	       * Returns the value of given cookie key
	       *
	       * @param {string} key Id to use for lookup.
	       * @returns {Object} Deserialized cookie value, undefined if the cookie does not exist.
	       */
	      get: function(key) {
	        return $cookies.getObject(key);
	      },
	
	      /**
	       * @ngdoc method
	       * @name $cookieStore#put
	       *
	       * @description
	       * Sets a value for given cookie key
	       *
	       * @param {string} key Id for the `value`.
	       * @param {Object} value Value to be stored.
	       */
	      put: function(key, value) {
	        $cookies.putObject(key, value);
	      },
	
	      /**
	       * @ngdoc method
	       * @name $cookieStore#remove
	       *
	       * @description
	       * Remove given cookie
	       *
	       * @param {string} key Id of the key-value pair to delete.
	       */
	      remove: function(key) {
	        $cookies.remove(key);
	      }
	    };
	
	  }]);
	
	/**
	 * @name $$cookieWriter
	 * @requires $document
	 *
	 * @description
	 * This is a private service for writing cookies
	 *
	 * @param {string} name Cookie name
	 * @param {string=} value Cookie value (if undefined, cookie will be deleted)
	 * @param {Object=} options Object with options that need to be stored for the cookie.
	 */
	function $$CookieWriter($document, $log, $browser) {
	  var cookiePath = $browser.baseHref();
	  var rawDocument = $document[0];
	
	  function buildCookieString(name, value, options) {
	    var path, expires;
	    options = options || {};
	    expires = options.expires;
	    path = angular.isDefined(options.path) ? options.path : cookiePath;
	    if (angular.isUndefined(value)) {
	      expires = 'Thu, 01 Jan 1970 00:00:00 GMT';
	      value = '';
	    }
	    if (angular.isString(expires)) {
	      expires = new Date(expires);
	    }
	
	    var str = encodeURIComponent(name) + '=' + encodeURIComponent(value);
	    str += path ? ';path=' + path : '';
	    str += options.domain ? ';domain=' + options.domain : '';
	    str += expires ? ';expires=' + expires.toUTCString() : '';
	    str += options.secure ? ';secure' : '';
	
	    // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:
	    // - 300 cookies
	    // - 20 cookies per unique domain
	    // - 4096 bytes per cookie
	    var cookieLength = str.length + 1;
	    if (cookieLength > 4096) {
	      $log.warn("Cookie '" + name +
	        "' possibly not set or overflowed because it was too large (" +
	        cookieLength + " > 4096 bytes)!");
	    }
	
	    return str;
	  }
	
	  return function(name, value, options) {
	    rawDocument.cookie = buildCookieString(name, value, options);
	  };
	}
	
	$$CookieWriter.$inject = ['$document', '$log', '$browser'];
	
	angular.module('ngCookies').provider('$$cookieWriter', function $$CookieWriterProvider() {
	  this.$get = $$CookieWriter;
	});
	
	
	})(window, window.angular);


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(31);
	module.exports = 'ngMessages';


/***/ },
/* 31 */
/***/ function(module, exports) {

	/**
	 * @license AngularJS v1.5.3
	 * (c) 2010-2016 Google, Inc. http://angularjs.org
	 * License: MIT
	 */
	(function(window, angular, undefined) {'use strict';
	
	/* jshint ignore:start */
	// this code is in the core, but not in angular-messages.js
	var isArray = angular.isArray;
	var forEach = angular.forEach;
	var isString = angular.isString;
	var jqLite = angular.element;
	/* jshint ignore:end */
	
	/**
	 * @ngdoc module
	 * @name ngMessages
	 * @description
	 *
	 * The `ngMessages` module provides enhanced support for displaying messages within templates
	 * (typically within forms or when rendering message objects that return key/value data).
	 * Instead of relying on JavaScript code and/or complex ng-if statements within your form template to
	 * show and hide error messages specific to the state of an input field, the `ngMessages` and
	 * `ngMessage` directives are designed to handle the complexity, inheritance and priority
	 * sequencing based on the order of how the messages are defined in the template.
	 *
	 * Currently, the ngMessages module only contains the code for the `ngMessages`, `ngMessagesInclude`
	 * `ngMessage` and `ngMessageExp` directives.
	 *
	 * # Usage
	 * The `ngMessages` directive allows keys in a key/value collection to be associated with a child element
	 * (or 'message') that will show or hide based on the truthiness of that key's value in the collection. A common use
	 * case for `ngMessages` is to display error messages for inputs using the `$error` object exposed by the
	 * {@link ngModel ngModel} directive.
	 *
	 * The child elements of the `ngMessages` directive are matched to the collection keys by a `ngMessage` or
	 * `ngMessageExp` directive. The value of these attributes must match a key in the collection that is provided by
	 * the `ngMessages` directive.
	 *
	 * Consider the following example, which illustrates a typical use case of `ngMessages`. Within the form `myForm` we
	 * have a text input named `myField` which is bound to the scope variable `field` using the {@link ngModel ngModel}
	 * directive.
	 *
	 * The `myField` field is a required input of type `email` with a maximum length of 15 characters.
	 *
	 * ```html
	 * <form name="myForm">
	 *   <label>
	 *     Enter text:
	 *     <input type="email" ng-model="field" name="myField" required maxlength="15" />
	 *   </label>
	 *   <div ng-messages="myForm.myField.$error" role="alert">
	 *     <div ng-message="required">Please enter a value for this field.</div>
	 *     <div ng-message="email">This field must be a valid email address.</div>
	 *     <div ng-message="maxlength">This field can be at most 15 characters long.</div>
	 *   </div>
	 * </form>
	 * ```
	 *
	 * In order to show error messages corresponding to `myField` we first create an element with an `ngMessages` attribute
	 * set to the `$error` object owned by the `myField` input in our `myForm` form.
	 *
	 * Within this element we then create separate elements for each of the possible errors that `myField` could have.
	 * The `ngMessage` attribute is used to declare which element(s) will appear for which error - for example,
	 * setting `ng-message="required"` specifies that this particular element should be displayed when there
	 * is no value present for the required field `myField` (because the key `required` will be `true` in the object
	 * `myForm.myField.$error`).
	 *
	 * ### Message order
	 *
	 * By default, `ngMessages` will only display one message for a particular key/value collection at any time. If more
	 * than one message (or error) key is currently true, then which message is shown is determined by the order of messages
	 * in the HTML template code (messages declared first are prioritised). This mechanism means the developer does not have
	 * to prioritise messages using custom JavaScript code.
	 *
	 * Given the following error object for our example (which informs us that the field `myField` currently has both the
	 * `required` and `email` errors):
	 *
	 * ```javascript
	 * <!-- keep in mind that ngModel automatically sets these error flags -->
	 * myField.$error = { required : true, email: true, maxlength: false };
	 * ```
	 * The `required` message will be displayed to the user since it appears before the `email` message in the DOM.
	 * Once the user types a single character, the `required` message will disappear (since the field now has a value)
	 * but the `email` message will be visible because it is still applicable.
	 *
	 * ### Displaying multiple messages at the same time
	 *
	 * While `ngMessages` will by default only display one error element at a time, the `ng-messages-multiple` attribute can
	 * be applied to the `ngMessages` container element to cause it to display all applicable error messages at once:
	 *
	 * ```html
	 * <!-- attribute-style usage -->
	 * <div ng-messages="myForm.myField.$error" ng-messages-multiple>...</div>
	 *
	 * <!-- element-style usage -->
	 * <ng-messages for="myForm.myField.$error" multiple>...</ng-messages>
	 * ```
	 *
	 * ## Reusing and Overriding Messages
	 * In addition to prioritization, ngMessages also allows for including messages from a remote or an inline
	 * template. This allows for generic collection of messages to be reused across multiple parts of an
	 * application.
	 *
	 * ```html
	 * <script type="text/ng-template" id="error-messages">
	 *   <div ng-message="required">This field is required</div>
	 *   <div ng-message="minlength">This field is too short</div>
	 * </script>
	 *
	 * <div ng-messages="myForm.myField.$error" role="alert">
	 *   <div ng-messages-include="error-messages"></div>
	 * </div>
	 * ```
	 *
	 * However, including generic messages may not be useful enough to match all input fields, therefore,
	 * `ngMessages` provides the ability to override messages defined in the remote template by redefining
	 * them within the directive container.
	 *
	 * ```html
	 * <!-- a generic template of error messages known as "my-custom-messages" -->
	 * <script type="text/ng-template" id="my-custom-messages">
	 *   <div ng-message="required">This field is required</div>
	 *   <div ng-message="minlength">This field is too short</div>
	 * </script>
	 *
	 * <form name="myForm">
	 *   <label>
	 *     Email address
	 *     <input type="email"
	 *            id="email"
	 *            name="myEmail"
	 *            ng-model="email"
	 *            minlength="5"
	 *            required />
	 *   </label>
	 *   <!-- any ng-message elements that appear BEFORE the ng-messages-include will
	 *        override the messages present in the ng-messages-include template -->
	 *   <div ng-messages="myForm.myEmail.$error" role="alert">
	 *     <!-- this required message has overridden the template message -->
	 *     <div ng-message="required">You did not enter your email address</div>
	 *
	 *     <!-- this is a brand new message and will appear last in the prioritization -->
	 *     <div ng-message="email">Your email address is invalid</div>
	 *
	 *     <!-- and here are the generic error messages -->
	 *     <div ng-messages-include="my-custom-messages"></div>
	 *   </div>
	 * </form>
	 * ```
	 *
	 * In the example HTML code above the message that is set on required will override the corresponding
	 * required message defined within the remote template. Therefore, with particular input fields (such
	 * email addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied
	 * while more generic messages can be used to handle other, more general input errors.
	 *
	 * ## Dynamic Messaging
	 * ngMessages also supports using expressions to dynamically change key values. Using arrays and
	 * repeaters to list messages is also supported. This means that the code below will be able to
	 * fully adapt itself and display the appropriate message when any of the expression data changes:
	 *
	 * ```html
	 * <form name="myForm">
	 *   <label>
	 *     Email address
	 *     <input type="email"
	 *            name="myEmail"
	 *            ng-model="email"
	 *            minlength="5"
	 *            required />
	 *   </label>
	 *   <div ng-messages="myForm.myEmail.$error" role="alert">
	 *     <div ng-message="required">You did not enter your email address</div>
	 *     <div ng-repeat="errorMessage in errorMessages">
	 *       <!-- use ng-message-exp for a message whose key is given by an expression -->
	 *       <div ng-message-exp="errorMessage.type">{{ errorMessage.text }}</div>
	 *     </div>
	 *   </div>
	 * </form>
	 * ```
	 *
	 * The `errorMessage.type` expression can be a string value or it can be an array so
	 * that multiple errors can be associated with a single error message:
	 *
	 * ```html
	 *   <label>
	 *     Email address
	 *     <input type="email"
	 *            ng-model="data.email"
	 *            name="myEmail"
	 *            ng-minlength="5"
	 *            ng-maxlength="100"
	 *            required />
	 *   </label>
	 *   <div ng-messages="myForm.myEmail.$error" role="alert">
	 *     <div ng-message-exp="'required'">You did not enter your email address</div>
	 *     <div ng-message-exp="['minlength', 'maxlength']">
	 *       Your email must be between 5 and 100 characters long
	 *     </div>
	 *   </div>
	 * ```
	 *
	 * Feel free to use other structural directives such as ng-if and ng-switch to further control
	 * what messages are active and when. Be careful, if you place ng-message on the same element
	 * as these structural directives, Angular may not be able to determine if a message is active
	 * or not. Therefore it is best to place the ng-message on a child element of the structural
	 * directive.
	 *
	 * ```html
	 * <div ng-messages="myForm.myEmail.$error" role="alert">
	 *   <div ng-if="showRequiredError">
	 *     <div ng-message="required">Please enter something</div>
	 *   </div>
	 * </div>
	 * ```
	 *
	 * ## Animations
	 * If the `ngAnimate` module is active within the application then the `ngMessages`, `ngMessage` and
	 * `ngMessageExp` directives will trigger animations whenever any messages are added and removed from
	 * the DOM by the `ngMessages` directive.
	 *
	 * Whenever the `ngMessages` directive contains one or more visible messages then the `.ng-active` CSS
	 * class will be added to the element. The `.ng-inactive` CSS class will be applied when there are no
	 * messages present. Therefore, CSS transitions and keyframes as well as JavaScript animations can
	 * hook into the animations whenever these classes are added/removed.
	 *
	 * Let's say that our HTML code for our messages container looks like so:
	 *
	 * ```html
	 * <div ng-messages="myMessages" class="my-messages" role="alert">
	 *   <div ng-message="alert" class="some-message">...</div>
	 *   <div ng-message="fail" class="some-message">...</div>
	 * </div>
	 * ```
	 *
	 * Then the CSS animation code for the message container looks like so:
	 *
	 * ```css
	 * .my-messages {
	 *   transition:1s linear all;
	 * }
	 * .my-messages.ng-active {
	 *   // messages are visible
	 * }
	 * .my-messages.ng-inactive {
	 *   // messages are hidden
	 * }
	 * ```
	 *
	 * Whenever an inner message is attached (becomes visible) or removed (becomes hidden) then the enter
	 * and leave animation is triggered for each particular element bound to the `ngMessage` directive.
	 *
	 * Therefore, the CSS code for the inner messages looks like so:
	 *
	 * ```css
	 * .some-message {
	 *   transition:1s linear all;
	 * }
	 *
	 * .some-message.ng-enter {}
	 * .some-message.ng-enter.ng-enter-active {}
	 *
	 * .some-message.ng-leave {}
	 * .some-message.ng-leave.ng-leave-active {}
	 * ```
	 *
	 * {@link ngAnimate Click here} to learn how to use JavaScript animations or to learn more about ngAnimate.
	 */
	angular.module('ngMessages', [])
	
	   /**
	    * @ngdoc directive
	    * @module ngMessages
	    * @name ngMessages
	    * @restrict AE
	    *
	    * @description
	    * `ngMessages` is a directive that is designed to show and hide messages based on the state
	    * of a key/value object that it listens on. The directive itself complements error message
	    * reporting with the `ngModel` $error object (which stores a key/value state of validation errors).
	    *
	    * `ngMessages` manages the state of internal messages within its container element. The internal
	    * messages use the `ngMessage` directive and will be inserted/removed from the page depending
	    * on if they're present within the key/value object. By default, only one message will be displayed
	    * at a time and this depends on the prioritization of the messages within the template. (This can
	    * be changed by using the `ng-messages-multiple` or `multiple` attribute on the directive container.)
	    *
	    * A remote template can also be used to promote message reusability and messages can also be
	    * overridden.
	    *
	    * {@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.
	    *
	    * @usage
	    * ```html
	    * <!-- using attribute directives -->
	    * <ANY ng-messages="expression" role="alert">
	    *   <ANY ng-message="stringValue">...</ANY>
	    *   <ANY ng-message="stringValue1, stringValue2, ...">...</ANY>
	    *   <ANY ng-message-exp="expressionValue">...</ANY>
	    * </ANY>
	    *
	    * <!-- or by using element directives -->
	    * <ng-messages for="expression" role="alert">
	    *   <ng-message when="stringValue">...</ng-message>
	    *   <ng-message when="stringValue1, stringValue2, ...">...</ng-message>
	    *   <ng-message when-exp="expressionValue">...</ng-message>
	    * </ng-messages>
	    * ```
	    *
	    * @param {string} ngMessages an angular expression evaluating to a key/value object
	    *                 (this is typically the $error object on an ngModel instance).
	    * @param {string=} ngMessagesMultiple|multiple when set, all messages will be displayed with true
	    *
	    * @example
	    * <example name="ngMessages-directive" module="ngMessagesExample"
	    *          deps="angular-messages.js"
	    *          animations="true" fixBase="true">
	    *   <file name="index.html">
	    *     <form name="myForm">
	    *       <label>
	    *         Enter your name:
	    *         <input type="text"
	    *                name="myName"
	    *                ng-model="name"
	    *                ng-minlength="5"
	    *                ng-maxlength="20"
	    *                required />
	    *       </label>
	    *       <pre>myForm.myName.$error = {{ myForm.myName.$error | json }}</pre>
	    *
	    *       <div ng-messages="myForm.myName.$error" style="color:maroon" role="alert">
	    *         <div ng-message="required">You did not enter a field</div>
	    *         <div ng-message="minlength">Your field is too short</div>
	    *         <div ng-message="maxlength">Your field is too long</div>
	    *       </div>
	    *     </form>
	    *   </file>
	    *   <file name="script.js">
	    *     angular.module('ngMessagesExample', ['ngMessages']);
	    *   </file>
	    * </example>
	    */
	   .directive('ngMessages', ['$animate', function($animate) {
	     var ACTIVE_CLASS = 'ng-active';
	     var INACTIVE_CLASS = 'ng-inactive';
	
	     return {
	       require: 'ngMessages',
	       restrict: 'AE',
	       controller: ['$element', '$scope', '$attrs', function($element, $scope, $attrs) {
	         var ctrl = this;
	         var latestKey = 0;
	         var nextAttachId = 0;
	
	         this.getAttachId = function getAttachId() { return nextAttachId++; };
	
	         var messages = this.messages = {};
	         var renderLater, cachedCollection;
	
	         this.render = function(collection) {
	           collection = collection || {};
	
	           renderLater = false;
	           cachedCollection = collection;
	
	           // this is true if the attribute is empty or if the attribute value is truthy
	           var multiple = isAttrTruthy($scope, $attrs.ngMessagesMultiple) ||
	                          isAttrTruthy($scope, $attrs.multiple);
	
	           var unmatchedMessages = [];
	           var matchedKeys = {};
	           var messageItem = ctrl.head;
	           var messageFound = false;
	           var totalMessages = 0;
	
	           // we use != instead of !== to allow for both undefined and null values
	           while (messageItem != null) {
	             totalMessages++;
	             var messageCtrl = messageItem.message;
	
	             var messageUsed = false;
	             if (!messageFound) {
	               forEach(collection, function(value, key) {
	                 if (!messageUsed && truthy(value) && messageCtrl.test(key)) {
	                   // this is to prevent the same error name from showing up twice
	                   if (matchedKeys[key]) return;
	                   matchedKeys[key] = true;
	
	                   messageUsed = true;
	                   messageCtrl.attach();
	                 }
	               });
	             }
	
	             if (messageUsed) {
	               // unless we want to display multiple messages then we should
	               // set a flag here to avoid displaying the next message in the list
	               messageFound = !multiple;
	             } else {
	               unmatchedMessages.push(messageCtrl);
	             }
	
	             messageItem = messageItem.next;
	           }
	
	           forEach(unmatchedMessages, function(messageCtrl) {
	             messageCtrl.detach();
	           });
	
	           unmatchedMessages.length !== totalMessages
	              ? $animate.setClass($element, ACTIVE_CLASS, INACTIVE_CLASS)
	              : $animate.setClass($element, INACTIVE_CLASS, ACTIVE_CLASS);
	         };
	
	         $scope.$watchCollection($attrs.ngMessages || $attrs['for'], ctrl.render);
	
	         // If the element is destroyed, proactively destroy all the currently visible messages
	         $element.on('$destroy', function() {
	           forEach(messages, function(item) {
	             item.message.detach();
	           });
	         });
	
	         this.reRender = function() {
	           if (!renderLater) {
	             renderLater = true;
	             $scope.$evalAsync(function() {
	               if (renderLater) {
	                 cachedCollection && ctrl.render(cachedCollection);
	               }
	             });
	           }
	         };
	
	         this.register = function(comment, messageCtrl) {
	           var nextKey = latestKey.toString();
	           messages[nextKey] = {
	             message: messageCtrl
	           };
	           insertMessageNode($element[0], comment, nextKey);
	           comment.$$ngMessageNode = nextKey;
	           latestKey++;
	
	           ctrl.reRender();
	         };
	
	         this.deregister = function(comment) {
	           var key = comment.$$ngMessageNode;
	           delete comment.$$ngMessageNode;
	           removeMessageNode($element[0], comment, key);
	           delete messages[key];
	           ctrl.reRender();
	         };
	
	         function findPreviousMessage(parent, comment) {
	           var prevNode = comment;
	           var parentLookup = [];
	
	           while (prevNode && prevNode !== parent) {
	             var prevKey = prevNode.$$ngMessageNode;
	             if (prevKey && prevKey.length) {
	               return messages[prevKey];
	             }
	
	             // dive deeper into the DOM and examine its children for any ngMessage
	             // comments that may be in an element that appears deeper in the list
	             if (prevNode.childNodes.length && parentLookup.indexOf(prevNode) == -1) {
	               parentLookup.push(prevNode);
	               prevNode = prevNode.childNodes[prevNode.childNodes.length - 1];
	             } else if (prevNode.previousSibling) {
	               prevNode = prevNode.previousSibling;
	             } else {
	               prevNode = prevNode.parentNode;
	               parentLookup.push(prevNode);
	             }
	           }
	         }
	
	         function insertMessageNode(parent, comment, key) {
	           var messageNode = messages[key];
	           if (!ctrl.head) {
	             ctrl.head = messageNode;
	           } else {
	             var match = findPreviousMessage(parent, comment);
	             if (match) {
	               messageNode.next = match.next;
	               match.next = messageNode;
	             } else {
	               messageNode.next = ctrl.head;
	               ctrl.head = messageNode;
	             }
	           }
	         }
	
	         function removeMessageNode(parent, comment, key) {
	           var messageNode = messages[key];
	
	           var match = findPreviousMessage(parent, comment);
	           if (match) {
	             match.next = messageNode.next;
	           } else {
	             ctrl.head = messageNode.next;
	           }
	         }
	       }]
	     };
	
	     function isAttrTruthy(scope, attr) {
	      return (isString(attr) && attr.length === 0) || //empty attribute
	             truthy(scope.$eval(attr));
	     }
	
	     function truthy(val) {
	       return isString(val) ? val.length : !!val;
	     }
	   }])
	
	   /**
	    * @ngdoc directive
	    * @name ngMessagesInclude
	    * @restrict AE
	    * @scope
	    *
	    * @description
	    * `ngMessagesInclude` is a directive with the purpose to import existing ngMessage template
	    * code from a remote template and place the downloaded template code into the exact spot
	    * that the ngMessagesInclude directive is placed within the ngMessages container. This allows
	    * for a series of pre-defined messages to be reused and also allows for the developer to
	    * determine what messages are overridden due to the placement of the ngMessagesInclude directive.
	    *
	    * @usage
	    * ```html
	    * <!-- using attribute directives -->
	    * <ANY ng-messages="expression" role="alert">
	    *   <ANY ng-messages-include="remoteTplString">...</ANY>
	    * </ANY>
	    *
	    * <!-- or by using element directives -->
	    * <ng-messages for="expression" role="alert">
	    *   <ng-messages-include src="expressionValue1">...</ng-messages-include>
	    * </ng-messages>
	    * ```
	    *
	    * {@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.
	    *
	    * @param {string} ngMessagesInclude|src a string value corresponding to the remote template.
	    */
	   .directive('ngMessagesInclude',
	     ['$templateRequest', '$document', '$compile', function($templateRequest, $document, $compile) {
	
	     return {
	       restrict: 'AE',
	       require: '^^ngMessages', // we only require this for validation sake
	       link: function($scope, element, attrs) {
	         var src = attrs.ngMessagesInclude || attrs.src;
	         $templateRequest(src).then(function(html) {
	           $compile(html)($scope, function(contents) {
	             element.after(contents);
	
	             // the anchor is placed for debugging purposes
	             var comment = $compile.$$createComment ?
	                 $compile.$$createComment('ngMessagesInclude', src) :
	                 $document[0].createComment(' ngMessagesInclude: ' + src + ' ');
	             var anchor = jqLite(comment);
	             element.after(anchor);
	
	             // we don't want to pollute the DOM anymore by keeping an empty directive element
	             element.remove();
	           });
	         });
	       }
	     };
	   }])
	
	   /**
	    * @ngdoc directive
	    * @name ngMessage
	    * @restrict AE
	    * @scope
	    *
	    * @description
	    * `ngMessage` is a directive with the purpose to show and hide a particular message.
	    * For `ngMessage` to operate, a parent `ngMessages` directive on a parent DOM element
	    * must be situated since it determines which messages are visible based on the state
	    * of the provided key/value map that `ngMessages` listens on.
	    *
	    * More information about using `ngMessage` can be found in the
	    * {@link module:ngMessages `ngMessages` module documentation}.
	    *
	    * @usage
	    * ```html
	    * <!-- using attribute directives -->
	    * <ANY ng-messages="expression" role="alert">
	    *   <ANY ng-message="stringValue">...</ANY>
	    *   <ANY ng-message="stringValue1, stringValue2, ...">...</ANY>
	    * </ANY>
	    *
	    * <!-- or by using element directives -->
	    * <ng-messages for="expression" role="alert">
	    *   <ng-message when="stringValue">...</ng-message>
	    *   <ng-message when="stringValue1, stringValue2, ...">...</ng-message>
	    * </ng-messages>
	    * ```
	    *
	    * @param {expression} ngMessage|when a string value corresponding to the message key.
	    */
	  .directive('ngMessage', ngMessageDirectiveFactory())
	
	
	   /**
	    * @ngdoc directive
	    * @name ngMessageExp
	    * @restrict AE
	    * @priority 1
	    * @scope
	    *
	    * @description
	    * `ngMessageExp` is a directive with the purpose to show and hide a particular message.
	    * For `ngMessageExp` to operate, a parent `ngMessages` directive on a parent DOM element
	    * must be situated since it determines which messages are visible based on the state
	    * of the provided key/value map that `ngMessages` listens on.
	    *
	    * @usage
	    * ```html
	    * <!-- using attribute directives -->
	    * <ANY ng-messages="expression">
	    *   <ANY ng-message-exp="expressionValue">...</ANY>
	    * </ANY>
	    *
	    * <!-- or by using element directives -->
	    * <ng-messages for="expression">
	    *   <ng-message when-exp="expressionValue">...</ng-message>
	    * </ng-messages>
	    * ```
	    *
	    * {@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.
	    *
	    * @param {expression} ngMessageExp|whenExp an expression value corresponding to the message key.
	    */
	  .directive('ngMessageExp', ngMessageDirectiveFactory());
	
	function ngMessageDirectiveFactory() {
	  return ['$animate', function($animate) {
	    return {
	      restrict: 'AE',
	      transclude: 'element',
	      priority: 1, // must run before ngBind, otherwise the text is set on the comment
	      terminal: true,
	      require: '^^ngMessages',
	      link: function(scope, element, attrs, ngMessagesCtrl, $transclude) {
	        var commentNode = element[0];
	
	        var records;
	        var staticExp = attrs.ngMessage || attrs.when;
	        var dynamicExp = attrs.ngMessageExp || attrs.whenExp;
	        var assignRecords = function(items) {
	          records = items
	              ? (isArray(items)
	                    ? items
	                    : items.split(/[\s,]+/))
	              : null;
	          ngMessagesCtrl.reRender();
	        };
	
	        if (dynamicExp) {
	          assignRecords(scope.$eval(dynamicExp));
	          scope.$watchCollection(dynamicExp, assignRecords);
	        } else {
	          assignRecords(staticExp);
	        }
	
	        var currentElement, messageCtrl;
	        ngMessagesCtrl.register(commentNode, messageCtrl = {
	          test: function(name) {
	            return contains(records, name);
	          },
	          attach: function() {
	            if (!currentElement) {
	              $transclude(scope, function(elm) {
	                $animate.enter(elm, null, element);
	                currentElement = elm;
	
	                // Each time we attach this node to a message we get a new id that we can match
	                // when we are destroying the node later.
	                var $$attachId = currentElement.$$attachId = ngMessagesCtrl.getAttachId();
	
	                // in the event that the element or a parent element is destroyed
	                // by another structural directive then it's time
	                // to deregister the message from the controller
	                currentElement.on('$destroy', function() {
	                  if (currentElement && currentElement.$$attachId === $$attachId) {
	                    ngMessagesCtrl.deregister(commentNode);
	                    messageCtrl.detach();
	                  }
	                });
	              });
	            }
	          },
	          detach: function() {
	            if (currentElement) {
	              var elm = currentElement;
	              currentElement = null;
	              $animate.leave(elm);
	            }
	          }
	        });
	      }
	    };
	  }];
	
	  function contains(collection, key) {
	    if (collection) {
	      return isArray(collection)
	          ? collection.indexOf(key) >= 0
	          : collection.hasOwnProperty(key);
	    }
	  }
	}
	
	
	})(window, window.angular);


/***/ },
/* 32 */
/***/ function(module, exports) {

	angular.module('snap', []);
	
	(function() {
	  'use strict';
	  var version = [1, 8, 5]
	    , vObj = {
	        full: version.join('.'),
	        major: version[0],
	        minor: version[1],
	        patch: version[2]
	      };
	  angular.module('snap').constant('SNAP_VERSION', vObj);
	}());
	
	angular.module('snap')
	  .directive('snapClose', ['$rootScope', 'snapRemote', function($rootScope, snapRemote) {
	    'use strict';
	    return {
	      restrict: 'A',
	      link: function (scope, element, attrs) {
	        element.bind('click', function() {
	          // Wrap in anonymous function for easier testing
	          snapRemote.close(scope.$eval(attrs.snapId));
	          $rootScope.$digest();
	        });
	      }
	    };
	  }]);
	
	angular.module('snap')
	  .directive('snapContent', ['SnapConstructor', 'snapRemote', function (SnapConstructor, snapRemote) {
	    'use strict';
	    return {
	      restrict: 'AE',
	      link: function postLink(scope, element, attrs) {
	        element.addClass('snap-content');
	
	        var snapId = attrs.snapId;
	        if(!!snapId) {
	          snapId = scope.$eval(attrs.snapId);
	        }
	
	        var snapOptions = angular.extend({}, snapRemote.globalOptions);
	
	        var watchAttr = function(val, attr) {
	          scope.$watch(function() {
	            return scope.$eval(val);
	          }, function(newVal, oldVal) {
	            if(angular.isDefined(oldVal) && newVal !== oldVal) {
	              snapRemote.getSnapper(snapId).then(function(snapper) {
	                var settingsUpdate = {};
	                settingsUpdate[attr] = newVal;
	                snapper.settings(settingsUpdate);
	              });
	            }
	          });
	        };
	
	        // Get `snapOpt*` attrs, for now there is no *binding* going on here.
	        // We're just providing a more declarative way to set initial values.
	        angular.forEach(attrs, function(val, attr) {
	          if(attr.indexOf('snapOpt') === 0) {
	            attr = attr.substring(7);
	            if(attr.length) {
	              attr = attr[0].toLowerCase() + attr.substring(1);
	              snapOptions[attr] = scope.$eval(val);
	              watchAttr(val, attr);
	            }
	          }
	        });
	
	        // Always force the snap element to be the one this directive is
	        // attached to.
	        snapOptions.element = element[0];
	
	        // override snap options if some provided in snap-options attribute
	        if(angular.isDefined(attrs.snapOptions) && attrs.snapOptions) {
	          angular.extend(snapOptions, scope.$eval(attrs.snapOptions));
	        }
	
	        snapRemote.register(new SnapConstructor(snapOptions), snapId);
	
	        // watch snapOptions for updates
	        if(angular.isDefined(attrs.snapOptions) && attrs.snapOptions) {
	          scope.$watch(attrs.snapOptions, function(newSnapOptions) {
	            snapRemote.getSnapper(snapId).then(function(snapper) {
	              snapper.settings(newSnapOptions);
	            });
	          }, true);
	        }
	
	        scope.$on('$destroy', function() {
	          snapRemote.unregister(snapId);
	        });
	      }
	    };
	  }]);
	
	angular.module('snap')
	  .directive('snapDragger', ['snapRemote', function(snapRemote) {
	    'use strict';
	    return {
	      restrict: 'AE',
	      link: function(scope, element, attrs) {
	        var snapId = scope.$eval(attrs.snapId);
	        snapRemote.getSnapper(snapId).then(function(snapper) {
	          snapper.settings({
	            dragger: element[0]
	          });
	        });
	      }
	    };
	  }]);
	
	
	angular.module('snap')
	  .directive('snapDrawer', function () {
	    'use strict';
	    return {
	      restrict: 'AE',
	      link: function(scope, element, attrs) {
	        element.addClass('snap-drawer');
	
	        // Don't force a `snap-drawers` wrapper when we only want to use a
	        // single shelf
	        var parent = element.parent()
	          , needsDrawersWrapper = true;
	
	        if (attrs.snapDrawer === 'right') {
	          element.addClass('snap-drawer-right');
	        } else {
	          element.addClass('snap-drawer-left');
	        }
	
	        while(parent.length) {
	          if(parent.hasClass('snap-drawers')) {
	            needsDrawersWrapper = false;
	          }
	          parent = parent.parent();
	        }
	
	        if(needsDrawersWrapper) {
	          element.wrap('<div class="snap-drawers" />');
	        }
	
	      }
	    };
	  });
	
	angular.module('snap')
	  .directive('snapDrawers', function () {
	    'use strict';
	    return {
	      restrict: 'AE',
	      compile: function(element, attrs) {
	        element.addClass('snap-drawers');
	      }
	    };
	  });
	
	
	angular.module('snap')
	  .directive('snapToggle', ['$rootScope', 'snapRemote', function($rootScope, snapRemote) {
	      'use strict';
	      return {
	        restrict: 'A',
	        link: function (scope, element, attrs) {
	          var snapId = attrs.snapId
	            , snapSide = attrs.snapToggle || 'left';
	
	          if(!!snapId) {
	            snapId = scope.$eval(snapId);
	          }
	
	          /**
	           * Stifle mousedown and mouseup events by default
	           *
	           * See issue #61
	           *
	           * mousedown can create a race condition with the Snap.js `tapToClose`
	           * setting, the `tapToClose` handler runs first (if drawer is open)
	           * then our toggle handler runs. Depending on how far along in the
	           * close animation the drawer is when the toggle handler runs we may
	           * end up keeping the drawer open (i.e. a quick open/close) or *only*
	           * performing a double close.
	           *
	           * The situation is trickier because we want to allow mouseup events
	           * to flow through **if** the corresponding mousedown event did not
	           * target out toggle button... otherwise you could get stuck in a
	           * drag. We have a naive approach to preventing this... you can still
	           * get stuck in drag temporarily if you: mouse down on the toggle
	           * button, then mouse up off screen, then start a drag, then mouse
	           * down on the toggle button.
	           */
	          if(!attrs.snapUnsafe) {
	            var downOnMe = false;
	            element.bind('mousedown', function(event) {
	              downOnMe = true;
	              event.stopImmediatePropagation();
	            });
	
	            element.bind('mouseup', function(event) {
	              if(downOnMe) {
	                event.stopImmediatePropagation();
	              }
	              downOnMe = false;
	            });
	          }
	
	          element.bind('click', function() {
	            snapRemote.toggle(snapSide, snapId);
	            $rootScope.$digest();
	          });
	        }
	      };
	  }]);
	
	angular.module('snap')
	.provider('SnapConstructor', function() {
	  'use strict';
	  var constructor;
	
	  this.use = function(MySnap) {
	    constructor = MySnap;
	  };
	
	  this.$get = ['$window', function($window) {
	    var S = constructor || $window.Snap;
	    if(angular.isUndefined(S)) {
	      throw new Error('Snap constructor is not defined. Make sure ' +
	          'window.Snap is defined or supply your own with ' +
	          'SnapConstructorProvider.use(MySnap).');
	    }
	    return S;
	  }];
	});
	
	
	angular.module('snap')
	.provider('snapRemote', function SnapRemoteProvider() {
	  'use strict';
	
	  // Global Snap.js options
	  var self = this;
	  this.globalOptions = {};
	
	  this.$get = ['$q', function($q) {
	
	    var snapperStore = {}
	      , DEFAULT_SNAPPER_ID = '__DEFAULT_SNAPPER_ID__'
	      , exports = {}
	      , initStoreForId
	      , resolveInStoreById;
	
	    exports.globalOptions = self.globalOptions;
	
	    exports.getSnapper = function(id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      if(!snapperStore.hasOwnProperty(id)) {
	        initStoreForId(id);
	      }
	      return snapperStore[id].deferred.promise;
	    };
	
	    exports.register = function(snapper, id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      if(!snapperStore.hasOwnProperty(id)) {
	        initStoreForId(id);
	      }
	      if(snapperStore[id].isResolved) {
	        initStoreForId(id);
	      }
	      resolveInStoreById(snapper, id);
	    };
	
	    exports.unregister = function(id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      if(snapperStore.hasOwnProperty(id)) {
	        delete snapperStore[id];
	      }
	    };
	
	    exports.toggle = function(side, id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      exports.getSnapper(id).then(function(snapper) {
	        if(side === snapper.state().state) {
	          exports.close(id);
	        } else {
	          exports.open(side, id);
	        }
	      });
	    };
	
	    exports.open = function(side, id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      exports.getSnapper(id).then(function(snapper) {
	        snapper.open(side);
	      });
	    };
	
	    exports.close = function(id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      exports.getSnapper(id).then(function(snapper) {
	        snapper.close();
	      });
	    };
	
	    exports.expand = function(side, id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      exports.getSnapper(id).then(function(snapper) {
	        snapper.expand(side);
	      });
	    };
	
	    exports.enable = function(id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      exports.getSnapper(id).then(function(snapper) {
	        snapper.enable();
	      });
	    };
	
	    exports.disable = function(id) {
	      id = id || DEFAULT_SNAPPER_ID;
	      exports.getSnapper(id).then(function(snapper) {
	        snapper.disable();
	      });
	    };
	
	    initStoreForId = function(id) {
	      snapperStore[id] = {
	        deferred: $q.defer(),
	        isResolved: false
	      };
	    };
	
	    resolveInStoreById = function(snapper, id) {
	      snapperStore[id].deferred.resolve(snapper);
	      snapperStore[id].isResolved = true;
	    };
	
	    return exports;
	  }];
	
	  return this;
	});


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(34);
	
	var copy = __webpack_require__(35); /**
	                                    * Created by rdollete on 4/1/16.
	                                    */
	
	
	var templateHome = __webpack_require__(116);
	var templateAbout = __webpack_require__(119);
	var templateWork = __webpack_require__(125);
	var templateWorkAnthem = __webpack_require__(126);
	var templateWorkWilsonX = __webpack_require__(127);
	var templateWorkSLS = __webpack_require__(128);
	var templateWorkXome = __webpack_require__(129);
	var templateWorkThinkThin = __webpack_require__(130);
	var templateWorkMens = __webpack_require__(131);
	var templateWorkSunny = __webpack_require__(132);
	var templateWorkCooper = __webpack_require__(133);
	var templateEntertainment = __webpack_require__(134);
	var templateCulture = __webpack_require__(135);
	var templateContact = __webpack_require__(146);
	var templateJobs = __webpack_require__(147);
	
	angular.module('phenoCom').config(function ($stateProvider, $urlRouterProvider, $sceDelegateProvider) {
	
	    $sceDelegateProvider.resourceUrlWhitelist(['self', 'http://tech.phenomenonstaging.com/**', 'https://player.vimeo.com/**', 'https://vimeo.com/**']);
	
	    // config routing
	    $urlRouterProvider.otherwise('/');
	
	    $stateProvider.state('home', {
	        url: '/',
	        template: templateHome,
	        data: {
	            pageTitle: 'PHENOMENON'
	        }
	    }).state('about', {
	        url: '/about',
	        template: templateAbout,
	        data: {
	            pageTitle: 'PHENOMENON'
	        }
	    }).state('work', {
	        url: '/work',
	        template: templateWork,
	        data: {
	            pageTitle: 'PHENOMENON - Wilson X case study'
	        }
	    }).state('work/wilson-anthem', {
	        url: '/work/wilson-anthem',
	        template: templateWorkAnthem,
	        data: {
	            pageTitle: 'PHENOMENON - Wilson Anthem case study'
	        }
	    }).state('work/wilson-x', {
	        url: '/work/wilson-x',
	        template: templateWorkWilsonX,
	        data: {
	            pageTitle: 'PHENOMENON - Wilson X case study'
	        }
	    }).state('work/xome', {
	        url: '/work/xome',
	        template: templateWorkXome,
	        data: {
	            pageTitle: 'PHENOMENON - Xome case study'
	        }
	    }).state('work/mens-wearhouse', {
	        url: '/work/mens-wearhouse',
	        template: templateWorkMens,
	        data: {
	            pageTitle: 'PHENOMENON - Wilson Anthem case study'
	        }
	    }).state('work/think-thin', {
	        url: '/work/think-thin',
	        template: templateWorkThinkThin,
	        data: {
	            pageTitle: 'PHENOMENON - Think Thin case study'
	        }
	    }).state('work/sls', {
	        url: '/work/sls',
	        template: templateWorkSLS,
	        data: {
	            pageTitle: 'PHENOMENON - SLS case study'
	        }
	    }).state('work/sunny', {
	        url: '/work/sunny',
	        template: templateWorkSunny,
	        data: {
	            pageTitle: 'PHENOMENON - Sunny case study'
	        }
	    }).state('work/cooper', {
	        url: '/work/cooper',
	        template: templateWorkCooper,
	        data: {
	            pageTitle: 'PHENOMENON - Mr.Cooper case study'
	        }
	    }).state('entertainment', {
	        url: '/entertainment',
	        template: templateEntertainment,
	        data: {
	            pageTitle: 'PHENOMENON - Wilson Anthem case study'
	        }
	    }).state('culture', {
	        url: '/culture',
	        template: templateCulture,
	        data: {
	            pageTitle: 'PHENOMENON - Xome case study'
	        }
	    }).state('think-thin', {
	        url: '/think-thin',
	        templateUrl: '/views/think-thin',
	        data: {
	            pageTitle: 'PHENOMENON - thinkThin case study'
	        }
	    }).state('jobs', {
	        url: '/jobs',
	        template: templateJobs,
	        data: {
	            pageTitle: 'PHENOMENON - Jobs'
	        }
	    }).state('contact', {
	        url: '/contact',
	        template: templateContact,
	        controller: 'contactController',
	        data: {
	            pageTitle: 'PHENOMENON - Contact Us'
	        }
	    }).state('thanks', {
	        url: '/thanks',
	        templateUrl: '/views/components/thanks',
	        data: {
	            pageTitle: 'PHENOMENON - Thanks'
	        }
	    });
	});

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_jQuery, jQuery) {/**
	 * Owl carousel
	 * @version 2.0.0-beta.3
	 * @author Bartosz Wojciechowski
	 * @license The MIT License (MIT)
	 * @todo Lazy Load Icon
	 * @todo prevent animationend bubling
	 * @todo itemsScaleUp
	 * @todo Test Zepto
	 * @todo stagePadding calculate wrong active classes
	 */
	;(function($, window, document, undefined) {
	
		/**
		 * Creates a carousel.
		 * @class The Owl Carousel.
		 * @public
		 * @param {HTMLElement|jQuery} element - The element to create the carousel for.
		 * @param {Object} [options] - The options
		 */
		function Owl(element, options) {
	
			/**
			 * Current settings for the carousel.
			 * @public
			 */
			this.settings = null;
	
			/**
			 * Current options set by the caller including defaults.
			 * @public
			 */
			this.options = $.extend({}, Owl.Defaults, options);
	
			/**
			 * Plugin element.
			 * @public
			 */
			this.$element = $(element);
	
			/**
			 * Proxied event handlers.
			 * @protected
			 */
			this._handlers = {};
	
			/**
			 * References to the running plugins of this carousel.
			 * @protected
			 */
			this._plugins = {};
	
			/**
			 * Currently suppressed events to prevent them from beeing retriggered.
			 * @protected
			 */
			this._supress = {};
	
			/**
			 * Absolute current position.
			 * @protected
			 */
			this._current = null;
	
			/**
			 * Animation speed in milliseconds.
			 * @protected
			 */
			this._speed = null;
	
			/**
			 * Coordinates of all items in pixel.
			 * @todo The name of this member is missleading.
			 * @protected
			 */
			this._coordinates = [];
	
			/**
			 * Current breakpoint.
			 * @todo Real media queries would be nice.
			 * @protected
			 */
			this._breakpoint = null;
	
			/**
			 * Current width of the plugin element.
			 */
			this._width = null;
	
			/**
			 * All real items.
			 * @protected
			 */
			this._items = [];
	
			/**
			 * All cloned items.
			 * @protected
			 */
			this._clones = [];
	
			/**
			 * Merge values of all items.
			 * @todo Maybe this could be part of a plugin.
			 * @protected
			 */
			this._mergers = [];
	
			/**
			 * Widths of all items.
			 */
			this._widths = [];
	
			/**
			 * Invalidated parts within the update process.
			 * @protected
			 */
			this._invalidated = {};
	
			/**
			 * Ordered list of workers for the update process.
			 * @protected
			 */
			this._pipe = [];
	
			/**
			 * Current state information for the drag operation.
			 * @todo #261
			 * @protected
			 */
			this._drag = {
				time: null,
				target: null,
				pointer: null,
				stage: {
					start: null,
					current: null
				},
				direction: null
			};
	
			/**
			 * Current state information and their tags.
			 * @type {Object}
			 * @protected
			 */
			this._states = {
				current: {},
				tags: {
					'initializing': [ 'busy' ],
					'animating': [ 'busy' ],
					'dragging': [ 'interacting' ]
				}
			};
	
			$.each([ 'onResize', 'onThrottledResize' ], $.proxy(function(i, handler) {
				this._handlers[handler] = $.proxy(this[handler], this);
			}, this));
	
			$.each(Owl.Plugins, $.proxy(function(key, plugin) {
				this._plugins[key.charAt(0).toLowerCase() + key.slice(1)]
					= new plugin(this);
			}, this));
	
			$.each(Owl.Workers, $.proxy(function(priority, worker) {
				this._pipe.push({
					'filter': worker.filter,
					'run': $.proxy(worker.run, this)
				});
			}, this));
	
			this.setup();
			this.initialize();
		}
	
		/**
		 * Default options for the carousel.
		 * @public
		 */
		Owl.Defaults = {
			items: 3,
			loop: false,
			center: false,
			rewind: false,
	
			mouseDrag: true,
			touchDrag: true,
			pullDrag: true,
			freeDrag: false,
	
			margin: 0,
			stagePadding: 0,
	
			merge: false,
			mergeFit: true,
			autoWidth: false,
	
			startPosition: 0,
			rtl: false,
	
			smartSpeed: 250,
			fluidSpeed: false,
			dragEndSpeed: false,
	
			responsive: {},
			responsiveRefreshRate: 200,
			responsiveBaseElement: window,
	
			fallbackEasing: 'swing',
	
			info: false,
	
			nestedItemSelector: false,
			itemElement: 'div',
			stageElement: 'div',
	
			refreshClass: 'owl-refresh',
			loadedClass: 'owl-loaded',
			loadingClass: 'owl-loading',
			rtlClass: 'owl-rtl',
			responsiveClass: 'owl-responsive',
			dragClass: 'owl-drag',
			itemClass: 'owl-item',
			stageClass: 'owl-stage',
			stageOuterClass: 'owl-stage-outer',
			grabClass: 'owl-grab'
		};
	
		/**
		 * Enumeration for width.
		 * @public
		 * @readonly
		 * @enum {String}
		 */
		Owl.Width = {
			Default: 'default',
			Inner: 'inner',
			Outer: 'outer'
		};
	
		/**
		 * Enumeration for types.
		 * @public
		 * @readonly
		 * @enum {String}
		 */
		Owl.Type = {
			Event: 'event',
			State: 'state'
		};
	
		/**
		 * Contains all registered plugins.
		 * @public
		 */
		Owl.Plugins = {};
	
		/**
		 * List of workers involved in the update process.
		 */
		Owl.Workers = [ {
			filter: [ 'width', 'settings' ],
			run: function() {
				this._width = this.$element.width();
			}
		}, {
			filter: [ 'width', 'items', 'settings' ],
			run: function(cache) {
				cache.current = this._items && this._items[this.relative(this._current)];
			}
		}, {
			filter: [ 'items', 'settings' ],
			run: function() {
				this.$stage.children('.cloned').remove();
			}
		}, {
			filter: [ 'width', 'items', 'settings' ],
			run: function(cache) {
				var margin = this.settings.margin || '',
					grid = !this.settings.autoWidth,
					rtl = this.settings.rtl,
					css = {
						'width': 'auto',
						'margin-left': rtl ? margin : '',
						'margin-right': rtl ? '' : margin
					};
	
				!grid && this.$stage.children().css(css);
	
				cache.css = css;
			}
		}, {
			filter: [ 'width', 'items', 'settings' ],
			run: function(cache) {
				var width = (this.width() / this.settings.items).toFixed(3) - this.settings.margin,
					merge = null,
					iterator = this._items.length,
					grid = !this.settings.autoWidth,
					widths = [];
	
				cache.items = {
					merge: false,
					width: width
				};
	
				while (iterator--) {
					merge = this._mergers[iterator];
					merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;
	
					cache.items.merge = merge > 1 || cache.items.merge;
	
					widths[iterator] = !grid ? this._items[iterator].width() : width * merge;
				}
	
				this._widths = widths;
			}
		}, {
			filter: [ 'items', 'settings' ],
			run: function() {
				var clones = [],
					items = this._items,
					settings = this.settings,
					view = Math.max(settings.items * 2, 4),
					size = Math.ceil(items.length / 2) * 2,
					repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0,
					append = '',
					prepend = '';
	
				repeat /= 2;
	
				while (repeat--) {
					clones.push(this.normalize(clones.length / 2, true));
					append = append + items[clones[clones.length - 1]][0].outerHTML;
					clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));
					prepend = items[clones[clones.length - 1]][0].outerHTML + prepend;
				}
	
				this._clones = clones;
	
				$(append).addClass('cloned').appendTo(this.$stage);
				$(prepend).addClass('cloned').prependTo(this.$stage);
			}
		}, {
			filter: [ 'width', 'items', 'settings' ],
			run: function() {
				var rtl = this.settings.rtl ? 1 : -1,
					size = this._clones.length + this._items.length,
					iterator = -1,
					previous = 0,
					current = 0,
					coordinates = [];
	
				while (++iterator < size) {
					previous = coordinates[iterator - 1] || 0;
					current = this._widths[this.relative(iterator)] + this.settings.margin;
					coordinates.push(previous + current * rtl);
				}
	
				this._coordinates = coordinates;
			}
		}, {
			filter: [ 'width', 'items', 'settings' ],
			run: function() {
				var padding = this.settings.stagePadding,
					coordinates = this._coordinates,
					css = {
						'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,
						'padding-left': padding || '',
						'padding-right': padding || ''
					};
	
				this.$stage.css(css);
			}
		}, {
			filter: [ 'width', 'items', 'settings' ],
			run: function(cache) {
				var iterator = this._coordinates.length,
					grid = !this.settings.autoWidth,
					items = this.$stage.children();
	
				if (grid && cache.items.merge) {
					while (iterator--) {
						cache.css.width = this._widths[this.relative(iterator)];
						items.eq(iterator).css(cache.css);
					}
				} else if (grid) {
					cache.css.width = cache.items.width;
					items.css(cache.css);
				}
			}
		}, {
			filter: [ 'items' ],
			run: function() {
				this._coordinates.length < 1 && this.$stage.removeAttr('style');
			}
		}, {
			filter: [ 'width', 'items', 'settings' ],
			run: function(cache) {
				cache.current = cache.current ? this.$stage.children().index(cache.current) : 0;
				cache.current = Math.max(this.minimum(), Math.min(this.maximum(), cache.current));
				this.reset(cache.current);
			}
		}, {
			filter: [ 'position' ],
			run: function() {
				this.animate(this.coordinates(this._current));
			}
		}, {
			filter: [ 'width', 'position', 'items', 'settings' ],
			run: function() {
				var rtl = this.settings.rtl ? 1 : -1,
					padding = this.settings.stagePadding * 2,
					begin = this.coordinates(this.current()) + padding,
					end = begin + this.width() * rtl,
					inner, outer, matches = [], i, n;
	
				for (i = 0, n = this._coordinates.length; i < n; i++) {
					inner = this._coordinates[i - 1] || 0;
					outer = Math.abs(this._coordinates[i]) + padding * rtl;
	
					if ((this.op(inner, '<=', begin) && (this.op(inner, '>', end)))
						|| (this.op(outer, '<', begin) && this.op(outer, '>', end))) {
						matches.push(i);
					}
				}
	
				this.$stage.children('.active').removeClass('active');
				this.$stage.children(':eq(' + matches.join('), :eq(') + ')').addClass('active');
	
				if (this.settings.center) {
					this.$stage.children('.center').removeClass('center');
					this.$stage.children().eq(this.current()).addClass('center');
				}
			}
		} ];
	
		/**
		 * Initializes the carousel.
		 * @protected
		 */
		Owl.prototype.initialize = function() {
			this.enter('initializing');
			this.trigger('initialize');
	
			this.$element.toggleClass(this.settings.rtlClass, this.settings.rtl);
	
			if (this.settings.autoWidth && !this.is('pre-loading')) {
				var imgs, nestedSelector, width;
				imgs = this.$element.find('img');
				nestedSelector = this.settings.nestedItemSelector ? '.' + this.settings.nestedItemSelector : undefined;
				width = this.$element.children(nestedSelector).width();
	
				if (imgs.length && width <= 0) {
					this.preloadAutoWidthImages(imgs);
				}
			}
	
			this.$element.addClass(this.options.loadingClass);
	
			// create stage
			this.$stage = $('<' + this.settings.stageElement + ' class="' + this.settings.stageClass + '"/>')
				.wrap('<div class="' + this.settings.stageOuterClass + '"/>');
	
			// append stage
			this.$element.append(this.$stage.parent());
	
			// append content
			this.replace(this.$element.children().not(this.$stage.parent()));
	
			// check visibility
			if (this.$element.is(':visible')) {
				// update view
				this.refresh();
			} else {
				// invalidate width
				this.invalidate('width');
			}
	
			this.$element
				.removeClass(this.options.loadingClass)
				.addClass(this.options.loadedClass);
	
			// register event handlers
			this.registerEventHandlers();
	
			this.leave('initializing');
			this.trigger('initialized');
		};
	
		/**
		 * Setups the current settings.
		 * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?
		 * @todo Support for media queries by using `matchMedia` would be nice.
		 * @public
		 */
		Owl.prototype.setup = function() {
			var viewport = this.viewport(),
				overwrites = this.options.responsive,
				match = -1,
				settings = null;
	
			if (!overwrites) {
				settings = $.extend({}, this.options);
			} else {
				$.each(overwrites, function(breakpoint) {
					if (breakpoint <= viewport && breakpoint > match) {
						match = Number(breakpoint);
					}
				});
	
				settings = $.extend({}, this.options, overwrites[match]);
				delete settings.responsive;
	
				// responsive class
				if (settings.responsiveClass) {
					this.$element.attr('class',
						this.$element.attr('class').replace(new RegExp('(' + this.options.responsiveClass + '-)\\S+\\s', 'g'), '$1' + match)
					);
				}
			}
	
			if (this.settings === null || this._breakpoint !== match) {
				this.trigger('change', { property: { name: 'settings', value: settings } });
				this._breakpoint = match;
				this.settings = settings;
				this.invalidate('settings');
				this.trigger('changed', { property: { name: 'settings', value: this.settings } });
			}
		};
	
		/**
		 * Updates option logic if necessery.
		 * @protected
		 */
		Owl.prototype.optionsLogic = function() {
			if (this.settings.autoWidth) {
				this.settings.stagePadding = false;
				this.settings.merge = false;
			}
		};
	
		/**
		 * Prepares an item before add.
		 * @todo Rename event parameter `content` to `item`.
		 * @protected
		 * @returns {jQuery|HTMLElement} - The item container.
		 */
		Owl.prototype.prepare = function(item) {
			var event = this.trigger('prepare', { content: item });
	
			if (!event.data) {
				event.data = $('<' + this.settings.itemElement + '/>')
					.addClass(this.options.itemClass).append(item)
			}
	
			this.trigger('prepared', { content: event.data });
	
			return event.data;
		};
	
		/**
		 * Updates the view.
		 * @public
		 */
		Owl.prototype.update = function() {
			var i = 0,
				n = this._pipe.length,
				filter = $.proxy(function(p) { return this[p] }, this._invalidated),
				cache = {};
	
			while (i < n) {
				if (this._invalidated.all || $.grep(this._pipe[i].filter, filter).length > 0) {
					this._pipe[i].run(cache);
				}
				i++;
			}
	
			this._invalidated = {};
	
			!this.is('valid') && this.enter('valid');
		};
	
		/**
		 * Gets the width of the view.
		 * @public
		 * @param {Owl.Width} [dimension=Owl.Width.Default] - The dimension to return.
		 * @returns {Number} - The width of the view in pixel.
		 */
		Owl.prototype.width = function(dimension) {
			dimension = dimension || Owl.Width.Default;
			switch (dimension) {
				case Owl.Width.Inner:
				case Owl.Width.Outer:
					return this._width;
				default:
					return this._width - this.settings.stagePadding * 2 + this.settings.margin;
			}
		};
	
		/**
		 * Refreshes the carousel primarily for adaptive purposes.
		 * @public
		 */
		Owl.prototype.refresh = function() {
			this.enter('refreshing');
			this.trigger('refresh');
	
			this.setup();
	
			this.optionsLogic();
	
			this.$element.addClass(this.options.refreshClass);
	
			this.update();
	
			this.$element.removeClass(this.options.refreshClass);
	
			this.leave('refreshing');
			this.trigger('refreshed');
		};
	
		/**
		 * Checks window `resize` event.
		 * @protected
		 */
		Owl.prototype.onThrottledResize = function() {
			window.clearTimeout(this.resizeTimer);
			this.resizeTimer = window.setTimeout(this._handlers.onResize, this.settings.responsiveRefreshRate);
		};
	
		/**
		 * Checks window `resize` event.
		 * @protected
		 */
		Owl.prototype.onResize = function() {
			if (!this._items.length) {
				return false;
			}
	
			if (this._width === this.$element.width()) {
				return false;
			}
	
			if (!this.$element.is(':visible')) {
				return false;
			}
	
			this.enter('resizing');
	
			if (this.trigger('resize').isDefaultPrevented()) {
				this.leave('resizing');
				return false;
			}
	
			this.invalidate('width');
	
			this.refresh();
	
			this.leave('resizing');
			this.trigger('resized');
		};
	
		/**
		 * Registers event handlers.
		 * @todo Check `msPointerEnabled`
		 * @todo #261
		 * @protected
		 */
		Owl.prototype.registerEventHandlers = function() {
			if ($.support.transition) {
				this.$stage.on($.support.transition.end + '.owl.core', $.proxy(this.onTransitionEnd, this));
			}
	
			if (this.settings.responsive !== false) {
				this.on(window, 'resize', this._handlers.onThrottledResize);
			}
	
			if (this.settings.mouseDrag) {
				this.$element.addClass(this.options.dragClass);
				this.$stage.on('mousedown.owl.core', $.proxy(this.onDragStart, this));
				this.$stage.on('dragstart.owl.core selectstart.owl.core', function() { return false });
			}
	
			if (this.settings.touchDrag){
				this.$stage.on('touchstart.owl.core', $.proxy(this.onDragStart, this));
				this.$stage.on('touchcancel.owl.core', $.proxy(this.onDragEnd, this));
			}
		};
	
		/**
		 * Handles `touchstart` and `mousedown` events.
		 * @todo Horizontal swipe threshold as option
		 * @todo #261
		 * @protected
		 * @param {Event} event - The event arguments.
		 */
		Owl.prototype.onDragStart = function(event) {
			var stage = null;
	
			if (event.which === 3) {
				return;
			}
	
			if ($.support.transform) {
				stage = this.$stage.css('transform').replace(/.*\(|\)| /g, '').split(',');
				stage = {
					x: stage[stage.length === 16 ? 12 : 4],
					y: stage[stage.length === 16 ? 13 : 5]
				};
			} else {
				stage = this.$stage.position();
				stage = {
					x: this.settings.rtl ?
						stage.left + this.$stage.width() - this.width() + this.settings.margin :
						stage.left,
					y: stage.top
				};
			}
	
			if (this.is('animating')) {
				$.support.transform ? this.animate(stage.x) : this.$stage.stop()
				this.invalidate('position');
			}
	
			this.$element.toggleClass(this.options.grabClass, event.type === 'mousedown');
	
			this.speed(0);
	
			this._drag.time = new Date().getTime();
			this._drag.target = $(event.target);
			this._drag.stage.start = stage;
			this._drag.stage.current = stage;
			this._drag.pointer = this.pointer(event);
	
			$(document).on('mouseup.owl.core touchend.owl.core', $.proxy(this.onDragEnd, this));
	
			$(document).one('mousemove.owl.core touchmove.owl.core', $.proxy(function(event) {
				var delta = this.difference(this._drag.pointer, this.pointer(event));
	
				$(document).on('mousemove.owl.core touchmove.owl.core', $.proxy(this.onDragMove, this));
	
				if (Math.abs(delta.x) < Math.abs(delta.y) && this.is('valid')) {
					return;
				}
	
				event.preventDefault();
	
				this.enter('dragging');
				this.trigger('drag');
			}, this));
		};
	
		/**
		 * Handles the `touchmove` and `mousemove` events.
		 * @todo #261
		 * @protected
		 * @param {Event} event - The event arguments.
		 */
		Owl.prototype.onDragMove = function(event) {
			var minimum = null,
				maximum = null,
				pull = null,
				delta = this.difference(this._drag.pointer, this.pointer(event)),
				stage = this.difference(this._drag.stage.start, delta);
	
			if (!this.is('dragging')) {
				return;
			}
	
			event.preventDefault();
	
			if (this.settings.loop) {
				minimum = this.coordinates(this.minimum());
				maximum = this.coordinates(this.maximum() + 1) - minimum;
				stage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;
			} else {
				minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());
				maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());
				pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;
				stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);
			}
	
			this._drag.stage.current = stage;
	
			this.animate(stage.x);
		};
	
		/**
		 * Handles the `touchend` and `mouseup` events.
		 * @todo #261
		 * @todo Threshold for click event
		 * @protected
		 * @param {Event} event - The event arguments.
		 */
		Owl.prototype.onDragEnd = function(event) {
			var delta = this.difference(this._drag.pointer, this.pointer(event)),
				stage = this._drag.stage.current,
				direction = delta.x > 0 ^ this.settings.rtl ? 'left' : 'right';
	
			$(document).off('.owl.core');
	
			this.$element.removeClass(this.options.grabClass);
	
			if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {
				this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed);
				this.current(this.closest(stage.x, delta.x !== 0 ? direction : this._drag.direction));
				this.invalidate('position');
				this.update();
	
				this._drag.direction = direction;
	
				if (Math.abs(delta.x) > 3 || new Date().getTime() - this._drag.time > 300) {
					this._drag.target.one('click.owl.core', function() { return false; });
				}
			}
	
			if (!this.is('dragging')) {
				return;
			}
	
			this.leave('dragging');
			this.trigger('dragged');
		};
	
		/**
		 * Gets absolute position of the closest item for a coordinate.
		 * @todo Setting `freeDrag` makes `closest` not reusable. See #165.
		 * @protected
		 * @param {Number} coordinate - The coordinate in pixel.
		 * @param {String} direction - The direction to check for the closest item. Ether `left` or `right`.
		 * @return {Number} - The absolute position of the closest item.
		 */
		Owl.prototype.closest = function(coordinate, direction) {
			var position = -1,
				pull = 30,
				width = this.width(),
				coordinates = this.coordinates();
	
			if (!this.settings.freeDrag) {
				// check closest item
				$.each(coordinates, $.proxy(function(index, value) {
					if (coordinate > value - pull && coordinate < value + pull) {
						position = index;
					} else if (this.op(coordinate, '<', value)
						&& this.op(coordinate, '>', coordinates[index + 1] || value - width)) {
						position = direction === 'left' ? index + 1 : index;
					}
					return position === -1;
				}, this));
			}
	
			if (!this.settings.loop) {
				// non loop boundries
				if (this.op(coordinate, '>', coordinates[this.minimum()])) {
					position = coordinate = this.minimum();
				} else if (this.op(coordinate, '<', coordinates[this.maximum()])) {
					position = coordinate = this.maximum();
				}
			}
	
			return position;
		};
	
		/**
		 * Animates the stage.
		 * @todo #270
		 * @public
		 * @param {Number} coordinate - The coordinate in pixels.
		 */
		Owl.prototype.animate = function(coordinate) {
			var animate = this.speed() > 0;
	
			this.is('animating') && this.onTransitionEnd();
	
			if (animate) {
				this.enter('animating');
				this.trigger('translate');
			}
	
			if ($.support.transform3d && $.support.transition) {
				this.$stage.css({
					transform: 'translate3d(' + coordinate + 'px,0px,0px)',
					transition: (this.speed() / 1000) + 's'
				});
			} else if (animate) {
				this.$stage.animate({
					left: coordinate + 'px'
				}, this.speed(), this.settings.fallbackEasing, $.proxy(this.onTransitionEnd, this));
			} else {
				this.$stage.css({
					left: coordinate + 'px'
				});
			}
		};
	
		/**
		 * Checks whether the carousel is in a specific state or not.
		 * @param {String} state - The state to check.
		 * @returns {Boolean} - The flag which indicates if the carousel is busy.
		 */
		Owl.prototype.is = function(state) {
			return this._states.current[state] && this._states.current[state] > 0;
		};
	
		/**
		 * Sets the absolute position of the current item.
		 * @public
		 * @param {Number} [position] - The new absolute position or nothing to leave it unchanged.
		 * @returns {Number} - The absolute position of the current item.
		 */
		Owl.prototype.current = function(position) {
			if (position === undefined) {
				return this._current;
			}
	
			if (this._items.length === 0) {
				return undefined;
			}
	
			position = this.normalize(position);
	
			if (this._current !== position) {
				var event = this.trigger('change', { property: { name: 'position', value: position } });
	
				if (event.data !== undefined) {
					position = this.normalize(event.data);
				}
	
				this._current = position;
	
				this.invalidate('position');
	
				this.trigger('changed', { property: { name: 'position', value: this._current } });
			}
	
			return this._current;
		};
	
		/**
		 * Invalidates the given part of the update routine.
		 * @param {String} [part] - The part to invalidate.
		 * @returns {Array.<String>} - The invalidated parts.
		 */
		Owl.prototype.invalidate = function(part) {
			if ($.type(part) === 'string') {
				this._invalidated[part] = true;
				this.is('valid') && this.leave('valid');
			}
			return $.map(this._invalidated, function(v, i) { return i });
		};
	
		/**
		 * Resets the absolute position of the current item.
		 * @public
		 * @param {Number} position - The absolute position of the new item.
		 */
		Owl.prototype.reset = function(position) {
			position = this.normalize(position);
	
			if (position === undefined) {
				return;
			}
	
			this._speed = 0;
			this._current = position;
	
			this.suppress([ 'translate', 'translated' ]);
	
			this.animate(this.coordinates(position));
	
			this.release([ 'translate', 'translated' ]);
		};
	
		/**
		 * Normalizes an absolute or a relative position of an item.
		 * @public
		 * @param {Number} position - The absolute or relative position to normalize.
		 * @param {Boolean} [relative=false] - Whether the given position is relative or not.
		 * @returns {Number} - The normalized position.
		 */
		Owl.prototype.normalize = function(position, relative) {
			var n = this._items.length,
				m = relative ? 0 : this._clones.length;
	
			if (!$.isNumeric(position) || n < 1) {
				position = undefined;
			} else if (position < 0 || position >= n + m) {
				position = ((position - m / 2) % n + n) % n + m / 2;
			}
	
			return position;
		};
	
		/**
		 * Converts an absolute position of an item into a relative one.
		 * @public
		 * @param {Number} position - The absolute position to convert.
		 * @returns {Number} - The converted position.
		 */
		Owl.prototype.relative = function(position) {
			position -= this._clones.length / 2;
			return this.normalize(position, true);
		};
	
		/**
		 * Gets the maximum position for the current item.
		 * @public
		 * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.
		 * @returns {Number}
		 */
		Owl.prototype.maximum = function(relative) {
			var settings = this.settings,
				maximum = this._coordinates.length,
				boundary = Math.abs(this._coordinates[maximum - 1]) - this._width,
				i = -1, j;
	
			if (settings.loop) {
				maximum = this._clones.length / 2 + this._items.length - 1;
			} else if (settings.autoWidth || settings.merge) {
				// binary search
				while (maximum - i > 1) {
					Math.abs(this._coordinates[j = maximum + i >> 1]) < boundary
						? i = j : maximum = j;
				}
			} else if (settings.center) {
				maximum = this._items.length - 1;
			} else {
				maximum = this._items.length - settings.items;
			}
	
			if (relative) {
				maximum -= this._clones.length / 2;
			}
	
			return Math.max(maximum, 0);
		};
	
		/**
		 * Gets the minimum position for the current item.
		 * @public
		 * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.
		 * @returns {Number}
		 */
		Owl.prototype.minimum = function(relative) {
			return relative ? 0 : this._clones.length / 2;
		};
	
		/**
		 * Gets an item at the specified relative position.
		 * @public
		 * @param {Number} [position] - The relative position of the item.
		 * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.
		 */
		Owl.prototype.items = function(position) {
			if (position === undefined) {
				return this._items.slice();
			}
	
			position = this.normalize(position, true);
			return this._items[position];
		};
	
		/**
		 * Gets an item at the specified relative position.
		 * @public
		 * @param {Number} [position] - The relative position of the item.
		 * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.
		 */
		Owl.prototype.mergers = function(position) {
			if (position === undefined) {
				return this._mergers.slice();
			}
	
			position = this.normalize(position, true);
			return this._mergers[position];
		};
	
		/**
		 * Gets the absolute positions of clones for an item.
		 * @public
		 * @param {Number} [position] - The relative position of the item.
		 * @returns {Array.<Number>} - The absolute positions of clones for the item or all if no position was given.
		 */
		Owl.prototype.clones = function(position) {
			var odd = this._clones.length / 2,
				even = odd + this._items.length,
				map = function(index) { return index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2 };
	
			if (position === undefined) {
				return $.map(this._clones, function(v, i) { return map(i) });
			}
	
			return $.map(this._clones, function(v, i) { return v === position ? map(i) : null });
		};
	
		/**
		 * Sets the current animation speed.
		 * @public
		 * @param {Number} [speed] - The animation speed in milliseconds or nothing to leave it unchanged.
		 * @returns {Number} - The current animation speed in milliseconds.
		 */
		Owl.prototype.speed = function(speed) {
			if (speed !== undefined) {
				this._speed = speed;
			}
	
			return this._speed;
		};
	
		/**
		 * Gets the coordinate of an item.
		 * @todo The name of this method is missleanding.
		 * @public
		 * @param {Number} position - The absolute position of the item within `minimum()` and `maximum()`.
		 * @returns {Number|Array.<Number>} - The coordinate of the item in pixel or all coordinates.
		 */
		Owl.prototype.coordinates = function(position) {
			var coordinate = null;
	
			if (position === undefined) {
				return $.map(this._coordinates, $.proxy(function(coordinate, index) {
					return this.coordinates(index);
				}, this));
			}
	
			if (this.settings.center) {
				coordinate = this._coordinates[position];
				coordinate += (this.width() - coordinate + (this._coordinates[position - 1] || 0)) / 2 * (this.settings.rtl ? -1 : 1);
			} else {
				coordinate = this._coordinates[position - 1] || 0;
			}
	
			return coordinate;
		};
	
		/**
		 * Calculates the speed for a translation.
		 * @protected
		 * @param {Number} from - The absolute position of the start item.
		 * @param {Number} to - The absolute position of the target item.
		 * @param {Number} [factor=undefined] - The time factor in milliseconds.
		 * @returns {Number} - The time in milliseconds for the translation.
		 */
		Owl.prototype.duration = function(from, to, factor) {
			return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((factor || this.settings.smartSpeed));
		};
	
		/**
		 * Slides to the specified item.
		 * @public
		 * @param {Number} position - The position of the item.
		 * @param {Number} [speed] - The time in milliseconds for the transition.
		 */
		Owl.prototype.to = function(position, speed) {
			var current = this.current(),
				revert = null,
				distance = position - this.relative(current),
				direction = (distance > 0) - (distance < 0),
				items = this._items.length,
				minimum = this.minimum(),
				maximum = this.maximum();
	
			if (this.settings.loop) {
				if (!this.settings.rewind && Math.abs(distance) > items / 2) {
					distance += direction * -1 * items;
				}
	
				position = current + distance;
				revert = ((position - minimum) % items + items) % items + minimum;
	
				if (revert !== position && revert - distance <= maximum && revert - distance > 0) {
					current = revert - distance;
					position = revert;
					this.reset(current);
				}
			} else if (this.settings.rewind) {
				maximum += 1;
				position = (position % maximum + maximum) % maximum;
			} else {
				position = Math.max(minimum, Math.min(maximum, position));
			}
	
			this.speed(this.duration(current, position, speed));
			this.current(position);
	
			if (this.$element.is(':visible')) {
				this.update();
			}
		};
	
		/**
		 * Slides to the next item.
		 * @public
		 * @param {Number} [speed] - The time in milliseconds for the transition.
		 */
		Owl.prototype.next = function(speed) {
			speed = speed || false;
			this.to(this.relative(this.current()) + 1, speed);
		};
	
		/**
		 * Slides to the previous item.
		 * @public
		 * @param {Number} [speed] - The time in milliseconds for the transition.
		 */
		Owl.prototype.prev = function(speed) {
			speed = speed || false;
			this.to(this.relative(this.current()) - 1, speed);
		};
	
		/**
		 * Handles the end of an animation.
		 * @protected
		 * @param {Event} event - The event arguments.
		 */
		Owl.prototype.onTransitionEnd = function(event) {
	
			// if css2 animation then event object is undefined
			if (event !== undefined) {
				event.stopPropagation();
	
				// Catch only owl-stage transitionEnd event
				if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)) {
					return false;
				}
			}
	
			this.leave('animating');
			this.trigger('translated');
		};
	
		/**
		 * Gets viewport width.
		 * @protected
		 * @return {Number} - The width in pixel.
		 */
		Owl.prototype.viewport = function() {
			var width;
			if (this.options.responsiveBaseElement !== window) {
				width = $(this.options.responsiveBaseElement).width();
			} else if (window.innerWidth) {
				width = window.innerWidth;
			} else if (document.documentElement && document.documentElement.clientWidth) {
				width = document.documentElement.clientWidth;
			} else {
				throw 'Can not detect viewport width.';
			}
			return width;
		};
	
		/**
		 * Replaces the current content.
		 * @public
		 * @param {HTMLElement|jQuery|String} content - The new content.
		 */
		Owl.prototype.replace = function(content) {
			this.$stage.empty();
			this._items = [];
	
			if (content) {
				content = (content instanceof jQuery) ? content : $(content);
			}
	
			if (this.settings.nestedItemSelector) {
				content = content.find('.' + this.settings.nestedItemSelector);
			}
	
			content.filter(function() {
				return this.nodeType === 1;
			}).each($.proxy(function(index, item) {
				item = this.prepare(item);
				this.$stage.append(item);
				this._items.push(item);
				this._mergers.push(item.find('[data-merge]').andSelf('[data-merge]').attr('data-merge') * 1 || 1);
			}, this));
	
			this.reset($.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);
	
			this.invalidate('items');
		};
	
		/**
		 * Adds an item.
		 * @todo Use `item` instead of `content` for the event arguments.
		 * @public
		 * @param {HTMLElement|jQuery|String} content - The item content to add.
		 * @param {Number} [position] - The relative position at which to insert the item otherwise the item will be added to the end.
		 */
		Owl.prototype.add = function(content, position) {
			var current = this.relative(this._current);
	
			position = position === undefined ? this._items.length : this.normalize(position, true);
			content = content instanceof jQuery ? content : $(content);
	
			this.trigger('add', { content: content, position: position });
	
			content = this.prepare(content);
	
			if (this._items.length === 0 || position === this._items.length) {
				this._items.length === 0 && this.$stage.append(content);
				this._items.length !== 0 && this._items[position - 1].after(content);
				this._items.push(content);
				this._mergers.push(content.find('[data-merge]').andSelf('[data-merge]').attr('data-merge') * 1 || 1);
			} else {
				this._items[position].before(content);
				this._items.splice(position, 0, content);
				this._mergers.splice(position, 0, content.find('[data-merge]').andSelf('[data-merge]').attr('data-merge') * 1 || 1);
			}
	
			this._items[current] && this.reset(this._items[current].index());
	
			this.invalidate('items');
	
			this.trigger('added', { content: content, position: position });
		};
	
		/**
		 * Removes an item by its position.
		 * @todo Use `item` instead of `content` for the event arguments.
		 * @public
		 * @param {Number} position - The relative position of the item to remove.
		 */
		Owl.prototype.remove = function(position) {
			position = this.normalize(position, true);
	
			if (position === undefined) {
				return;
			}
	
			this.trigger('remove', { content: this._items[position], position: position });
	
			this._items[position].remove();
			this._items.splice(position, 1);
			this._mergers.splice(position, 1);
	
			this.invalidate('items');
	
			this.trigger('removed', { content: null, position: position });
		};
	
		/**
		 * Preloads images with auto width.
		 * @todo Replace by a more generic approach
		 * @protected
		 */
		Owl.prototype.preloadAutoWidthImages = function(images) {
			images.each($.proxy(function(i, element) {
				this.enter('pre-loading');
				element = $(element);
				$(new Image()).one('load', $.proxy(function(e) {
					element.attr('src', e.target.src);
					element.css('opacity', 1);
					this.leave('pre-loading');
					!this.is('pre-loading') && !this.is('initializing') && this.refresh();
				}, this)).attr('src', element.attr('src') || element.attr('data-src') || element.attr('data-src-retina'));
			}, this));
		};
	
		/**
		 * Destroys the carousel.
		 * @public
		 */
		Owl.prototype.destroy = function() {
	
			this.$element.off('.owl.core');
			this.$stage.off('.owl.core');
			$(document).off('.owl.core');
	
			if (this.settings.responsive !== false) {
				window.clearTimeout(this.resizeTimer);
				this.off(window, 'resize', this._handlers.onThrottledResize);
			}
	
			for (var i in this._plugins) {
				this._plugins[i].destroy();
			}
	
			this.$stage.children('.cloned').remove();
	
			this.$stage.unwrap();
			this.$stage.children().contents().unwrap();
			this.$stage.children().unwrap();
	
			this.$element
				.removeClass(this.options.refreshClass)
				.removeClass(this.options.loadingClass)
				.removeClass(this.options.loadedClass)
				.removeClass(this.options.rtlClass)
				.removeClass(this.options.dragClass)
				.removeClass(this.options.grabClass)
				.attr('class', this.$element.attr('class').replace(new RegExp(this.options.responsiveClass + '-\\S+\\s', 'g'), ''))
				.removeData('owl.carousel');
		};
	
		/**
		 * Operators to calculate right-to-left and left-to-right.
		 * @protected
		 * @param {Number} [a] - The left side operand.
		 * @param {String} [o] - The operator.
		 * @param {Number} [b] - The right side operand.
		 */
		Owl.prototype.op = function(a, o, b) {
			var rtl = this.settings.rtl;
			switch (o) {
				case '<':
					return rtl ? a > b : a < b;
				case '>':
					return rtl ? a < b : a > b;
				case '>=':
					return rtl ? a <= b : a >= b;
				case '<=':
					return rtl ? a >= b : a <= b;
				default:
					break;
			}
		};
	
		/**
		 * Attaches to an internal event.
		 * @protected
		 * @param {HTMLElement} element - The event source.
		 * @param {String} event - The event name.
		 * @param {Function} listener - The event handler to attach.
		 * @param {Boolean} capture - Wether the event should be handled at the capturing phase or not.
		 */
		Owl.prototype.on = function(element, event, listener, capture) {
			if (element.addEventListener) {
				element.addEventListener(event, listener, capture);
			} else if (element.attachEvent) {
				element.attachEvent('on' + event, listener);
			}
		};
	
		/**
		 * Detaches from an internal event.
		 * @protected
		 * @param {HTMLElement} element - The event source.
		 * @param {String} event - The event name.
		 * @param {Function} listener - The attached event handler to detach.
		 * @param {Boolean} capture - Wether the attached event handler was registered as a capturing listener or not.
		 */
		Owl.prototype.off = function(element, event, listener, capture) {
			if (element.removeEventListener) {
				element.removeEventListener(event, listener, capture);
			} else if (element.detachEvent) {
				element.detachEvent('on' + event, listener);
			}
		};
	
		/**
		 * Triggers a public event.
		 * @todo Remove `status`, `relatedTarget` should be used instead.
		 * @protected
		 * @param {String} name - The event name.
		 * @param {*} [data=null] - The event data.
		 * @param {String} [namespace=carousel] - The event namespace.
		 * @param {String} [state] - The state which is associated with the event.
		 * @param {Boolean} [enter=false] - Indicates if the call enters the specified state or not.
		 * @returns {Event} - The event arguments.
		 */
		Owl.prototype.trigger = function(name, data, namespace, state, enter) {
			var status = {
				item: { count: this._items.length, index: this.current() }
			}, handler = $.camelCase(
				$.grep([ 'on', name, namespace ], function(v) { return v })
					.join('-').toLowerCase()
			), event = $.Event(
				[ name, 'owl', namespace || 'carousel' ].join('.').toLowerCase(),
				$.extend({ relatedTarget: this }, status, data)
			);
	
			if (!this._supress[name]) {
				$.each(this._plugins, function(name, plugin) {
					if (plugin.onTrigger) {
						plugin.onTrigger(event);
					}
				});
	
				this.register({ type: Owl.Type.Event, name: name });
				this.$element.trigger(event);
	
				if (this.settings && typeof this.settings[handler] === 'function') {
					this.settings[handler].call(this, event);
				}
			}
	
			return event;
		};
	
		/**
		 * Enters a state.
		 * @param name - The state name.
		 */
		Owl.prototype.enter = function(name) {
			$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {
				if (this._states.current[name] === undefined) {
					this._states.current[name] = 0;
				}
	
				this._states.current[name]++;
			}, this));
		};
	
		/**
		 * Leaves a state.
		 * @param name - The state name.
		 */
		Owl.prototype.leave = function(name) {
			$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {
				this._states.current[name]--;
			}, this));
		};
	
		/**
		 * Registers an event or state.
		 * @public
		 * @param {Object} object - The event or state to register.
		 */
		Owl.prototype.register = function(object) {
			if (object.type === Owl.Type.Event) {
				if (!$.event.special[object.name]) {
					$.event.special[object.name] = {};
				}
	
				if (!$.event.special[object.name].owl) {
					var _default = $.event.special[object.name]._default;
					$.event.special[object.name]._default = function(e) {
						if (_default && _default.apply && (!e.namespace || e.namespace.indexOf('owl') === -1)) {
							return _default.apply(this, arguments);
						}
						return e.namespace && e.namespace.indexOf('owl') > -1;
					};
					$.event.special[object.name].owl = true;
				}
			} else if (object.type === Owl.Type.State) {
				if (!this._states.tags[object.name]) {
					this._states.tags[object.name] = object.tags;
				} else {
					this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);
				}
	
				this._states.tags[object.name] = $.grep(this._states.tags[object.name], $.proxy(function(tag, i) {
					return $.inArray(tag, this._states.tags[object.name]) === i;
				}, this));
			}
		};
	
		/**
		 * Suppresses events.
		 * @protected
		 * @param {Array.<String>} events - The events to suppress.
		 */
		Owl.prototype.suppress = function(events) {
			$.each(events, $.proxy(function(index, event) {
				this._supress[event] = true;
			}, this));
		};
	
		/**
		 * Releases suppressed events.
		 * @protected
		 * @param {Array.<String>} events - The events to release.
		 */
		Owl.prototype.release = function(events) {
			$.each(events, $.proxy(function(index, event) {
				delete this._supress[event];
			}, this));
		};
	
		/**
		 * Gets unified pointer coordinates from event.
		 * @todo #261
		 * @protected
		 * @param {Event} - The `mousedown` or `touchstart` event.
		 * @returns {Object} - Contains `x` and `y` coordinates of current pointer position.
		 */
		Owl.prototype.pointer = function(event) {
			var result = { x: null, y: null };
	
			event = event.originalEvent || event || window.event;
	
			event = event.touches && event.touches.length ?
				event.touches[0] : event.changedTouches && event.changedTouches.length ?
					event.changedTouches[0] : event;
	
			if (event.pageX) {
				result.x = event.pageX;
				result.y = event.pageY;
			} else {
				result.x = event.clientX;
				result.y = event.clientY;
			}
	
			return result;
		};
	
		/**
		 * Gets the difference of two vectors.
		 * @todo #261
		 * @protected
		 * @param {Object} - The first vector.
		 * @param {Object} - The second vector.
		 * @returns {Object} - The difference.
		 */
		Owl.prototype.difference = function(first, second) {
			return {
				x: first.x - second.x,
				y: first.y - second.y
			};
		};
	
		/**
		 * The jQuery Plugin for the Owl Carousel
		 * @todo Navigation plugin `next` and `prev`
		 * @public
		 */
		$.fn.owlCarousel = function(option) {
			var args = Array.prototype.slice.call(arguments, 1);
	
			return this.each(function() {
				var $this = $(this),
					data = $this.data('owl.carousel');
	
				if (!data) {
					data = new Owl(this, typeof option == 'object' && option);
					$this.data('owl.carousel', data);
	
					$.each([
						'next', 'prev', 'to', 'destroy', 'refresh', 'replace', 'add', 'remove'
					], function(i, event) {
						data.register({ type: Owl.Type.Event, name: event });
						data.$element.on(event + '.owl.carousel.core', $.proxy(function(e) {
							if (e.namespace && e.relatedTarget !== this) {
								this.suppress([ event ]);
								data[event].apply(this, [].slice.call(arguments, 1));
								this.release([ event ]);
							}
						}, data));
					});
				}
	
				if (typeof option == 'string' && option.charAt(0) !== '_') {
					data[option].apply(data, args);
				}
			});
		};
	
		/**
		 * The constructor for the jQuery Plugin
		 * @public
		 */
		$.fn.owlCarousel.Constructor = Owl;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * AutoRefresh Plugin
	 * @version 2.0.0-beta.3
	 * @author Artus Kolanowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
	
		/**
		 * Creates the auto refresh plugin.
		 * @class The Auto Refresh Plugin
		 * @param {Owl} carousel - The Owl Carousel
		 */
		var AutoRefresh = function(carousel) {
			/**
			 * Reference to the core.
			 * @protected
			 * @type {Owl}
			 */
			this._core = carousel;
	
			/**
			 * Refresh interval.
			 * @protected
			 * @type {number}
			 */
			this._interval = null;
	
			/**
			 * Whether the element is currently visible or not.
			 * @protected
			 * @type {Boolean}
			 */
			this._visible = null;
	
			/**
			 * All event handlers.
			 * @protected
			 * @type {Object}
			 */
			this._handlers = {
				'initialized.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.autoRefresh) {
						this.watch();
					}
				}, this)
			};
	
			// set default options
			this._core.options = $.extend({}, AutoRefresh.Defaults, this._core.options);
	
			// register event handlers
			this._core.$element.on(this._handlers);
		};
	
		/**
		 * Default options.
		 * @public
		 */
		AutoRefresh.Defaults = {
			autoRefresh: true,
			autoRefreshInterval: 500
		};
	
		/**
		 * Watches the element.
		 */
		AutoRefresh.prototype.watch = function() {
			if (this._interval) {
				return;
			}
	
			this._visible = this._core.$element.is(':visible');
			this._interval = window.setInterval($.proxy(this.refresh, this), this._core.settings.autoRefreshInterval);
		};
	
		/**
		 * Refreshes the element.
		 */
		AutoRefresh.prototype.refresh = function() {
			if (this._core.$element.is(':visible') === this._visible) {
				return;
			}
	
			this._visible = !this._visible;
	
			this._core.$element.toggleClass('owl-hidden', !this._visible);
	
			this._visible && (this._core.invalidate('width') && this._core.refresh());
		};
	
		/**
		 * Destroys the plugin.
		 */
		AutoRefresh.prototype.destroy = function() {
			var handler, property;
	
			window.clearInterval(this._interval);
	
			for (handler in this._handlers) {
				this._core.$element.off(handler, this._handlers[handler]);
			}
			for (property in Object.getOwnPropertyNames(this)) {
				typeof this[property] != 'function' && (this[property] = null);
			}
		};
	
		$.fn.owlCarousel.Constructor.Plugins.AutoRefresh = AutoRefresh;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * Lazy Plugin
	 * @version 2.0.0-beta.3
	 * @author Bartosz Wojciechowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
	
		/**
		 * Creates the lazy plugin.
		 * @class The Lazy Plugin
		 * @param {Owl} carousel - The Owl Carousel
		 */
		var Lazy = function(carousel) {
	
			/**
			 * Reference to the core.
			 * @protected
			 * @type {Owl}
			 */
			this._core = carousel;
	
			/**
			 * Already loaded items.
			 * @protected
			 * @type {Array.<jQuery>}
			 */
			this._loaded = [];
	
			/**
			 * Event handlers.
			 * @protected
			 * @type {Object}
			 */
			this._handlers = {
				'initialized.owl.carousel change.owl.carousel': $.proxy(function(e) {
					if (!e.namespace) {
						return;
					}
	
					if (!this._core.settings || !this._core.settings.lazyLoad) {
						return;
					}
	
					if ((e.property && e.property.name == 'position') || e.type == 'initialized') {
						var settings = this._core.settings,
							n = (settings.center && Math.ceil(settings.items / 2) || settings.items),
							i = ((settings.center && n * -1) || 0),
							position = ((e.property && e.property.value) || this._core.current()) + i,
							clones = this._core.clones().length,
							load = $.proxy(function(i, v) { this.load(v) }, this);
	
						while (i++ < n) {
							this.load(clones / 2 + this._core.relative(position));
							clones && $.each(this._core.clones(this._core.relative(position)), load);
							position++;
						}
					}
				}, this)
			};
	
			// set the default options
			this._core.options = $.extend({}, Lazy.Defaults, this._core.options);
	
			// register event handler
			this._core.$element.on(this._handlers);
		}
	
		/**
		 * Default options.
		 * @public
		 */
		Lazy.Defaults = {
			lazyLoad: false
		}
	
		/**
		 * Loads all resources of an item at the specified position.
		 * @param {Number} position - The absolute position of the item.
		 * @protected
		 */
		Lazy.prototype.load = function(position) {
			var $item = this._core.$stage.children().eq(position),
				$elements = $item && $item.find('.owl-lazy');
	
			if (!$elements || $.inArray($item.get(0), this._loaded) > -1) {
				return;
			}
	
			$elements.each($.proxy(function(index, element) {
				var $element = $(element), image,
					url = (window.devicePixelRatio > 1 && $element.attr('data-src-retina')) || $element.attr('data-src');
	
				this._core.trigger('load', { element: $element, url: url }, 'lazy');
	
				if ($element.is('img')) {
					$element.one('load.owl.lazy', $.proxy(function() {
						$element.css('opacity', 1);
						this._core.trigger('loaded', { element: $element, url: url }, 'lazy');
					}, this)).attr('src', url);
				} else {
					image = new Image();
					image.onload = $.proxy(function() {
						$element.css({
							'background-image': 'url(' + url + ')',
							'opacity': '1'
						});
						this._core.trigger('loaded', { element: $element, url: url }, 'lazy');
					}, this);
					image.src = url;
				}
			}, this));
	
			this._loaded.push($item.get(0));
		}
	
		/**
		 * Destroys the plugin.
		 * @public
		 */
		Lazy.prototype.destroy = function() {
			var handler, property;
	
			for (handler in this.handlers) {
				this._core.$element.off(handler, this.handlers[handler]);
			}
			for (property in Object.getOwnPropertyNames(this)) {
				typeof this[property] != 'function' && (this[property] = null);
			}
		};
	
		$.fn.owlCarousel.Constructor.Plugins.Lazy = Lazy;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * AutoHeight Plugin
	 * @version 2.0.0-beta.3
	 * @author Bartosz Wojciechowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
	
		/**
		 * Creates the auto height plugin.
		 * @class The Auto Height Plugin
		 * @param {Owl} carousel - The Owl Carousel
		 */
		var AutoHeight = function(carousel) {
			/**
			 * Reference to the core.
			 * @protected
			 * @type {Owl}
			 */
			this._core = carousel;
	
			/**
			 * All event handlers.
			 * @protected
			 * @type {Object}
			 */
			this._handlers = {
				'initialized.owl.carousel refreshed.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.autoHeight) {
						this.update();
					}
				}, this),
				'changed.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.autoHeight && e.property.name == 'position'){
						this.update();
					}
				}, this),
				'loaded.owl.lazy': $.proxy(function(e) {
					if (e.namespace && this._core.settings.autoHeight
						&& e.element.closest('.' + this._core.settings.itemClass).index() === this._core.current()) {
						this.update();
					}
				}, this)
			};
	
			// set default options
			this._core.options = $.extend({}, AutoHeight.Defaults, this._core.options);
	
			// register event handlers
			this._core.$element.on(this._handlers);
		};
	
		/**
		 * Default options.
		 * @public
		 */
		AutoHeight.Defaults = {
			autoHeight: false,
			autoHeightClass: 'owl-height'
		};
	
		/**
		 * Updates the view.
		 */
		AutoHeight.prototype.update = function() {
			var start = this._core._current,
				end = start + this._core.settings.items,
				visible = this._core.$stage.children().toArray().slice(start, end);
				heights = [],
				maxheight = 0;
	
			$.each(visible, function(index, item) {
				heights.push($(item).height());
			});
	
			maxheight = Math.max.apply(null, heights);
	
			this._core.$stage.parent()
				.height(maxheight)
				.addClass(this._core.settings.autoHeightClass);
		};
	
		AutoHeight.prototype.destroy = function() {
			var handler, property;
	
			for (handler in this._handlers) {
				this._core.$element.off(handler, this._handlers[handler]);
			}
			for (property in Object.getOwnPropertyNames(this)) {
				typeof this[property] != 'function' && (this[property] = null);
			}
		};
	
		$.fn.owlCarousel.Constructor.Plugins.AutoHeight = AutoHeight;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * Video Plugin
	 * @version 2.0.0-beta.3
	 * @author Bartosz Wojciechowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
	
		/**
		 * Creates the video plugin.
		 * @class The Video Plugin
		 * @param {Owl} carousel - The Owl Carousel
		 */
		var Video = function(carousel) {
			/**
			 * Reference to the core.
			 * @protected
			 * @type {Owl}
			 */
			this._core = carousel;
	
			/**
			 * Cache all video URLs.
			 * @protected
			 * @type {Object}
			 */
			this._videos = {};
	
			/**
			 * Current playing item.
			 * @protected
			 * @type {jQuery}
			 */
			this._playing = null;
	
			/**
			 * All event handlers.
			 * @todo The cloned content removale is too late
			 * @protected
			 * @type {Object}
			 */
			this._handlers = {
				'initialized.owl.carousel': $.proxy(function(e) {
					if (e.namespace) {
						this._core.register({ type: 'state', name: 'playing', tags: [ 'interacting' ] });
					}
				}, this),
				'resize.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.video && this.isInFullScreen()) {
						e.preventDefault();
					}
				}, this),
				'refreshed.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.is('resizing')) {
						this._core.$stage.find('.cloned .owl-video-frame').remove();
					}
				}, this),
				'changed.owl.carousel': $.proxy(function(e) {
					if (e.namespace && e.property.name === 'position' && this._playing) {
						this.stop();
					}
				}, this),
				'prepared.owl.carousel': $.proxy(function(e) {
					if (!e.namespace) {
						return;
					}
	
					var $element = $(e.content).find('.owl-video');
	
					if ($element.length) {
						$element.css('display', 'none');
						this.fetch($element, $(e.content));
					}
				}, this)
			};
	
			// set default options
			this._core.options = $.extend({}, Video.Defaults, this._core.options);
	
			// register event handlers
			this._core.$element.on(this._handlers);
	
			this._core.$element.on('click.owl.video', '.owl-video-play-icon', $.proxy(function(e) {
				this.play(e);
			}, this));
		};
	
		/**
		 * Default options.
		 * @public
		 */
		Video.Defaults = {
			video: false,
			videoHeight: false,
			videoWidth: false
		};
	
		/**
		 * Gets the video ID and the type (YouTube/Vimeo only).
		 * @protected
		 * @param {jQuery} target - The target containing the video data.
		 * @param {jQuery} item - The item containing the video.
		 */
		Video.prototype.fetch = function(target, item) {
			var type = target.attr('data-vimeo-id') ? 'vimeo' : 'youtube',
				id = target.attr('data-vimeo-id') || target.attr('data-youtube-id'),
				width = target.attr('data-width') || this._core.settings.videoWidth,
				height = target.attr('data-height') || this._core.settings.videoHeight,
				url = target.attr('href');
	
			if (url) {
				id = url.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/);
	
				if (id[3].indexOf('youtu') > -1) {
					type = 'youtube';
				} else if (id[3].indexOf('vimeo') > -1) {
					type = 'vimeo';
				} else {
					throw new Error('Video URL not supported.');
				}
				id = id[6];
			} else {
				throw new Error('Missing video URL.');
			}
	
			this._videos[url] = {
				type: type,
				id: id,
				width: width,
				height: height
			};
	
			item.attr('data-video', url);
	
			this.thumbnail(target, this._videos[url]);
		};
	
		/**
		 * Creates video thumbnail.
		 * @protected
		 * @param {jQuery} target - The target containing the video data.
		 * @param {Object} info - The video info object.
		 * @see `fetch`
		 */
		Video.prototype.thumbnail = function(target, video) {
			var tnLink,
				icon,
				path,
				dimensions = video.width && video.height ? 'style="width:' + video.width + 'px;height:' + video.height + 'px;"' : '',
				customTn = target.find('img'),
				srcType = 'src',
				lazyClass = '',
				settings = this._core.settings,
				create = function(path) {
					icon = '<div class="owl-video-play-icon"></div>';
	
					if (settings.lazyLoad) {
						tnLink = '<div class="owl-video-tn ' + lazyClass + '" ' + srcType + '="' + path + '"></div>';
					} else {
						tnLink = '<div class="owl-video-tn" style="opacity:1;background-image:url(' + path + ')"></div>';
					}
					target.after(tnLink);
					target.after(icon);
				};
	
			// wrap video content into owl-video-wrapper div
			target.wrap('<div class="owl-video-wrapper"' + dimensions + '></div>');
	
			if (this._core.settings.lazyLoad) {
				srcType = 'data-src';
				lazyClass = 'owl-lazy';
			}
	
			// custom thumbnail
			if (customTn.length) {
				create(customTn.attr(srcType));
				customTn.remove();
				return false;
			}
	
			if (video.type === 'youtube') {
				path = "http://img.youtube.com/vi/" + video.id + "/hqdefault.jpg";
				create(path);
			} else if (video.type === 'vimeo') {
				$.ajax({
					type: 'GET',
					url: 'http://vimeo.com/api/v2/video/' + video.id + '.json',
					jsonp: 'callback',
					dataType: 'jsonp',
					success: function(data) {
						path = data[0].thumbnail_large;
						create(path);
					}
				});
			}
		};
	
		/**
		 * Stops the current video.
		 * @public
		 */
		Video.prototype.stop = function() {
			this._core.trigger('stop', null, 'video');
			this._playing.find('.owl-video-frame').remove();
			this._playing.removeClass('owl-video-playing');
			this._playing = null;
			this._core.leave('playing');
			this._core.trigger('stopped', null, 'video');
		};
	
		/**
		 * Starts the current video.
		 * @public
		 * @param {Event} event - The event arguments.
		 */
		Video.prototype.play = function(event) {
			var target = $(event.target),
				item = target.closest('.' + this._core.settings.itemClass),
				video = this._videos[item.attr('data-video')],
				width = video.width || '100%',
				height = video.height || this._core.$stage.height(),
				html;
	
			if (this._playing) {
				return;
			}
	
			this._core.enter('playing');
			this._core.trigger('play', null, 'video');
	
			item = this._core.items(this._core.relative(item.index()));
	
			this._core.reset(item.index());
	
			if (video.type === 'youtube') {
				html = '<iframe width="' + width + '" height="' + height + '" src="http://www.youtube.com/embed/' +
					video.id + '?autoplay=1&v=' + video.id + '" frameborder="0" allowfullscreen></iframe>';
			} else if (video.type === 'vimeo') {
				html = '<iframe src="http://player.vimeo.com/video/' + video.id +
					'?autoplay=1" width="' + width + '" height="' + height +
					'" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>';
			}
	
			$('<div class="owl-video-frame">' + html + '</div>').insertAfter(item.find('.owl-video'));
	
			this._playing = item.addClass('owl-video-playing');
		};
	
		/**
		 * Checks whether an video is currently in full screen mode or not.
		 * @todo Bad style because looks like a readonly method but changes members.
		 * @protected
		 * @returns {Boolean}
		 */
		Video.prototype.isInFullScreen = function() {
			var element = document.fullscreenElement || document.mozFullScreenElement ||
					document.webkitFullscreenElement;
	
			return element && $(element).parent().hasClass('owl-video-frame');
		};
	
		/**
		 * Destroys the plugin.
		 */
		Video.prototype.destroy = function() {
			var handler, property;
	
			this._core.$element.off('click.owl.video');
	
			for (handler in this._handlers) {
				this._core.$element.off(handler, this._handlers[handler]);
			}
			for (property in Object.getOwnPropertyNames(this)) {
				typeof this[property] != 'function' && (this[property] = null);
			}
		};
	
		$.fn.owlCarousel.Constructor.Plugins.Video = Video;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * Animate Plugin
	 * @version 2.0.0-beta.3
	 * @author Bartosz Wojciechowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
	
		/**
		 * Creates the animate plugin.
		 * @class The Navigation Plugin
		 * @param {Owl} scope - The Owl Carousel
		 */
		var Animate = function(scope) {
			this.core = scope;
			this.core.options = $.extend({}, Animate.Defaults, this.core.options);
			this.swapping = true;
			this.previous = undefined;
			this.next = undefined;
	
			this.handlers = {
				'change.owl.carousel': $.proxy(function(e) {
					if (e.namespace && e.property.name == 'position') {
						this.previous = this.core.current();
						this.next = e.property.value;
					}
				}, this),
				'drag.owl.carousel dragged.owl.carousel translated.owl.carousel': $.proxy(function(e) {
					if (e.namespace) {
						this.swapping = e.type == 'translated';
					}
				}, this),
				'translate.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) {
						this.swap();
					}
				}, this)
			};
	
			this.core.$element.on(this.handlers);
		};
	
		/**
		 * Default options.
		 * @public
		 */
		Animate.Defaults = {
			animateOut: false,
			animateIn: false
		};
	
		/**
		 * Toggles the animation classes whenever an translations starts.
		 * @protected
		 * @returns {Boolean|undefined}
		 */
		Animate.prototype.swap = function() {
	
			if (this.core.settings.items !== 1) {
				return;
			}
	
			if (!$.support.animation || !$.support.transition) {
				return;
			}
	
			this.core.speed(0);
	
			var left,
				clear = $.proxy(this.clear, this),
				previous = this.core.$stage.children().eq(this.previous),
				next = this.core.$stage.children().eq(this.next),
				incoming = this.core.settings.animateIn,
				outgoing = this.core.settings.animateOut;
	
			if (this.core.current() === this.previous) {
				return;
			}
	
			if (outgoing) {
				left = this.core.coordinates(this.previous) - this.core.coordinates(this.next);
				previous.one($.support.animation.end, clear)
					.css( { 'left': left + 'px' } )
					.addClass('animated owl-animated-out')
					.addClass(outgoing);
			}
	
			if (incoming) {
				next.one($.support.animation.end, clear)
					.addClass('animated owl-animated-in')
					.addClass(incoming);
			}
		};
	
		Animate.prototype.clear = function(e) {
			$(e.target).css( { 'left': '' } )
				.removeClass('animated owl-animated-out owl-animated-in')
				.removeClass(this.core.settings.animateIn)
				.removeClass(this.core.settings.animateOut);
			this.core.onTransitionEnd();
		};
	
		/**
		 * Destroys the plugin.
		 * @public
		 */
		Animate.prototype.destroy = function() {
			var handler, property;
	
			for (handler in this.handlers) {
				this.core.$element.off(handler, this.handlers[handler]);
			}
			for (property in Object.getOwnPropertyNames(this)) {
				typeof this[property] != 'function' && (this[property] = null);
			}
		};
	
		$.fn.owlCarousel.Constructor.Plugins.Animate = Animate;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * Autoplay Plugin
	 * @version 2.0.0-beta.3
	 * @author Bartosz Wojciechowski
	 * @author Artus Kolanowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
	
		/**
		 * Creates the autoplay plugin.
		 * @class The Autoplay Plugin
		 * @param {Owl} scope - The Owl Carousel
		 */
		var Autoplay = function(carousel) {
			/**
			 * Reference to the core.
			 * @protected
			 * @type {Owl}
			 */
			this._core = carousel;
	
			/**
			 * The autoplay interval.
			 * @type {Number}
			 */
			this._interval = null;
	
			/**
			 * Indicates whenever the autoplay is paused.
			 * @type {Boolean}
			 */
			this._paused = false;
	
			/**
			 * All event handlers.
			 * @protected
			 * @type {Object}
			 */
			this._handlers = {
				'changed.owl.carousel': $.proxy(function(e) {
					if (e.namespace && e.property.name === 'settings') {
						if (this._core.settings.autoplay) {
							this.play();
						} else {
							this.stop();
						}
					}
				}, this),
				'initialized.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.autoplay) {
						this.play();
					}
				}, this),
				'play.owl.autoplay': $.proxy(function(e, t, s) {
					if (e.namespace) {
						this.play(t, s);
					}
				}, this),
				'stop.owl.autoplay': $.proxy(function(e) {
					if (e.namespace) {
						this.stop();
					}
				}, this),
				'mouseover.owl.autoplay': $.proxy(function() {
					if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
						this.pause();
					}
				}, this),
				'mouseleave.owl.autoplay': $.proxy(function() {
					if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
						this.play();
					}
				}, this)
			};
	
			// register event handlers
			this._core.$element.on(this._handlers);
	
			// set default options
			this._core.options = $.extend({}, Autoplay.Defaults, this._core.options);
		};
	
		/**
		 * Default options.
		 * @public
		 */
		Autoplay.Defaults = {
			autoplay: false,
			autoplayTimeout: 5000,
			autoplayHoverPause: false,
			autoplaySpeed: false
		};
	
		/**
		 * Starts the autoplay.
		 * @public
		 * @param {Number} [timeout] - The interval before the next animation starts.
		 * @param {Number} [speed] - The animation speed for the animations.
		 */
		Autoplay.prototype.play = function(timeout, speed) {
			this._paused = false;
	
			if (this._core.is('rotating')) {
				return;
			}
	
			this._core.enter('rotating');
	
			this._interval = window.setInterval($.proxy(function() {
				if (this._paused || this._core.is('busy') || this._core.is('interacting') || document.hidden) {
					return;
				}
				this._core.next(speed || this._core.settings.autoplaySpeed);
			}, this), timeout || this._core.settings.autoplayTimeout);
		};
	
		/**
		 * Stops the autoplay.
		 * @public
		 */
		Autoplay.prototype.stop = function() {
			if (!this._core.is('rotating')) {
				return;
			}
	
			window.clearInterval(this._interval);
			this._core.leave('rotating');
		};
	
		/**
		 * Stops the autoplay.
		 * @public
		 */
		Autoplay.prototype.pause = function() {
			if (!this._core.is('rotating')) {
				return;
			}
	
			this._paused = true;
		};
	
		/**
		 * Destroys the plugin.
		 */
		Autoplay.prototype.destroy = function() {
			var handler, property;
	
			this.stop();
	
			for (handler in this._handlers) {
				this._core.$element.off(handler, this._handlers[handler]);
			}
			for (property in Object.getOwnPropertyNames(this)) {
				typeof this[property] != 'function' && (this[property] = null);
			}
		};
	
		$.fn.owlCarousel.Constructor.Plugins.autoplay = Autoplay;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * Navigation Plugin
	 * @version 2.0.0-beta.3
	 * @author Artus Kolanowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
		'use strict';
	
		/**
		 * Creates the navigation plugin.
		 * @class The Navigation Plugin
		 * @param {Owl} carousel - The Owl Carousel.
		 */
		var Navigation = function(carousel) {
			/**
			 * Reference to the core.
			 * @protected
			 * @type {Owl}
			 */
			this._core = carousel;
	
			/**
			 * Indicates whether the plugin is initialized or not.
			 * @protected
			 * @type {Boolean}
			 */
			this._initialized = false;
	
			/**
			 * The current paging indexes.
			 * @protected
			 * @type {Array}
			 */
			this._pages = [];
	
			/**
			 * All DOM elements of the user interface.
			 * @protected
			 * @type {Object}
			 */
			this._controls = {};
	
			/**
			 * Markup for an indicator.
			 * @protected
			 * @type {Array.<String>}
			 */
			this._templates = [];
	
			/**
			 * The carousel element.
			 * @type {jQuery}
			 */
			this.$element = this._core.$element;
	
			/**
			 * Overridden methods of the carousel.
			 * @protected
			 * @type {Object}
			 */
			this._overrides = {
				next: this._core.next,
				prev: this._core.prev,
				to: this._core.to
			};
	
			/**
			 * All event handlers.
			 * @protected
			 * @type {Object}
			 */
			this._handlers = {
				'prepared.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.dotsData) {
						this._templates.push('<div class="' + this._core.settings.dotClass + '">' +
							$(e.content).find('[data-dot]').andSelf('[data-dot]').attr('data-dot') + '</div>');
					}
				}, this),
				'added.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.dotsData) {
						this._templates.splice(e.position, 0, this._templates.pop());
					}
				}, this),
				'remove.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.dotsData) {
						this._templates.splice(e.position, 1);
					}
				}, this),
				'changed.owl.carousel': $.proxy(function(e) {
					if (e.namespace && e.property.name == 'position') {
						this.draw();
					}
				}, this),
				'initialized.owl.carousel': $.proxy(function(e) {
					if (e.namespace && !this._initialized) {
						this._core.trigger('initialize', null, 'navigation');
						this.initialize();
						this.update();
						this.draw();
						this._initialized = true;
						this._core.trigger('initialized', null, 'navigation');
					}
				}, this),
				'refreshed.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._initialized) {
						this._core.trigger('refresh', null, 'navigation');
						this.update();
						this.draw();
						this._core.trigger('refreshed', null, 'navigation');
					}
				}, this)
			};
	
			// set default options
			this._core.options = $.extend({}, Navigation.Defaults, this._core.options);
	
			// register event handlers
			this.$element.on(this._handlers);
		};
	
		/**
		 * Default options.
		 * @public
		 * @todo Rename `slideBy` to `navBy`
		 */
		Navigation.Defaults = {
			nav: false,
			navText: [ 'prev', 'next' ],
			navSpeed: false,
			navElement: 'div',
			navContainer: false,
			navContainerClass: 'owl-nav',
			navClass: [ 'owl-prev', 'owl-next' ],
			slideBy: 1,
			dotClass: 'owl-dot',
			dotsClass: 'owl-dots',
			dots: true,
			dotsEach: false,
			dotsData: false,
			dotsSpeed: false,
			dotsContainer: false
		};
	
		/**
		 * Initializes the layout of the plugin and extends the carousel.
		 * @protected
		 */
		Navigation.prototype.initialize = function() {
			var override,
				settings = this._core.settings;
	
			// create DOM structure for relative navigation
			this._controls.$relative = (settings.navContainer ? $(settings.navContainer)
				: $('<div>').addClass(settings.navContainerClass).appendTo(this.$element)).addClass('disabled');
	
			this._controls.$previous = $('<' + settings.navElement + '>')
				.addClass(settings.navClass[0])
				.html(settings.navText[0])
				.prependTo(this._controls.$relative)
				.on('click', $.proxy(function(e) {
					this.prev(settings.navSpeed);
				}, this));
			this._controls.$next = $('<' + settings.navElement + '>')
				.addClass(settings.navClass[1])
				.html(settings.navText[1])
				.appendTo(this._controls.$relative)
				.on('click', $.proxy(function(e) {
					this.next(settings.navSpeed);
				}, this));
	
			// create DOM structure for absolute navigation
			if (!settings.dotsData) {
				this._templates = [ $('<div>')
					.addClass(settings.dotClass)
					.append($('<span>'))
					.prop('outerHTML') ];
			}
	
			this._controls.$absolute = (settings.dotsContainer ? $(settings.dotsContainer)
				: $('<div>').addClass(settings.dotsClass).appendTo(this.$element)).addClass('disabled');
	
			this._controls.$absolute.on('click', 'div', $.proxy(function(e) {
				var index = $(e.target).parent().is(this._controls.$absolute)
					? $(e.target).index() : $(e.target).parent().index();
	
				e.preventDefault();
	
				this.to(index, settings.dotsSpeed);
			}, this));
	
			// override public methods of the carousel
			for (override in this._overrides) {
				this._core[override] = $.proxy(this[override], this);
			}
		};
	
		/**
		 * Destroys the plugin.
		 * @protected
		 */
		Navigation.prototype.destroy = function() {
			var handler, control, property, override;
	
			for (handler in this._handlers) {
				this.$element.off(handler, this._handlers[handler]);
			}
			for (control in this._controls) {
				this._controls[control].remove();
			}
			for (override in this.overides) {
				this._core[override] = this._overrides[override];
			}
			for (property in Object.getOwnPropertyNames(this)) {
				typeof this[property] != 'function' && (this[property] = null);
			}
		};
	
		/**
		 * Updates the internal state.
		 * @protected
		 */
		Navigation.prototype.update = function() {
			var i, j, k,
				lower = this._core.clones().length / 2,
				upper = lower + this._core.items().length,
				maximum = this._core.maximum(true),
				settings = this._core.settings,
				size = settings.center || settings.autoWidth || settings.dotsData
					? 1 : settings.dotsEach || settings.items;
	
			if (settings.slideBy !== 'page') {
				settings.slideBy = Math.min(settings.slideBy, settings.items);
			}
	
			if (settings.dots || settings.slideBy == 'page') {
				this._pages = [];
	
				for (i = lower, j = 0, k = 0; i < upper; i++) {
					if (j >= size || j === 0) {
						this._pages.push({
							start: Math.min(maximum, i - lower),
							end: i - lower + size - 1
						});
						if (Math.min(maximum, i - lower) === maximum) {
							break;
						}
						j = 0, ++k;
					}
					j += this._core.mergers(this._core.relative(i));
				}
			}
		};
	
		/**
		 * Draws the user interface.
		 * @todo The option `dotsData` wont work.
		 * @protected
		 */
		Navigation.prototype.draw = function() {
			var difference,
				settings = this._core.settings,
				disabled = this._core.items().length <= settings.items,
				index = this._core.relative(this._core.current()),
				loop = settings.loop || settings.rewind;
	
			this._controls.$relative.toggleClass('disabled', !settings.nav || disabled);
	
			if (settings.nav) {
				this._controls.$previous.toggleClass('disabled', !loop && index <= this._core.minimum(true));
				this._controls.$next.toggleClass('disabled', !loop && index >= this._core.maximum(true));
			}
	
			this._controls.$absolute.toggleClass('disabled', !settings.dots || disabled);
	
			if (settings.dots) {
				difference = this._pages.length - this._controls.$absolute.children().length;
	
				if (settings.dotsData && difference !== 0) {
					this._controls.$absolute.html(this._templates.join(''));
				} else if (difference > 0) {
					this._controls.$absolute.append(new Array(difference + 1).join(this._templates[0]));
				} else if (difference < 0) {
					this._controls.$absolute.children().slice(difference).remove();
				}
	
				this._controls.$absolute.find('.active').removeClass('active');
				this._controls.$absolute.children().eq($.inArray(this.current(), this._pages)).addClass('active');
			}
		};
	
		/**
		 * Extends event data.
		 * @protected
		 * @param {Event} event - The event object which gets thrown.
		 */
		Navigation.prototype.onTrigger = function(event) {
			var settings = this._core.settings;
	
			event.page = {
				index: $.inArray(this.current(), this._pages),
				count: this._pages.length,
				size: settings && (settings.center || settings.autoWidth || settings.dotsData
					? 1 : settings.dotsEach || settings.items)
			};
		};
	
		/**
		 * Gets the current page position of the carousel.
		 * @protected
		 * @returns {Number}
		 */
		Navigation.prototype.current = function() {
			var current = this._core.relative(this._core.current());
			return $.grep(this._pages, $.proxy(function(page, index) {
				return page.start <= current && page.end >= current;
			}, this)).pop();
		};
	
		/**
		 * Gets the current succesor/predecessor position.
		 * @protected
		 * @returns {Number}
		 */
		Navigation.prototype.getPosition = function(successor) {
			var position, length,
				settings = this._core.settings;
	
			if (settings.slideBy == 'page') {
				position = $.inArray(this.current(), this._pages);
				length = this._pages.length;
				successor ? ++position : --position;
				position = this._pages[((position % length) + length) % length].start;
			} else {
				position = this._core.relative(this._core.current());
				length = this._core.items().length;
				successor ? position += settings.slideBy : position -= settings.slideBy;
			}
	
			return position;
		};
	
		/**
		 * Slides to the next item or page.
		 * @public
		 * @param {Number} [speed=false] - The time in milliseconds for the transition.
		 */
		Navigation.prototype.next = function(speed) {
			$.proxy(this._overrides.to, this._core)(this.getPosition(true), speed);
		};
	
		/**
		 * Slides to the previous item or page.
		 * @public
		 * @param {Number} [speed=false] - The time in milliseconds for the transition.
		 */
		Navigation.prototype.prev = function(speed) {
			$.proxy(this._overrides.to, this._core)(this.getPosition(false), speed);
		};
	
		/**
		 * Slides to the specified item or page.
		 * @public
		 * @param {Number} position - The position of the item or page.
		 * @param {Number} [speed] - The time in milliseconds for the transition.
		 * @param {Boolean} [standard=false] - Whether to use the standard behaviour or not.
		 */
		Navigation.prototype.to = function(position, speed, standard) {
			var length;
	
			if (!standard) {
				length = this._pages.length;
				$.proxy(this._overrides.to, this._core)(this._pages[((position % length) + length) % length].start, speed);
			} else {
				$.proxy(this._overrides.to, this._core)(position, speed);
			}
		};
	
		$.fn.owlCarousel.Constructor.Plugins.Navigation = Navigation;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * Hash Plugin
	 * @version 2.0.0-beta.3
	 * @author Artus Kolanowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
		'use strict';
	
		/**
		 * Creates the hash plugin.
		 * @class The Hash Plugin
		 * @param {Owl} carousel - The Owl Carousel
		 */
		var Hash = function(carousel) {
			/**
			 * Reference to the core.
			 * @protected
			 * @type {Owl}
			 */
			this._core = carousel;
	
			/**
			 * Hash index for the items.
			 * @protected
			 * @type {Object}
			 */
			this._hashes = {};
	
			/**
			 * The carousel element.
			 * @type {jQuery}
			 */
			this.$element = this._core.$element;
	
			/**
			 * All event handlers.
			 * @protected
			 * @type {Object}
			 */
			this._handlers = {
				'initialized.owl.carousel': $.proxy(function(e) {
					if (e.namespace && this._core.settings.startPosition === 'URLHash') {
						$(window).trigger('hashchange.owl.navigation');
					}
				}, this),
				'prepared.owl.carousel': $.proxy(function(e) {
					if (e.namespace) {
						var hash = $(e.content).find('[data-hash]').andSelf('[data-hash]').attr('data-hash');
	
						if (!hash) {
							return;
						}
	
						this._hashes[hash] = e.content;
					}
				}, this),
				'changed.owl.carousel': $.proxy(function(e) {
					if (e.namespace && e.property.name === 'position') {
						var current = this._core.items(this._core.relative(this._core.current())),
							hash = $.map(this._hashes, function(item, hash) {
								return item === current ? hash : null;
							}).join();
	
						if (!hash || window.location.hash.slice(1) === hash) {
							return;
						}
	
						window.location.hash = hash;
					}
				}, this)
			};
	
			// set default options
			this._core.options = $.extend({}, Hash.Defaults, this._core.options);
	
			// register the event handlers
			this.$element.on(this._handlers);
	
			// register event listener for hash navigation
			$(window).on('hashchange.owl.navigation', $.proxy(function(e) {
				var hash = window.location.hash.substring(1),
					items = this._core.$stage.children(),
					position = this._hashes[hash] && items.index(this._hashes[hash]);
	
				if (position === undefined || position === this._core.current()) {
					return;
				}
	
				this._core.to(this._core.relative(position), false, true);
			}, this));
		};
	
		/**
		 * Default options.
		 * @public
		 */
		Hash.Defaults = {
			URLhashListener: false
		};
	
		/**
		 * Destroys the plugin.
		 * @public
		 */
		Hash.prototype.destroy = function() {
			var handler, property;
	
			$(window).off('hashchange.owl.navigation');
	
			for (handler in this._handlers) {
				this._core.$element.off(handler, this._handlers[handler]);
			}
			for (property in Object.getOwnPropertyNames(this)) {
				typeof this[property] != 'function' && (this[property] = null);
			}
		};
	
		$.fn.owlCarousel.Constructor.Plugins.Hash = Hash;
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/**
	 * Support Plugin
	 *
	 * @version 2.0.0-beta.3
	 * @author Vivid Planet Software GmbH
	 * @author Artus Kolanowski
	 * @license The MIT License (MIT)
	 */
	;(function($, window, document, undefined) {
	
		var style = $('<support>').get(0).style,
			prefixes = 'Webkit Moz O ms'.split(' '),
			events = {
				transition: {
					end: {
						WebkitTransition: 'webkitTransitionEnd',
						MozTransition: 'transitionend',
						OTransition: 'oTransitionEnd',
						transition: 'transitionend'
					}
				},
				animation: {
					end: {
						WebkitAnimation: 'webkitAnimationEnd',
						MozAnimation: 'animationend',
						OAnimation: 'oAnimationEnd',
						animation: 'animationend'
					}
				}
			},
			tests = {
				csstransforms: function() {
					return !!test('transform');
				},
				csstransforms3d: function() {
					return !!test('perspective');
				},
				csstransitions: function() {
					return !!test('transition');
				},
				cssanimations: function() {
					return !!test('animation');
				}
			};
	
		function test(property, prefixed) {
			var result = false,
				upper = property.charAt(0).toUpperCase() + property.slice(1);
	
			$.each((property + ' ' + prefixes.join(upper + ' ') + upper).split(' '), function(i, property) {
				if (style[property] !== undefined) {
					result = prefixed ? property : true;
					return false;
				}
			});
	
			return result;
		}
	
		function prefixed(property) {
			return test(property, true);
		}
	
		if (tests.csstransitions()) {
			/* jshint -W053 */
			$.support.transition = new String(prefixed('transition'))
			$.support.transition.end = events.transition.end[ $.support.transition ];
		}
	
		if (tests.cssanimations()) {
			/* jshint -W053 */
			$.support.animation = new String(prefixed('animation'))
			$.support.animation.end = events.animation.end[ $.support.animation ];
		}
	
		if (tests.csstransforms()) {
			/* jshint -W053 */
			$.support.transform = new String(prefixed('transform'));
			$.support.transform3d = tests.csstransforms3d();
		}
	
	})(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(7)))

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	/**
	 * Created by Raydius on 4/3/16.
	 */
	
	var copy = {
	  "logo": {
	    "src": __webpack_require__(36),
	    "alt": "Phenomenon Logo"
	  },
	  "navigation": [{
	    "navTitle": "About",
	    "title": "View About Page",
	    "uiSref": "about",
	    "className": "about"
	  }, {
	    "navTitle": "Work",
	    "title": "View Work Page",
	    "uiSref": "work",
	    "className": "work"
	  }, {
	    "navTitle": "Culture",
	    "title": "View Culture Page",
	    "uiSref": "culture",
	    "className": "culture"
	  }, {
	    "navTitle": "Jobs",
	    "title": "View Jobs Page",
	    "uiSref": "jobs"
	  }, {
	    "navTitle": "Contact",
	    "title": "View Contact Form",
	    "uiSref": "contact"
	  }],
	  "share": {
	    "twitter": {
	      "url": "https://www.twitter.com/phenomenon/",
	      "className": "icon-twitter",
	      "title": "View Phenomenon's Tweets"
	    },
	    "facebook": {
	      "url": "https://www.facebook.com/PHENOMENONmarketing/",
	      "className": "icon-facebook",
	      "title": "View Phenomenon's Facebook Page"
	    },
	    "linkedin": {
	      "url": "https://www.linkedin.com/company/phenomenon",
	      "className": "icon-linkedin",
	      "title": "View Phenomenon's Facebook Page"
	    },
	    "instagram": {
	      "url": "https://www.instagram.com/phenomenon/",
	      "className": "icon-mail",
	      "title": "View Phenomenon's Instagram"
	    }
	  },
	  "footer": {
	    "offices": {
	      "la": {
	        "title": "Los Angeles",
	        "address": {
	          "line1": "5900 Wilshire Blvd, Floor 28",
	          "line2": "Los Angeles, CA 90036"
	        },
	        "phone": {
	          "href": "tel:13236484000",
	          "formatted": "+1 323 648 4000",
	          "title": "Phenomenon Los Angeles Office Phone Number"
	        }
	      },
	      "chicago": {
	        "title": "Chicago",
	        "address": {
	          "line1": "118 N. Peoria St, Suite 5N",
	          "line2": "Chicago, IL 60607"
	        },
	        "phone": {
	          "href": "tel:13236484000",
	          "formatted": "+1 323 648 4000",
	          "title": "Phenomenon Chicago Office Phone Number"
	        }
	      }
	    },
	    "social": {
	      "instagram": {
	        "url": "https://www.instagram.com/phenomenon/",
	        "className": "icon-instagram",
	        "title": "View Phenomenon's Instagram"
	      },
	      "twitter": {
	        "url": "https://www.twitter.com/phenomenon/",
	        "className": "icon-twitter",
	        "title": "View Phenomenon's Tweets"
	      },
	      "facebook": {
	        "url": "https://www.facebook.com/PHENOMENONmarketing/",
	        "className": "icon-facebook",
	        "title": "View Phenomenon's Facebook Page"
	      },
	      "linkedin": {
	        "url": "https://www.linkedin.com/company/phenomenon",
	        "className": "icon-linkedin",
	        "title": "View Phenomenon's Facebook Page"
	      }
	    }
	  },
	  "content": {
	    "home": {
	      "contributors": [{
	        "name": "Amy Weisenbach",
	        "jobTitle": "VP Marketing, Wilson",
	        "project": "Wilson Is Now <br>Fully Equipped.",
	        "contributorAvatar": __webpack_require__(37),
	        "href": "#/work/wilson-anthem"
	      }, {
	        "name": "Matt Stringer",
	        "jobTitle": "EVP Marketing, Men&#8217s Wearhouse",
	        "project": "Men&#8217s Wearhouse<br> Updates Its Wardrobe.",
	        "contributorAvatar": __webpack_require__(38),
	        "href": "#/work/mens-warehouse"
	      }, {
	        "name": "Megan Crossland",
	        "jobTitle": "CMO, thinkThin",
	        "project": "thinkThin Helps<br> Women Shed the Guilt.",
	        "contributorAvatar": __webpack_require__(39),
	        "href": "#/work/think-thin"
	      }],
	      "contributorsMore": [{
	        "name": "Allison Cornia",
	        "jobTitle": "SVP Marketing, Xome",
	        "project": "When Buying a House, There&#8217s No Place Like Xome.",
	        "contributorAvatar": __webpack_require__(38),
	        "href": "#/work/xome"
	      }, {
	        "name": "Pasty Hauer",
	        "jobTitle": "VP Brand Marketing, Sunny",
	        "project": "It&#8217;s A &#8220;Sunny&#8221; Day for Payday Loans.",
	        "contributorAvatar": __webpack_require__(40),
	        "href": "#/work/sunny"
	      }, {
	        "name": "Amy Weisenbach",
	        "jobTitle": "VP Marketing, Wilson",
	        "project": "Wilson Is Now <br>Fully Equipped.",
	        "contributorAvatar": __webpack_require__(41),
	        "href": "#/work/wilson-x"
	      }]
	    },
	    "about": {
	      "title": "About Phenomenon",
	      "className": "about",
	      "blockquote": "Something like a Phenomenon",
	      "subquote": "A behind-the-scenes look at the most appropriately-named agency I know.",
	      "quoterName": "Kevin Dahlstrom, CMO",
	      "quoterTitle": "Mr. Cooper Home Loans",
	      "description": "Phenomenon - About",
	      "dictionary": {
	        "noun": "1. a person adept at solving problems.",
	        "verb": "2. to carry out a solution in any direction that is correct for the problem."
	      },
	      "paragraph1": ["I first met the Founder and CEO of Phenomenon in 2009 when I was looking for an agency to help launch a Payday Loan company. Pheno was a small shop and I was sure that we would be one of their biggest clients, so I was excited to talk to them. But when I got Krish on the phone and explained the brief to him, he wasn&#8217;t interested.", "Years later, as we sat in his office on the 28th floor of the SBE building in Los Angeles, our conversation began with that rather inauspicious start."],
	      "paragraph2": ['KD: So, do you say, "no" to every client at first, or was it just me?<span>PHENO: Ha! So this is where you want to start?</span>', "Absolutely<span>Look, we throw ourselves into everything we do. We work long hours, we scrutinize, we push. We really go all out. And to put that much effort into something, we have to believe in it. And, truthfully, the Payday Loan business had a lot of negative implications with predatory lending and all that. And it just didn&#8217;t feel like the kind of thing we could feel good about.</span>", "So what changed your mind?<span>The second you gave us the permission to help you create a new kind of company, one that actually helped people break the cycle of poverty and bad credit, we were in. 100%. We&#8217;re actually not very good at working with clients who want more of the same. It&#8217;s when they want to radically change their business, growth, trajectory and market share that we&#8217;re the right firm to call.</span>", "So you kind of self-select clients that are going to appreciate the kind of work you do.<span>Very much so.</span>"],
	      "paragraph3": ["You guys do a lot of different things for clients. You&#8217;re not an ad agency, but you make ads. You&#8217;re not a strategy firm, but you do strategy... how do you explain what it is you&#8217;re all about?<span>It&#8217;s always hard to define something that&#8217;s completely new and different and a departure from everything that&#8217;s come before it.</span><span>First and foremost we&#8217;re an Innovations Agency. Sometimes that innovation is an app, tool or piece of technology. Sometimes it&#8217;s a product. Sometimes it&#8217;s a radical business strategy. Sometimes it&#8217;s a new retail concept. Sometimes it&#8217;s inventing a whole new brand or category. Sometimes it&#8217;s an ad campaign. And fairly often it&#8217;s all of the above.</span>", "Right, but playing devil's advocate for a second, that's the same stuff that everyone promises. How are you any different?<span>Ah, my favorite question. So historically there are 4 types of agencies: Strategic Agencies that can analyze your business, Design Agencies that can do your graphic ID, packaging and brand guidelines, Digital Agencies that can do your websites and apps and Advertising Agencies that can do your brand campaign or retail work.</span><span>And you're right, to some degree they all claim to be able to do everything. But truthfully, they have a legacy as a specific kind of agency, and they are geared to create a certain kind of deliverable.</span>", "Right. I know if I go to an Ad Agency with my problem, I'm going to get an ad campaign as the solution...", "<span>Exactly! Which makes perfect sense because that&#8217;s what they&#8217;re built to make. They invest their money in people that make ads, and they need a return on that investment. They may hire a digital leader, or a proper business strategist, but that person is always going to feel a bit like a fish out of water in that kind of environment. And unfortunately, they&#8217;ll feel like a second class citizen because their work isn&#8217;t driving revenue anywhere near the level that the advertising is.</span>", "<span>When a client talks to us, we don&#8217;t have any preconceived notions about what the solution will be. We always start with strategic insights and go from there. Based on the results, we may recommend a product portfolio solution, or an app/utility solution, or a user experience solution, or an integrated ad campaign. Or something completely different that&#8217;s never been done before.</span>", "<span>To put it simply, everyone else is trying, very slowly, to move to the intersection of the 4 types of agencies, but we don&#8217;t need to move an inch, because we were actually born there.</span>"],
	      "paragraph4": ["OK, but can you really claim to be experts in each of those categories? How are you not a jack of all trades and master of none?", "<span>We've been giving it a lot of thought and we think there are two things that made this happen: our people and our organization.</span>", "<span>Our people are strategists who love strategy, but hate the limits of working at a strategy firm. They're designers who love design, but feel handcuffed working at a pure design shop. They're digital leaders who don't want to be so disconnected from the brand thinking. And they're ad agency leaders who are sick and tired of being relegated to just TV, Print and Out of Home. They're all looking for innovation. And our organization gives them the ability to apply their skills in all kinds of new ways.</span>", "<span>We fundamentally understand each of these disciplines and how to plug them into the agency. They aren't bolted onto the framework as an added discipline. They are a part of the gears and fabric of the agency at a very core level.</span>", "How so?", "<span>Well, I founded the place, and I&#8217;m a classically trained computer engineer who loves art and design and I&#8217;ve been the president of Digitas (one of the industry&#8217;s leading digital firms) and I&#8217;ve been the Global Chief Strategy Officer at DDB (one of the world&#8217;s most successful advertising agencies.) And I grew the agency&#8217;s capabilities around my own passions. Now I&#8217;ve got world-class leaders running every discipline in the agency, and I get to have amazing conversations with them all day long.</span>", "OK, but can you really claim to be experts in each of those categories? How are you not a jack of all trades and master of none", "<span>Well, here&#8217;s an example. We don&#8217;t do a lot of pitches, right? But this year we did three, and we won each of them. One was a strategy assignment and we beat out Profit and McKenzie. One was an Ad Agency AOR assignment and we beat out BBDO and GSDM. And the last one was a Digital Design AOR relationship and we beat out R/GA and Blast Radius. So, clearly we must be doing something right.</span>", "<span>I&#8217;ve been giving it a lot of thought and I think there are two things that made this happen: our people and our organization.</span>", "<span>Our people are strategists who love strategy, but hate the limits of working at a strategy firm. They&#8217;re designers who love design, but feel handcuffed working at a design shop. They&#8217;re digital leaders who don&#8217;t want to be so disconnected from the brand thinking. And they&#8217;re ad agency leaders who are sick and tired of being relegated to just TV, Print and Out of Home. They&#8217;re all looking for innovation. And our organization gives them the ability to apply their skills in all kinds of new ways.</span>"],
	      "paragraph5": ["It&#8217;s interesting that you say that your talent is looking for innovation, because as a client, that&#8217;s exactly what I&#8217;m looking for too. ", "<span>Right, and when the client&#8217;s ambitions mesh with the agency&#8217;s ambitions and the ambitions of the individuals that work there, that&#8217;s when great things happen.</span>"],
	      "accordion": [{
	        "label": "Brand Innovation",
	        "content": 'We help companies refocus their marketing spend, analyze their touch points, evolve their brands and take advantage of "big idea" thinking.'
	      }, {
	        "label": "UX Innovation",
	        "content": 'We help companies rethink customer experiences across all touch-points using an advanced blend of interaction design, science and art..'
	      }, {
	        "label": "Digital Innovation",
	        "content": 'We use emerging digital media to create marketing efficiencies, creative positive brand conversations, and maintain meaningful dialogue with customers.'
	      }, {
	        "label": "Cultural Innovation",
	        "content": 'We help companies accelerate their presence in culture using partnerships with entertainment, cultural and brand properties with similar DNA.'
	      }],
	      "details": ["Buying or selling a home is often a complex, fragmented and darned unfriendly process. Xome is a radically better way to do it because it lets you complete everything from the convenience of an app. In just six weeks we built Xome: the first truly integrated way to buy and sell a home. The app lets you list your home, search for a home, make and receive offers, move into escrow and close the deal.", "When it came to the TV spot, we created something that spoke to the core of what Xome does, it makes the entire home buying/selling process more transparent. This teaser spot led people to our site where a demo video explained in better detail everything Xome does for the home buyer."],
	      "maincontent": [],
	      "subcontent": [{
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(42),
	        "thumbAlt": "Xome - TV Spot - Transparent House",
	        "thumbTitle": "Click to play video",
	        "vimeo": "159123265"
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(43),
	        "imageAlt": "Xome Image 1"
	      }]
	    },
	    "work": {
	      "title": "Work Cases Phenomenon",
	      "className": "work",
	      "description": "Phenomenon - Work",
	      "blockquote": "A lot of the work they do is confidential. Here&#8217;s some that isn&#8217t.&#8221;",
	      "quoterName": "Kevin Dahlstrom",
	      "quoterTitle": "Mr. Cooper Home Loans",
	      "maincontent": [],
	      "subcontent": [{
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(44),
	        "imageAlt": "Wilson Image 1",
	        "legend": "Sport / Lifestyle",
	        "headline": "Wilson Equips Itself With Global Campaign.",
	        "citeName": "By Amy Weisenbach",
	        "citeTitle": "VP Marketing, Wilson",
	        "description": "New 360-degree global campaign for 100 year old company.",
	        "readmoreUrl": "#/work/wilson-anthem"
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(45),
	        "imageAlt": "Wilson Image 3",
	        "legend": "Fashion / Retail",
	        "headline": "Men&#8217;s Wearhouse<br> Updates Its Wardrobe.",
	        "citeName": "By Matt Stringer",
	        "citeTitle": "EVP Marketing Men&#8217;s Wearhouse",
	        "description": "After the departure of longtime owner and face of brand, company looks to modernize all the way down to the cufflinks.",
	        "readmoreUrl": "#/work/mens-wearhouse"
	
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(46),
	        "imageAlt": "Wilson Image 6",
	        "legend": "Food / Drink",
	        "headline": "thinkThin Helps Women Shed the Guilt.",
	        "citeName": "By Megan Crossland",
	        "citeTitle": "CMO, thinkThin",
	        "description": "Nutritional bar targeted to women launches its first campaign using humor to rave reviews online.",
	        "readmoreUrl": "#/work/think-thin"
	
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(47),
	        "imageAlt": "Wilson Image 4",
	        "legend": "Sport / Lifestyle",
	        "headline": "Wilson Launches Futuristic Ball.",
	        "citeName": "By Amy Weisenbach",
	        "citeTitle": "VP Marketing, Wilson",
	        "description": "For the first time a basketball is connected to your smartphone to track makes, misses and enhance performance.",
	        "readmoreUrl": "#/work/wilson-x"
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(48),
	        "imageAlt": "Wilson Image 5",
	        "legend": "Finance / Loans",
	        "headline": 'It&#8217;s A &#8220;Sunny&#8221; Day<br> for Payday Loans.',
	        "citeName": "By Patsy Hauer",
	        "citeTitle": "VP Brand Marketing, Sunny",
	        "description": "British company creates a whole new business model for payday loans that gives borrowers a better chance at getting out of debt.",
	        "readmoreUrl": "#/work/sunny"
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(49),
	        "imageAlt": "Wilson Image 2",
	        "legend": "Home/ Real Estate",
	        "headline": "When Buying a House, There's No place Like Xome.",
	        "citeName": "By Allison Cornia",
	        "citeTitle": "SVP Marketing, Xome",
	        "description": "New company looks to make buying and selling a home not only more mobile, but more transparent.",
	        "readmoreUrl": "#/work/xome"
	
	      }]
	    },
	    "wilson-anthem": {
	      "title": "Wilson Anthem",
	      "className": "wilson-anthem",
	      "client": "Wilson",
	      "clientLogo": __webpack_require__(50),
	      "project": "Wilson Anthem",
	      "media": "Branding, Video, Digital",
	      "blockquote": "Wilson Equips Itself With Global Campaign.",
	      "quoterName": "By Amy Weisenbach",
	      "quoterTitle": "VP Marketing, Wilson",
	      "quoterAvatar": __webpack_require__(51),
	      "description": "CVU - Phenomenon - Wilson X",
	      "topDescription": ["Even though Wilson makes sporting equipment for just about every sport in the world, it had been years since we had any sort of global brand campaign. Since this was our first campaign in a while, we needed to reestablish what Wilson was all about. Yes, we make quality, trusted equipment, but what do we stand for? What is our role in the world of sports?", "<span class='red'>We worked with the strategic team at Phenomenon to land on a pivotal but simple idea; between every athlete and their equipment exists a powerful relationship</span>", "Before we launched any consumer-facing branding, we asked Phenomenon to create something that could unify the Wilson team from within. What did this new face of Wilson mean? How could we as employees live this new mantra? The result was a beautifully bound brand book containing words and images that boldly and loudly defined who we are. We handed out these books to each of our employees."],
	      "caseWriter": {
	        "name": "Amy Weisenbach",
	        "title": "VP Marketing, Wilson",
	        "description": "Amy is the global head of marketing for Wilson Sporting Goods which is the world&#8217;s leading maker of performance sports equipment. Amy is a graduate of Harvard Business School."
	      },
	      "topcontent": [{
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(52),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(53),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(54),
	          "alt": "Wilson X Packaging Photo 3"
	        }, {
	          "url": __webpack_require__(55),
	          "alt": "Wilson X Packaging Photo 4"
	        }, {
	          "url": __webpack_require__(56),
	          "alt": "Wilson X Packaging Photo 5"
	        }, {
	          "url": __webpack_require__(57),
	          "alt": "Wilson X Packaging Photo 6"
	        }, {
	          "url": __webpack_require__(58),
	          "alt": "Wilson X Packaging Photo 6"
	        }, {
	          "url": __webpack_require__(59),
	          "alt": "Wilson X Packaging Photo 6"
	        }],
	        "mainDescription": ['After rallying the troops internally, it was time to tell the world through a global, brand campaign we called "My Wilson." We have some of the top professional athletes on our roster including Serena Williams, Roger Federer and Dustin Pedroia. But our goal with "My Wilson" was to not just celebrate the biggest athletes in the world, we wanted to show how every athlete has a powerful relationship with their equipment. We wanted to show professional and amateur youth athletes side-by-side. This connection and universal truth to sport is a recurring theme you&#8217;ll see in many communications going forward.']
	      }],
	      "detailcontent": [{
	        "video": true,
	        "thumb": __webpack_require__(60),
	        "thumbAlt": "Wilson X - TV Spot - All Day",
	        "thumbTitle": "Click to play video",
	        "vimeo": "155010840",
	        "mainDescription": ["<span class='red'>The launch film was not just a celebration of the biggest athletes in the world, it showed how every athlete has a powerful relationship with their equipment. It showed professional, amateur and professional and amateur youth athletes side-by-side.</span>", "We didn't have a massive media buy, so we decided to leverage social media to get more views and at the same time ambitiously grow our social presence. The way we did this was by using content to create two-way conversations with our followers. We asked amateurs all over the world to upload videos of themselves out on the playing fields, and we edited that footage into the actual spot giving youth athletes a personalized version that they could share over Facebook, Twitter or Instagram."]
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(61),
	        "imageAlt": "SLS",
	        "mainDescription": ['When it came to Wilson.com, we had a pretty big challenge. For years the site was very product oriented but the storytelling was pretty underdeveloped. We needed to evolve and focus our site into more of a content hub. Pheno helped us build an editorial commerce strategy and create a vision for the site that allowed us to tell stories that engage consumers around the brand, our products AND at the same time, sell product. "My Wilson" became the perfect campaign to show this new site to the world.']
	      }, {
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(62),
	          "alt": "Wilson X Packaging Photo 1"
	        }, {
	          "url": __webpack_require__(63),
	          "alt": "Wilson X Packaging Photo 2"
	        }],
	        "mainDescription": ["With our access to some of the most iconic athletes in the world, we created dozens of short films that showcased products and our athletes relationships with them. This is content that you could only get on our site which increased views, which increased buzz which -as you can guess- has dramatically increased online sales."]
	      }]
	    },
	    "wilsonX": {
	      "title": "Wilson X",
	      "className": "wilson-x",
	      "client": "Wilson",
	      "clientLogo": __webpack_require__(50),
	      "project": "Wilson X",
	      "media": "Branding, Packaging, Digital",
	      "blockquote": "Wilson Launches<br>Futuristic Ball.",
	      "quoterName": "By Amy Weisenbach",
	      "quoterTitle": "VP Marketing, Wilson",
	      "quoterAvatar": __webpack_require__(51),
	      "description": "CVU - Phenomenon - Wilson X",
	      "topDescription": ["With over 100 years of experience making sports equipment, we&#8217ve been at the forefront of nearly every major technology advancement in just about every sport. So it only made sense to pioneer the use of sensors and IOT technology inside our equipment with the Wilson X Connected Basketball.", "Wilson X really pushes the boundaries of what a basketball can be.", "<span class='red'>It&#8217s the first basketball that connects to your smartphone and tracks makes and misses without any attachments or accessories.</span>", "The ball also develops players&#8217 skills by turning training into a game. There&#8217s audio with crowd noise and sports commentary. There&#8217s a countdown mode to help create those pressure-filled minutes at the end of a game. And a player can even share their progress with friends, family or coaches. It&#8217s a ball that has the potential to truly take training to the next level by making you a more clutch shooter."],
	      "details": ["Wilson X's idea is simple. It's the first basketball that connects to your smartphone to help you track makes and misses without any sort of rim attachment. It was Wilson's first connected product and was an opportunity for us to show not just how revolutionary the ball was, but how digitally savvy Wilson was becoming. In just a few weeks we named the product. Designed the packaging. Designed the entire app experience. And created the ad campaign around it."],
	      "caseWriter": {
	        "name": "Amy Weisenbach",
	        "title": "VP Marketing, Wilson",
	        "description": "Amy is the VP of marketing for Wilson Sporting Goods. Prior to joining Wilson she was the first VP of Marketing for Trunk Club and has also worked at both Beam and Unilever on the AXE brand team. In 2012, Amy was named a Woman to Watch by Advertising Age. She is a graduate of Harvard Business School."
	      },
	      "topcontent": [{
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(64),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(65),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(66),
	          "alt": "Wilson X Packaging Photo 3"
	        }, {
	          "url": __webpack_require__(67),
	          "alt": "Wilson X Packaging Photo 4"
	        }, {
	          "url": __webpack_require__(68),
	          "alt": "Wilson X Packaging Photo 5"
	        }, {
	          "url": __webpack_require__(69),
	          "alt": "Wilson X Packaging Photo 6"
	        }],
	        "mainDescription": ["Phenomenon was at the table as we developed the ball and brought it to market. They helped us with positioning, the UX/UI of app development, product naming and of course, the marketing of the ball at launch. They were instrumental in helping us create a user experience that was simple and intuitive, but that also felt cool and represented the next generation of Wilson. It&#8217s one thing to show young athletes in your advertising, it&#8217s a whole different thing to give them a piece of technology that they actually use and love."]
	      }],
	      "detailcontent": [{
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(70),
	          "alt": "Wilson X Packaging Photo 6"
	        }, {
	          "url": __webpack_require__(71),
	          "alt": "Wilson X Packaging Photo 6"
	        }, {
	          "url": __webpack_require__(72),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(73),
	          "alt": "Wilson X Packaging Photo 3"
	        }, {
	          "url": __webpack_require__(74),
	          "alt": "Wilson X Packaging Photo 4"
	        }, {
	          "url": __webpack_require__(75),
	          "alt": "Wilson X Packaging Photo 5"
	        }, {
	          "url": __webpack_require__(76),
	          "alt": "Wilson X Packaging Photo 6"
	        }, {
	          "url": __webpack_require__(77),
	          "alt": "Wilson X Packaging Photo 6"
	        }],
	        "mainDescription": ["<span class='red'>This was a bold new step for us because suddenly a mobile app was an aspect of what we were selling. The app needed to be as good as the ball itself.</span>", "With the campaign, we wanted to communicate how revolutionary the Wilson X Connected Basketball is and at the same time show how it can help young athletes become better shooters from anywhere. Street to gym. Practice to playground."]
	      }, {
	        "video": true,
	        "thumb": __webpack_require__(60),
	        "thumbAlt": "Wilson X - TV Spot - All Day",
	        "thumbTitle": "Click to play video",
	        "vimeo": "165052370",
	        "mainDescription": ["The results: We launched just before the holidays and sold out in a matter of weeks on Amazon as well as in our key retailers. Wilson X is available in retail stores all over the country and is beginning to rollout in other markets around the globe."]
	      }, {
	        "video": true,
	        "thumb": __webpack_require__(60),
	        "thumbAlt": "Wilson X - TV Spot - All Day",
	        "thumbTitle": "Click to play video",
	        "vimeo": "155010839",
	        "mainDescription": ["The results: We sold out on Amazon in just two weeks and Wilson X will be in retail stores all over the country this Spring."]
	      }, {
	        "video": true,
	        "thumb": __webpack_require__(60),
	        "thumbAlt": "Wilson X - TV Spot - All Day",
	        "thumbTitle": "Click to play video",
	        "vimeo": "155010836",
	        "mainDescription": []
	      }, {
	        "video": true,
	        "thumb": __webpack_require__(60),
	        "thumbAlt": "Wilson X - TV Spot - All Day",
	        "thumbTitle": "Click to play video",
	        "vimeo": "155010835",
	        "mainDescription": []
	      }]
	    },
	    "sls": {
	      "title": "SLS",
	      "className": "sls",
	      "client": "SBE",
	      "clientLogo": __webpack_require__(78),
	      "project": "SLS",
	      "media": "Branding",
	      "blockquote": " SLS Vegas Gives the<br> Strip a Whole New Look.",
	      "description": "CVU - Phenomenon - Wilson X",
	      "topDescription": ["The SLS chain of high-end, luxury hotels has been a mainstay in Miami and Los Angeles for over a decade. Since 2007 we have been anxiously anticipating our expansion to Sin City. And 7 years later we were ready to launch. But when it comes to Vegas, it's not as simple as just opening the doors. You have to really identify and brand who you are. Every hotel in Vegas has shows. Everyone has restaurants. Everyone has gambling. But what will you get when you come to the SLS Vegas? That was the challenge ahead of us.", "<span class='red'>So when we created the branding for the SLS Vegas, we literally mixed the old Vegas with the new.</span>", "The first thing Pheno loved about our new location is the same thing we loved, the history. The site was the exact location of the iconic Sahara Hotel & Casino which was the place you wanted to be in 60s Vegas. It was elegant, sophisticated, glamorous. The Sahara represented a different time for Vegas, with different values. And we wanted to bring those feelings back. A new old way to experience Vegas, so-to-speak. So when we created the branding for the SLS Vegas, we literally mixed the old Vegas with the new."],
	      "caseWriter": {
	        "name": "Amy Weisenbach",
	        "title": "VP Marketing, Wilson",
	        "description": "Amy is the global head of marketing for Wilson Sporting Goods which is the world&#8217;s leading maker of performance sports equipment. Amy is a graduate of Harvard Business School."
	      },
	      "details": ["Wilson X's idea is simple. It's the first basketball that connects to your smartphone to help you track makes and misses without any sort of rim attachment. It was Wilson's first connected product and was an opportunity for us to show not just how revolutionary the ball was, but how digitally savvy Wilson was becoming. In just a few weeks we named the product. Designed the packaging. Designed the entire app experience. And created the ad campaign around it."],
	      "topcontent": [{
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(65),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(66),
	          "alt": "Wilson X Packaging Photo 3"
	        }, {
	          "url": __webpack_require__(67),
	          "alt": "Wilson X Packaging Photo 4"
	        }, {
	          "url": __webpack_require__(68),
	          "alt": "Wilson X Packaging Photo 5"
	        }, {
	          "url": __webpack_require__(69),
	          "alt": "Wilson X Packaging Photo 6"
	        }]
	      }],
	      "detailcontent": [{
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(79),
	        "imageAlt": "SLS",
	        "mainDescription": ["Most people don't know, but in LA - where the SLS is iconic- we actually own numerous restaurants and clubs in addition to the hotels. But the challenge with our new Vegas location, was that all of these entities are housed under the same roof. So from a visual standpoint, we wanted some kind of harmony, some kind of tone that unified everything from a club to a little coffee shop.", "They designed the packaging for the amenities in the hotel. They created logos and brand books for just about all of our new restaurants and clubs. They even named our espresso bar, Perq.", "Phenomenon helped us with all of this. They designed the packaging for the amenities in the hotel. They created logos and brand books for just about all of our new restaurants and clubs. They even named our espresso bar, Perq."]
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(80),
	        "imageAlt": "SLS",
	        "mainDescription": ["Most people consider the lobby to be where hotels make their first impression. That's wrong. It's the website. When most people first heard about the SLS Vegas they couldn't even visit it, because it wasn't open yet. So the website was not only the first interaction, it was the only one. We wanted the site to be easily browsable so you could see all that you could do while staying here. Tonally we never said all inclusive but visually we wanted people to feel like leaving would be a bad idea. Creating a perfect experience online also meant simplifying, all the way down to the event calendar. This was people's first experience with the SLS Vegas, it needed to feel as effortless as staying there."]
	      }, {
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(81),
	          "alt": "Wilson X Packaging Photo 1"
	        }, {
	          "url": __webpack_require__(65),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(66),
	          "alt": "Wilson X Packaging Photo 3"
	        }, {
	          "url": __webpack_require__(67),
	          "alt": "Wilson X Packaging Photo 4"
	        }, {
	          "url": __webpack_require__(68),
	          "alt": "Wilson X Packaging Photo 5"
	        }, {
	          "url": __webpack_require__(69),
	          "alt": "Wilson X Packaging Photo 6"
	        }]
	      }]
	    },
	    "xome": {
	      "title": "Xome",
	      "className": "Xome",
	      "client": "Xome",
	      "clientLogo": __webpack_require__(82),
	      "project": "Xome",
	      "media": "Branding",
	      "blockquote": "When Buying a House,<br> There&#8217;s No Place Like Xome.",
	      "quoterName": "By Allison Cornia",
	      "quoterTitle": "SVP Marketing, Xome",
	      "quoterAvatar": __webpack_require__(51),
	      "description": "CVU - Phenomenon - Wilson X",
	      "topDescription": ["If you&#8217ve ever bought or sold a home, you know it&#8217s a complex, fragmented and darned unfriendly process. Believe it or not, studies have shown that buying a house is more stressful than bankruptcy, divorce or even the death of a loved one. With Xome, we not only brought homebuying into the 21st century, we introduced a radically better way to do it.", "<span class='red'>The whole purpose of Xome is to help homebuyers and sellers from start to finish.</span>", "Our mission is to give people more control, provide transparency and help people when they need it the most.", "The whole purpose of Xome is to help homebuyers and sellers from start to finish. So we worked with Pheno to build a beautifully intuitive mobile app. In just six weeks we completed the app making it the first truly integrated way to buy and sell a home. With it, you can list a home, search for a home, make and receive offers, move into escrow and close the deal, all from the palm of your hand."],
	      "topcontent": [{
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(42),
	        "thumbAlt": "Xome - TV Spot - Transparent House",
	        "thumbTitle": "Click to play video",
	        "vimeo": "165039901"
	      }],
	      "caseWriter": {
	        "name": "Allison Cornia",
	        "title": "SVP Marketing, Xome",
	        "description": "Allison is a seasoned Senior Marketing Executive with over 15 years experience including over 5 years as a Director of Marketing at Microsoft."
	      },
	      "detailcontent": [{
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(42),
	        "thumbAlt": "Xome - TV Spot - Transparent House",
	        "thumbTitle": "Click to play video",
	        "vimeo": "159123265"
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(43),
	        "imageAlt": "Sunny",
	        "mainDescription": ["<span class='red'>We fell in love with an idea that really spoke to what Xome does, it makes the entire buying/selling process more transparent.</span>"]
	      }]
	    },
	    "sunny": {
	      "title": "Sunny",
	      "className": "sunny",
	      "client": "Sunny",
	      "clientLogo": __webpack_require__(83),
	      "project": "Sunny",
	      "media": "Branding",
	      "blockquote": 'It&#8217;s A &#8220;Sunny&#8221; Day<br>for Payday Loans.',
	      "quoterName": "Patsy Hauer",
	      "quoterTitle": "SVP Brand Marketing, Elevate",
	      "quoterAvatar": __webpack_require__(51),
	      "description": "CVU - Phenomenon - Wilson X",
	      "topDescription": ["In the UK, the short-term loans business is not dissimilar to the States in that we have a huge stigma problem. Most people associate us with shady strip malls with big neon signs and questionable business practices. And brands you do know, like Wonga, notoriously take advantage of consumers and their need for fast cash.", "We originally went to Phenomenon, not to create a brand campaign or a new website or some other piece of communication.", "<span class='red'>We went to Phenomenon to help us create a differentiating short-term loan product.</span>", "And they came back to us with a revolutionary idea they called Sunny."],
	      "topcontent": [{
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(84),
	        "imageAlt": "Sunny",
	        "mainDescription": ['Strategically, Phenomenon recognized that there was no loyalty in our industry, and for good reason. People took out their first loan and then had to pay so much back that they took out another loan to pay for that, and so on and so on. Often working with multiple companies in the process, or as they deemed it, "a circle of debt." Because of the rates and the product architecture, people didn&#8217t have any choice, this was the way this category operated and no one was challenging the status quo of a predatory business model, until Sunny.', "Sunny was a business idea that was different because it was architected to help customers; a first for this category. Things like making payments on time lowered their interest. And the more loans you take out with us, as long as you continue to pay back on time, the lower the rate goes.", "After we all committed to making this change to our business model and challenging the entire category, Phenomenon then transitioned into helping us make it a reality. They designed the logo. Designed and built the website. And launched a brand campaign that ran all over the UK. This campaign included a series of ads featuring puppets. Why? Well, for years the notoriously shady payday loan company, Wonga hid behind endearing puppets. We decided to take them head on with a campaign that basically said don&#8217t trust puppets, trust a better way of doing payday loans."]
	      }],
	      "caseWriter": {
	        "name": "Patsy Hauer",
	        "title": "SVP Brand, Elevate",
	        "description": "Patsy is a Senior Vice President of Brand at Elevate. Over her 20-year career she has worked on global brands such as RadioShack, Sunny, Think Finance and spent over 6 years overseeing corporate creative design at Wal-Mart"
	      },
	      "detailcontent": [{
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(85),
	        "imageAlt": "Sunny"
	      }, {
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(42),
	        "thumbAlt": "Xome - TV Spot - Transparent House",
	        "thumbTitle": "Click to play video",
	        "vimeo": "112452033",
	        "mainDescription": ["<span class='red'>For years, the notoriously shady payday loan company, Wonga hid behind endearing puppets. We decided to take them head on with a campaign that basically said don&#8217t trust puppets, trust a better way of doing payday loans.</span>"]
	      }]
	    },
	    "mens-wearhouse": {
	      "title": "Men's Wearhouse",
	      "className": "mens-wearhouse",
	      "client": "Men's Wearhouse",
	      "clientLogo": __webpack_require__(86),
	      "project": "Men's Wearhouse",
	      "media": "Branding",
	      "blockquote": "Men&#8217;s Wearhouse<br> Updates Its Wardrobe.",
	      "quoterName": "By Matt Stringer",
	      "quoterTitle": "EVP Marketing, Men&#8217;s Wearhouse",
	      "quoterAvatar": __webpack_require__(51),
	      "description": "CVU - Phenomenon - Wilson X",
	      "caseWriter": {
	        "name": "Matt Stringer",
	        "title": "EVP Marketing, Men&#8217;s Wearhouse",
	        "description": "Matt is the EVP of Marketing at Men&#8217;s Wearhouse and has been with the company for over 15 years."
	      },
	      "topDescription": ["For over 20 years, Men&#8217;s Wearhouse advertising centered around one line delivered by one man. But in 2013, when our founder and longtime CEO left the company, we had to make some pretty significant changes. After an extensive agency review we selected Phenomenon to take both strategic and creative lead on the future of Men&#8217;s Wearhouse as our Agency of Record.", "The new tone and feel for us started early in 2014 when we acquired the men&#8217;s fashion brand Joseph Abboud. We used that acquisition as a launching point to redefine our image. To kick things off, we developed a television spot that announced the partnership with Abboud and positioned the American Designer as our new Creative Director."],
	      "topcontent": [{
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(42),
	        "thumbAlt": "Xome - TV Spot - Transparent House",
	        "thumbTitle": "Click to play video",
	        "vimeo": "164752774",
	        "mainDescription": ['<span class="red">The spot firmly grounded our strategic initiative to make Men&#8217;s Wearhouse a home to a collection of brands rather than a brand in and of itself.</span>', "This new strategic approach also positioned the suits as the hero, rather than trying to make Men&#8217;s Wearhouse a fashion label that it isn&#8217;t.", "Once we established the quality of the suits we offer, we shifted the focus to the men that wear our suits. Actually, we created an idea behind the man that wears our suits. Someone that strives to be a better version of himself. Someone that walks with confidence, but not arrogance. Someone that might need a good looking suit to help them achieve that confidence."]
	      }],
	      "detailcontent": [{
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(87),
	          "alt": "Men's Wearhouse Photo 1"
	        }, {
	          "url": __webpack_require__(88),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(89),
	          "alt": "Wilson X Packaging Photo 3"
	        }, {
	          "url": __webpack_require__(90),
	          "alt": "Wilson X Packaging Photo 4"
	        }, {
	          "url": __webpack_require__(91),
	          "alt": "Wilson X Packaging Photo 5"
	        }, {
	          "url": __webpack_require__(92),
	          "alt": "Wilson X Packaging Photo 6"
	        }, {
	          "url": __webpack_require__(93),
	          "alt": "Wilson X Packaging Photo 7"
	        }, {
	          "url": __webpack_require__(94),
	          "alt": "Wilson X Packaging Photo 8"
	        }, {
	          "url": __webpack_require__(95),
	          "alt": "Wilson X Packaging Photo 9"
	        }, {
	          "url": __webpack_require__(96),
	          "alt": "Wilson X Packaging Photo 10"
	        }],
	        "mainDescription": ['<span class="red">We landed on the line and pivotal insight: Rise to the Occasion. An idea that with a little help from a great looking suit, you can transform into the man you&#8217;ve always wanted to be.</span>', "Late Spring is always an important quarter for us as it&#8217;s the time for Dads and Grads. In 2015, instead of doing our typical retail promo, Pheno helped us create something much more memorable and special."]
	      }, {
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(42),
	        "thumbAlt": "Xome - TV Spot - Transparent House",
	        "thumbTitle": "Click to play video",
	        "vimeo": "134437401",
	        "mainDescription": ['<span class="red">We used Father&#8217;s Day as a way to sell the emotional side of suits by celebrating the very dads that wear them everyday</span>', "Actually, the men featured in the commercial are real dads with their kids. It was the first time&mdash;that I can remember&mdash;where we didn&#8217;t pitch a specific designer, sale or promotion.", "The spot was an overwhelming success. Sales weren&#8217;t just up, but there was a detectable buzz on social media and even in our offices and stores&mdash;people felt proud of what we stood for. Of course we won&#8217;t be looking to create an emotional hook every time we advertise, but when the opportunity presents itself, we realize the importance of standing for something bigger with our customers. And that&#8217;s something we can thank our partners for helping us achieve."]
	      }]
	    },
	    "think-thin": {
	      "title": "Think Thin",
	      "className": "think-thin",
	      "client": "thinkThin",
	      "clientLogo": __webpack_require__(97),
	      "project": "thinkThin",
	      "media": "Branding",
	      "blockquote": 'thinkThin Helps <br>Women Shed the Guilt.',
	      "quoterName": "By Megan Crossland",
	      "quoterTitle": "CMO, thinkThin",
	      "quoterAvatar": __webpack_require__(51),
	      "description": "CVU - Phenomenon - Wilson X",
	      "topDescription": ["In 2014, thinkThin was on the cusp of tremendous growth. For 10 years, we had been a really successful privately owned regional brand, but with an infusion of cash from private equity, we were about to get national distribution for the first time. And it was clear that we needed to develop our brand positioning and create an integrated advertising campaign to support our efforts.", "As a healthy lifestyle brand, founded by an inspirational female entrepreneur, we knew that the key was to resonate with women in a really unique way. We also knew that we couldn&#8217;t just leverage the same yoga, spin class and active lifestyle images that the rest of the category was using in nearly every piece of communication. The creative and strategy teams quickly arrived at pivotal insight that unlocked everything for us.", "The creative and strategy teams quickly arrived at pivotal insight that unlocked everything for us.", "<span class='red'>The idea was that you can&#8217;t begin to have a conversation about health and nutrition for women without addressing the notion of guilt.</span>", "But we didn&#8217;t want to get heavy or depressing about it, because we&#8217;re a positive, optimistic and upbeat brand."],
	      "topcontent": [{
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(42),
	        "thumbAlt": "Xome - TV Spot - Transparent House",
	        "thumbTitle": "Click to play video",
	        "vimeo": "158975908"
	      }],
	      "caseWriter": {
	        "name": "Megan Crossland",
	        "title": "CMO, thinkThin",
	        "description": "Before becoming the Director of Marketing for thinkThin in 2014, Megan worked as a marketing manager for over 10 years at Nestle."
	      },
	      "detailcontent": [
	        /*        {
	                  "type": "video",
	                    "video": true,
	                    "thumb": require("assets/images/xome_thumb_02-opt.jpg"),
	                    "thumbAlt": "Xome - TV Spot - Transparent House",
	                    "thumbTitle": "Click to play video",
	                    "vimeo": "159447308"
	                },
	                {
	                  "type": "video",
	                    "video": true,
	                    "thumb": require("assets/images/xome_thumb_02-opt.jpg"),
	                    "thumbAlt": "Xome - TV Spot - Transparent House",
	                    "thumbTitle": "Click to play video",
	                    "vimeo": "159448353",
	                    "mainDescription": [
	                      'The line that brought it all together was, "There are lots of things to feel guilty about, thinkThin isn&#8217;t one of them." The creative team then executed around this line in everything from print and TV to digital, mobile and sponsorships.'
	                    ]
	                },
	                {
	                  "carousel": true,
	                  "images": [
	                    {
	                      "url": require("assets/images/thinkthin-1-01.jpg"),
	                      "alt": "Men's Wearhouse Photo 1"
	                    },
	                    {
	                      "url": require("assets/images/thinkthin-1-02.jpg"),
	                      "alt": "Wilson X Packaging Photo 2"
	                    }
	                  ],
	                  "mainDescription": [
	                    "The result is a campaign that&#8217;s been highly effective, helped us drive national sales growth and made a lasting connection with our audience."
	                  ]
	                },
	                {
	                  "carousel": true,
	                  "images": [
	                    {
	                      "url": require("assets/images/thinkthin-2-01.jpg"),
	                      "alt": "Men's Wearhouse Photo 1"
	                    },
	                    {
	                      "url": require("assets/images/thinkthin-2-02.jpg"),
	                      "alt": "Wilson X Packaging Photo 2"
	                    }
	                  ]
	                }*/
	      ]
	    },
	    "cooper": {
	      "title": "Cooper",
	      "className": "cooper",
	      "client": "Mr.Cooper",
	      "clientLogo": __webpack_require__(98),
	      "project": "Mr.Cooper",
	      "media": "Branding",
	      "blockquote": "Home Loans Get More Human with Mr.Cooper.",
	      "description": "CVU - Phenomenon - Wilson X",
	      "topDescription": ["In the UK, the short-term loans business is not dissimilar to the States in that we have a huge stigma problem. Most people associate us with shady strip malls with big neon signs and questionable business practices. And brands you do know, like Wonga, notoriously take advantage of consumers and their need for fast cash.", "We went to Phenomenon to help us create a differentiating short-term loan product", "We went to Phenomenon, not to create a brand campaign or an app or some other piece of communication. We went to Phenomenon to help us create a differentiating short-term loan product. And they came back to us with an interesting idea they called Sunny."],
	      "topcontent": [{
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(65),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(66),
	          "alt": "Wilson X Packaging Photo 3"
	        }, {
	          "url": __webpack_require__(67),
	          "alt": "Wilson X Packaging Photo 4"
	        }, {
	          "url": __webpack_require__(68),
	          "alt": "Wilson X Packaging Photo 5"
	        }, {
	          "url": __webpack_require__(69),
	          "alt": "Wilson X Packaging Photo 6"
	        }]
	      }],
	      "caseWriter": {
	        "name": "Amy Weisenbach",
	        "title": "VP Marketing, Wilson",
	        "description": "Amy is the global head of marketing for Wilson Sporting Goods which is the world&#8217;s leading maker of performance sports equipment. Amy is a graduate of Harvard Business School."
	      },
	      "detailcontent": [{
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(99),
	        "imageAlt": "Cooper",
	        "mainDescription": ["Most people don't know, but in LA - where the SLS is iconic- we actually own numerous restaurants and clubs in addition to the hotels. But the challenge with our new Vegas location, was that all of these entities are housed under the same roof. So from a visual standpoint, we wanted some kind of harmony, some kind of tone that unified everything from a club to a little coffee shop.", "They designed the packaging for the amenities in the hotel. They created logos and brand books for just about all of our new restaurants and clubs. They even named our espresso bar, Perq.", "Phenomenon helped us with all of this. They designed the packaging for the amenities in the hotel. They created logos and brand books for just about all of our new restaurants and clubs. They even named our espresso bar, Perq."]
	      }, {
	        "type": "image",
	        "image": true,
	        "imageUrl": __webpack_require__(100),
	        "imageAlt": "SLS",
	        "mainDescription": ["Most people consider the lobby to be where hotels make their first impression. That's wrong. It's the website. When most people first heard about the SLS Vegas they couldn't even visit it, because it wasn't open yet. So the website was not only the first interaction, it was the only one. We wanted the site to be easily browsable so you could see all that you could do while staying here. Tonally we never said all inclusive but visually we wanted people to feel like leaving would be a bad idea. Creating a perfect experience online also meant simplifying, all the way down to the event calendar. This was people's first experience with the SLS Vegas, it needed to feel as effortless as staying there."]
	      }, {
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(101),
	          "alt": "Wilson X Packaging Photo 1"
	        }, {
	          "url": __webpack_require__(65),
	          "alt": "Wilson X Packaging Photo 2"
	        }, {
	          "url": __webpack_require__(66),
	          "alt": "Wilson X Packaging Photo 3"
	        }, {
	          "url": __webpack_require__(67),
	          "alt": "Wilson X Packaging Photo 4"
	        }, {
	          "url": __webpack_require__(68),
	          "alt": "Wilson X Packaging Photo 5"
	        }, {
	          "url": __webpack_require__(69),
	          "alt": "Wilson X Packaging Photo 6"
	        }]
	      }]
	    },
	    "moreCases": [{
	      "projectName": "Wilson Equips Itself With Global Campaign",
	      "writerName": "By Amy Weisenback",
	      "writerTitle": "VP Marketing, Wilson",
	      "projectUrl": "#/work/wilson-anthem",
	      "projectThumbSrc": __webpack_require__(102)
	    }, {
	      "projectName": "Men&#8217s Wearhouse <br>Updates Its Closet.",
	      "writerName": "By Matt Stringer",
	      "writerTitle": "EVO Marketing, Men&#8217s Wearhouse",
	      "projectUrl": "#/work/mens-wearhouse",
	      "projectThumbSrc": __webpack_require__(103)
	    }, {
	      "projectName": "thinkThin Helps<br>Women Shed the Guilt.",
	      "writerName": "By Megan Crossland",
	      "writerTitle": "CMO, thinkThin",
	      "projectUrl": "#/work/think-thin",
	      "projectThumbSrc": __webpack_require__(104)
	    }, {
	      "projectName": "Wilson Launches<br>Futuristic Ball.",
	      "writerName": "By Amy Weisenbach",
	      "writerTitle": "VP Marketing, Wilson",
	      "projectUrl": "#/work/wilson-x",
	      "projectThumbSrc": __webpack_require__(105)
	    }, {
	      "projectName": "It's a Sunny Day for Payday Loans.",
	      "writerName": "By Patsy Hauer",
	      "writerTitle": "VP Brand Marketing, Sunny",
	      "projectUrl": "#/work/sunny",
	      "projectThumbSrc": __webpack_require__(106)
	    }, {
	      "projectName": "When Buying a House, There's No Place Like Xome",
	      "writerName": "By Alison Cornia",
	      "writerTitle": "SVP Marketing, Xome",
	      "projectUrl": "#/work/xome",
	      "projectThumbSrc": __webpack_require__(107)
	    }],
	    "culture": {
	      "title": "Culture",
	      "className": "culture",
	      "description": "Phenomenon - Culture",
	      "blockquote": "Their office on the 28th floor provides great views of all the amazing places in LA that I've wanted to see but didn't have time to sit in traffic for two hours to visit.&#8221;",
	      "quoterName": "Lindsay",
	      "quoterTitle": "Client",
	      "details": ["Buying or selling a home is often a complex, fragmented and darned unfriendly process. Xome is a radically better way to do it because it lets you complete everything from the convenience of an app. In just six weeks we built Xome: the first truly integrated way to buy and sell a home. The app lets you list your home, search for a home, make and receive offers, move into escrow and close the deal.", "When it came to the TV spot, we created something that spoke to the core of what Xome does, it makes the entire home buying/selling process more transparent. This teaser spot led people to our site where a demo video explained in better detail everything Xome does for the home buyer."]
	    },
	    "jobs": {
	      "title": "Jobs",
	      "className": "jobs",
	      "description": "Phenomenon - Jobs",
	      "blockquote": "After a meeting, I wasn't sure who was from what department. Every person seemed to be involved in every aspect of what they were presenting.&#8221;",
	      "quoterName": "Allison Cornia",
	      "quoterTitle": "SVP Marketing, Xome",
	      "positions": "Open Positions",
	      "listing": [{
	        "listingTitle": "UI Director",
	        "listingUrl": "https://www.linkedin.com/jobs2/view/125948058"
	      }, {
	        "listingTitle": "Studio Manager",
	        "listingUrl": "https://www.linkedin.com/jobs2/view/118724849"
	      }, {
	        "listingTitle": "Digital Design Director",
	        "listingUrl": "https://www.linkedin.com/jobs2/view/85312460"
	      }, {
	        "listingTitle": "Digital Brand Manager (Digital Account Executive)",
	        "listingUrl": "https://www.linkedin.com/jobs2/view/125942963"
	      }, {
	        "listingTitle": "Brand Manager/Account Executive",
	        "listingUrl": "https://www.linkedin.com/jobs2/view/111550639"
	      }],
	      "details": ["Buying or selling a home is often a complex, fragmented and darned unfriendly process. Xome is a radically better way to do it because it lets you complete everything from the convenience of an app. In just six weeks we built Xome: the first truly integrated way to buy and sell a home. The app lets you list your home, search for a home, make and receive offers, move into escrow and close the deal.", "When it came to the TV spot, we created something that spoke to the core of what Xome does, it makes the entire home buying/selling process more transparent. This teaser spot led people to our site where a demo video explained in better detail everything Xome does for the home buyer."]
	    },
	    "contact": {
	      "blockquote": "Don't call them. They're my ninjas.&#8221;",
	      "quoterName": "Douglas Ewert",
	      "quoterTitle": "CEO Men&#8217;s Wearhouse & Joseph A. Bank",
	      "offices": [{
	        "name": "Los Angeles",
	        "phone": "+1 323 648 4000",
	        "href": "tel:13236484000",
	        "address": "5900 Wilshire Blvd, Floor 28, <br>Los Angeles, CA 90036",
	        "imgSrc": __webpack_require__(108)
	      }, {
	        "name": "Chicago",
	        "phone": "+1 323 648 4000",
	        "href": "tel:13236484000",
	        "address": "118 N Peoria Street, Suite 5N <br>Chicago, IL 60607",
	        "imgSrc": __webpack_require__(109)
	      }],
	      "departments": [{
	        "cat": "Careers",
	        "description": "Would love to hear from you. Tell us some things LinkedIn can&#8217t.",
	        "email": "jobs@phenomenon.com"
	      }, {
	        "cat": "PR",
	        "description": "We&#8217re generally not ones to talk about ourselves, but you can ask.",
	        "email": "pr@phenomenon.com"
	      }, {
	        "cat": "New Business",
	        "description": "Pheno works mostly by referral. Mostly. Not exclusively.",
	        "email": "info@phenomenon.com"
	      }]
	    },
	    "blogs": {
	      "title": "thinkThin",
	      "className": "think-thin",
	      "description": "CVU - Phenomenon - thinkThin",
	      "details": ["thinkThin is a nutritional bar founded by a strong, female entrepreneur to promote health and vitality for women and their often hectic lives. For years, they did little to no advertising. As they grew, they wanted to have a brand presence that showed off both their range of products as well as their personality.", "We netted out on a pretty fun campaign idea that laughed at all the guilty moments women have in their lives, while making the simple point that eating our bars is something you should never feel guilty about."],
	      "subcontent": [{
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(110),
	        "thumbAlt": "Wilson X - TV Spot - Run",
	        "thumbTitle": "Click to play video",
	        "vimeo": "159447308"
	      }, {
	        "type": "video",
	        "video": true,
	        "thumb": __webpack_require__(111),
	        "thumbAlt": "Wilson X - TV Spot - Text",
	        "thumbTitle": "Click to play video",
	        "vimeo": "159448353"
	      }, {
	        "type": "carousel",
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(112),
	          "alt": "thinkThin Print Ad 1"
	        }, {
	          "url": __webpack_require__(113),
	          "alt": "thinkThin Print Ad 2"
	        }]
	      }, {
	        "type": "carousel",
	        "carousel": true,
	        "images": [{
	          "url": __webpack_require__(114),
	          "alt": "thinkThin Mobile Shaker Banner Ad 1"
	        }, {
	          "url": __webpack_require__(115),
	          "alt": "thinkThin Mobile Shaker Banner Ad 2"
	        }]
	      }]
	    }
	  }
	};
	
	module.exports = copy;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c9651a6dc5c10ce4a79671a9e47d7959.svg";

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "70ee34b73a9fd571b244a7c805096bd7.png";

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0d6f75d0b80d32578b10aa5933cd1225.png";

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "80836e2f78abdc8fb85078d87f569eb8.png";

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4ea78a46efdd5c4cf6da777f2127dfc7.png";

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "70ee34b73a9fd571b244a7c805096bd7.png";

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a70ff7466d09de32e2e9511bfc6e7c9d.jpg";

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "119506de5a7dcc53d3e3525f6da34155.jpg";

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "526e1f649d5d7aa989d34e0d6d54a3b4.jpg";

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b452e1844c266c5a6ce0633a44c36271.jpg";

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5be7a2784c653570910ab3c69ab8f0bb.jpg";

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5616ad06460e1d80493e3c76c2f16a0e.png";

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "86d6f2d2a3920815dfc5290eb731f4b1.png";

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7978d2f859689d4e1cd994eb31887700.jpg";

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f9726a95bfd691a6b83f2f8d0ade0556.svg";

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3a0a4e6220242549635c1e2ace56f4b6.png";

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9fb55cd5a7f4f5cff03b3a82837c74c4.jpg";

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3beeeb0d72922367fad150969c1fe502.jpg";

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3edd8f032a1faeddda10bcb826100223.jpg";

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2d0b29da6ec3e10ed0788f8e4e25b6ae.jpg";

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7911ced760d19d9465bba44046346b51.jpg";

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f0d5c14ba54b4ebd9df60c9600648dbf.jpg";

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5a3e28303d49c14f6458fe9a67c35a82.jpg";

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4118e2e04597a01cd7cde1236ff13b92.jpg";

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a800876fdd8983a904793f33d53cea63.jpg";

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "745a753d91a469d171f3093367728597.jpg";

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "dbbe426245a0644f50bc4742355fdd77.jpg";

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "be09c829bc54b8634e79e56570703214.jpg";

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "764672546b4fcde33a41d6e6c498f644.jpg";

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c903ec51974035760109dc4fb9b9447d.jpg";

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ae8ad378baff97860dc343b7df3332a1.jpg";

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e85f58be18d67fc1ebaf3c7a8d018260.jpg";

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3b3b4cab8d9407f9cce0a865e88ffe78.jpg";

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a8d85eafa39a85538fb2af962c9a2720.jpg";

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6d4702557a409a3c1093efbb439c39a3.jpg";

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5575b7b42ba967a8f35d8bf8e0af718a.jpg";

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "89820cdd496919b6f8c74d98638452e3.jpg";

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6ed3861e3a883bad23c809a444998807.jpg";

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "05bfcf3f56110e615c09123dd5b90e0d.jpg";

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5237495d5eb74fe90e829c3d874a0f8a.jpg";

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "824e1870f4c88166c809451abc96e0da.jpg";

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "58ce48ce1d52881b4642d07892ea67aa.jpg";

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4fe13517a16e1b123f89588e8969def6.svg";

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ac8fe890d7f17157c4eb1cc511fddcaf.jpg";

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e8bebbf0b98d4e8b2ffba9cc4cf774ba.jpg";

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "16d2094763eb3b0cbb010d44ea3e7023.jpg";

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fa9778f2b326a0174018d6dcb10436e0.svg";

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b6e0cab17fdd72ed5ff26b1de9efb606.svg";

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "86d6f2d2a3920815dfc5290eb731f4b1.png";

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6659996bb996872491e48c04caec17e4.jpg";

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6fd5b28b01b168dbf793436467211f78.svg";

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6140c088af711e847666a6dfd50df310.jpg";

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f0de095c9f105a2f228dca5e330ccb3d.jpg";

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6ab85b365b90efa6d03455d5d4c81302.jpg";

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "df6438cc705b8e0a25cd3432ba9ce970.jpg";

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4bc83be382fc2364daab06a075267b1e.jpg";

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "30a13dfd76114f18ec767d88206b305c.jpg";

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f669d3f7ec8beb1b9b5181eeb395f4c1.jpg";

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ea520606f1d010b894945a640cd06f26.jpg";

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c550591eb9251d3be31ebbcc09544d6d.jpg";

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "42ac9041c99bae806358c6cad3270bd6.jpg";

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0e97eda7d383d34aa636df98f38385b9.svg";

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "50ce313e5934b4baee1ffeac6e176fe9.svg";

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d263f8e0798be4451ee576c1919a2feb.jpg";

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "44011bb8390ddc7d79dafb37638cb1bc.jpg";

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "20080d6bf26b203336d913cd8d463ad4.jpg";

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "282659896b68255dfc07a21968d2c12d.jpg";

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5547496d32731c58f98e6a6b33a7a031.png";

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e51026a75970915bd1534e1df34cc618.png";

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cd5ebd9b5ba4d2dcf43a683919f799c6.png";

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ab83b0f840b291273da66bd1d951285e.jpg";

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "affd6773325e6c9e69710c6b0b9b9e8b.jpg";

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c94bac7544a04fcfdd5802261be1675e.png";

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0e7b8d476d92437966e8c716d34a83a3.jpg";

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0b2081b456bdc0e84bf3eb08635128c6.jpg";

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "635909b36843df8c25cd4f0e9a43db06.jpg";

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "acf4e5bab7a83aa54158988f860686dc.jpg";

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f99b25a37aeb25905f4556d5fb13c77e.jpg";

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ba4762b0624f843e1b73b39bfe7bfcbd.jpg";

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e737659557d4cff07f1ffe60a399cb23.jpg";

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/welcome.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (copy, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	page = "home"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<!-- title and body copy-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<section class=\"row no-padding home\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<div class=\"top-main col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<div class=\"col-md-6 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 11, jade_debug[0].filename ));
	buf.push("The first agency site\u2028 written by clients.");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<p class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("Except for this part. ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<div scrolltop2 class=\"icon-right-arrow\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<ul class=\"row no-padding featured-contributors\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<h6>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 16, jade_debug[0].filename ));
	buf.push("Featured Contributors");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h6>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<!-- first 3 contributors-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	// iterate pageData.contributors
	;(function(){
	  var $$obj = pageData.contributors;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contributorItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<li class=\"col-sm-12 col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.contributorAvatar )
	{
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<img" + (jade.attr("src", contributorItem.contributorAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.name)
	{
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<span>" + (null == (jade_interp = contributorItem.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.jobTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<span>" + (null == (jade_interp = contributorItem.jobTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.project)
	{
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<p>" + (null == (jade_interp = contributorItem.project) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<a" + (jade.attr("href", contributorItem.href, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contributorItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<li class=\"col-sm-12 col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.contributorAvatar )
	{
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<img" + (jade.attr("src", contributorItem.contributorAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.name)
	{
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<span>" + (null == (jade_interp = contributorItem.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.jobTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<span>" + (null == (jade_interp = contributorItem.jobTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.project)
	{
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<p>" + (null == (jade_interp = contributorItem.project) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<a" + (jade.attr("href", contributorItem.href, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<div class=\"see-more\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<input type=\"checkbox\" name=\"toggle\" id=\"toggle\" class=\"red view-more\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<label for=\"toggle\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 33, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<div class=\"see-more-container\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<!-- six more contributors-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	// iterate pageData.contributorsMore
	;(function(){
	  var $$obj = pageData.contributorsMore;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contributorItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<li class=\"col-sm-12 col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.contributorAvatar )
	{
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<img" + (jade.attr("src", contributorItem.contributorAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 41, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.name)
	{
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<span>" + (null == (jade_interp = contributorItem.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.jobTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<span>" + (null == (jade_interp = contributorItem.jobTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.project)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<p>" + (null == (jade_interp = contributorItem.project) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<a href=\"#\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 47, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contributorItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<li class=\"col-sm-12 col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.contributorAvatar )
	{
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<img" + (jade.attr("src", contributorItem.contributorAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 41, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.name)
	{
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<span>" + (null == (jade_interp = contributorItem.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.jobTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<span>" + (null == (jade_interp = contributorItem.jobTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	if ( contributorItem.project)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<p>" + (null == (jade_interp = contributorItem.project) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/welcome.jade" ));
	buf.push("<a href=\"#\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 47, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();}.call(this,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"home\"\n- pageData = copy.content[page]\n\n\n// title and body copy\nsection.row.no-padding.home\n\tdiv.top-main.col-md-12\n\t\t.col-md-6.no-padding\n\t\t\th2 The first agency site\u2028 written by clients.\n\t\t\tp.red\n\t\t\t\t| Except for this part. \n\t\t\t.icon-right-arrow(scrolltop2)\n\tul.row.no-padding.featured-contributors\n\t\th6 Featured Contributors\n\t\t// first 3 contributors\n\t\teach contributorItem in pageData.contributors\n\t\t\tli.col-sm-12.col-md-4 \n\t\t\t\tif contributorItem.contributorAvatar \n\t\t\t\t\timg(src=contributorItem.contributorAvatar)\n\t\t\t\tcite\n\t\t\t\t\tif contributorItem.name\n\t\t\t\t\t\tspan!= contributorItem.name\n\t\t\t\t\tif contributorItem.jobTitle\n\t\t\t\t\t\tspan!= contributorItem.jobTitle\n\t\t\t\tif contributorItem.project\n\t\t\t\t\tp!= contributorItem.project\n\t\t\t\ta.red(href=contributorItem.href) Read full article &gt;\n\t\t.clear\n\t\t.see-more\n\t\t\tinput.red.view-more(type=\"checkbox\" name=\"toggle\" id=\"toggle\") \n\t\t\tlabel(for=\"toggle\") \n\t\t\t.see-more-container\n\t\t\t\t// six more contributors\n\t\t\t\teach contributorItem in pageData.contributorsMore\n\t\t\t\t\tli.col-sm-12.col-md-4 \n\t\t\t\t\t\tif contributorItem.contributorAvatar \n\t\t\t\t\t\t\timg(src=contributorItem.contributorAvatar)\n\t\t\t\t\t\tcite\n\t\t\t\t\t\t\tif contributorItem.name\n\t\t\t\t\t\t\t\tspan!= contributorItem.name\n\t\t\t\t\t\t\tif contributorItem.jobTitle\n\t\t\t\t\t\t\t\tspan!= contributorItem.jobTitle\n\t\t\t\t\t\tif contributorItem.project\n\t\t\t\t\t\t\tp!= contributorItem.project\n\t\t\t\t\t\ta.red(href=\"#\") Read full article &gt;\n\t\t\t\t");
	}
	}

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Merge two attribute objects giving precedence
	 * to values in object `b`. Classes are special-cased
	 * allowing for arrays and merging/joining appropriately
	 * resulting in a string.
	 *
	 * @param {Object} a
	 * @param {Object} b
	 * @return {Object} a
	 * @api private
	 */
	
	exports.merge = function merge(a, b) {
	  if (arguments.length === 1) {
	    var attrs = a[0];
	    for (var i = 1; i < a.length; i++) {
	      attrs = merge(attrs, a[i]);
	    }
	    return attrs;
	  }
	  var ac = a['class'];
	  var bc = b['class'];
	
	  if (ac || bc) {
	    ac = ac || [];
	    bc = bc || [];
	    if (!Array.isArray(ac)) ac = [ac];
	    if (!Array.isArray(bc)) bc = [bc];
	    a['class'] = ac.concat(bc).filter(nulls);
	  }
	
	  for (var key in b) {
	    if (key != 'class') {
	      a[key] = b[key];
	    }
	  }
	
	  return a;
	};
	
	/**
	 * Filter null `val`s.
	 *
	 * @param {*} val
	 * @return {Boolean}
	 * @api private
	 */
	
	function nulls(val) {
	  return val != null && val !== '';
	}
	
	/**
	 * join array as classes.
	 *
	 * @param {*} val
	 * @return {String}
	 */
	exports.joinClasses = joinClasses;
	function joinClasses(val) {
	  return (Array.isArray(val) ? val.map(joinClasses) :
	    (val && typeof val === 'object') ? Object.keys(val).filter(function (key) { return val[key]; }) :
	    [val]).filter(nulls).join(' ');
	}
	
	/**
	 * Render the given classes.
	 *
	 * @param {Array} classes
	 * @param {Array.<Boolean>} escaped
	 * @return {String}
	 */
	exports.cls = function cls(classes, escaped) {
	  var buf = [];
	  for (var i = 0; i < classes.length; i++) {
	    if (escaped && escaped[i]) {
	      buf.push(exports.escape(joinClasses([classes[i]])));
	    } else {
	      buf.push(joinClasses(classes[i]));
	    }
	  }
	  var text = joinClasses(buf);
	  if (text.length) {
	    return ' class="' + text + '"';
	  } else {
	    return '';
	  }
	};
	
	
	exports.style = function (val) {
	  if (val && typeof val === 'object') {
	    return Object.keys(val).map(function (style) {
	      return style + ':' + val[style];
	    }).join(';');
	  } else {
	    return val;
	  }
	};
	/**
	 * Render the given attribute.
	 *
	 * @param {String} key
	 * @param {String} val
	 * @param {Boolean} escaped
	 * @param {Boolean} terse
	 * @return {String}
	 */
	exports.attr = function attr(key, val, escaped, terse) {
	  if (key === 'style') {
	    val = exports.style(val);
	  }
	  if ('boolean' == typeof val || null == val) {
	    if (val) {
	      return ' ' + (terse ? key : key + '="' + key + '"');
	    } else {
	      return '';
	    }
	  } else if (0 == key.indexOf('data') && 'string' != typeof val) {
	    if (JSON.stringify(val).indexOf('&') !== -1) {
	      console.warn('Since Jade 2.0.0, ampersands (`&`) in data attributes ' +
	                   'will be escaped to `&amp;`');
	    };
	    if (val && typeof val.toISOString === 'function') {
	      console.warn('Jade will eliminate the double quotes around dates in ' +
	                   'ISO form after 2.0.0');
	    }
	    return ' ' + key + "='" + JSON.stringify(val).replace(/'/g, '&apos;') + "'";
	  } else if (escaped) {
	    if (val && typeof val.toISOString === 'function') {
	      console.warn('Jade will stringify dates in ISO form after 2.0.0');
	    }
	    return ' ' + key + '="' + exports.escape(val) + '"';
	  } else {
	    if (val && typeof val.toISOString === 'function') {
	      console.warn('Jade will stringify dates in ISO form after 2.0.0');
	    }
	    return ' ' + key + '="' + val + '"';
	  }
	};
	
	/**
	 * Render the given attributes object.
	 *
	 * @param {Object} obj
	 * @param {Object} escaped
	 * @return {String}
	 */
	exports.attrs = function attrs(obj, terse){
	  var buf = [];
	
	  var keys = Object.keys(obj);
	
	  if (keys.length) {
	    for (var i = 0; i < keys.length; ++i) {
	      var key = keys[i]
	        , val = obj[key];
	
	      if ('class' == key) {
	        if (val = joinClasses(val)) {
	          buf.push(' ' + key + '="' + val + '"');
	        }
	      } else {
	        buf.push(exports.attr(key, val, false, terse));
	      }
	    }
	  }
	
	  return buf.join('');
	};
	
	/**
	 * Escape the given string of `html`.
	 *
	 * @param {String} html
	 * @return {String}
	 * @api private
	 */
	
	var jade_encode_html_rules = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;'
	};
	var jade_match_html = /[&<>"]/g;
	
	function jade_encode_char(c) {
	  return jade_encode_html_rules[c] || c;
	}
	
	exports.escape = jade_escape;
	function jade_escape(html){
	  var result = String(html).replace(jade_match_html, jade_encode_char);
	  if (result === '' + html) return html;
	  else return result;
	};
	
	/**
	 * Re-throw the given `err` in context to the
	 * the jade in `filename` at the given `lineno`.
	 *
	 * @param {Error} err
	 * @param {String} filename
	 * @param {String} lineno
	 * @api private
	 */
	
	exports.rethrow = function rethrow(err, filename, lineno, str){
	  if (!(err instanceof Error)) throw err;
	  if ((typeof window != 'undefined' || !filename) && !str) {
	    err.message += ' on line ' + lineno;
	    throw err;
	  }
	  try {
	    str = str || __webpack_require__(118).readFileSync(filename, 'utf8')
	  } catch (ex) {
	    rethrow(err, null, lineno)
	  }
	  var context = 3
	    , lines = str.split('\n')
	    , start = Math.max(lineno - context, 0)
	    , end = Math.min(lines.length, lineno + context);
	
	  // Error context
	  var context = lines.slice(start, end).map(function(line, i){
	    var curr = i + start + 1;
	    return (curr == lineno ? '  > ' : '    ')
	      + curr
	      + '| '
	      + line;
	  }).join('\n');
	
	  // Alter exception message
	  err.path = filename;
	  err.message = (filename || 'Jade') + ':' + lineno
	    + '\n' + context + '\n\n' + err.message;
	  throw err;
	};
	
	exports.DebugItem = function DebugItem(lineno, filename) {
	  this.lineno = lineno;
	  this.filename = filename;
	}


/***/ },
/* 118 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/about.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (copy, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/about.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/about.jade" ));
	page = "about"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/about.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<!-- title and body copy-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<section class=\"row no-padding about\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"top-main col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-md-5 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<h2>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = pageData.subquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-5 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<figure>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(120), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<figcaption>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<h3>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, jade_debug[0].filename ));
	buf.push("Phenotype");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<ul>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push("noun");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<li>" + (jade.escape(null == (jade_interp = pageData.dictionary.noun) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push("verb");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<li>" + (jade.escape(null == (jade_interp = pageData.dictionary.verb) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</figcaption>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</figure>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-7\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"col-md-12 border-bottom\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/about.jade" ));
	if ( pageData.paragraph1)
	{
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/about.jade" ));
	// iterate pageData.paragraph1
	;(function(){
	  var $$obj = pageData.paragraph1;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/about.jade" ));
	if ( pageData.paragraph2)
	{
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/about.jade" ));
	// iterate pageData.paragraph2
	;(function(){
	  var $$obj = pageData.paragraph2;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-12 no-padding archie\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(121), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 41, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-md-5 no-padding folders\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(122), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-md-7\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/about.jade" ));
	if ( pageData.paragraph3)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/about.jade" ));
	// iterate pageData.paragraph3
	;(function(){
	  var $$obj = pageData.paragraph3;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(123), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-12 ac no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-md-7\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/about.jade" ));
	if ( pageData.paragraph4)
	{
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/about.jade" ));
	// iterate pageData.paragraph4
	;(function(){
	  var $$obj = pageData.paragraph4;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div sticky offset=\"80\" usePlaceholder=\"false\" media-query=\"min-width: 1024px\" class=\"col-md-5 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<section class=\"ac-container\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<h4>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 57, jade_debug[0].filename ));
	buf.push("We are an \u2028Innovations Agency.");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h4>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/about.jade" ));
	// iterate pageData.accordion
	;(function(){
	  var $$obj = pageData.accordion;
	  if ('number' == typeof $$obj.length) {
	
	    for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
	      var contentItem = $$obj[index];
	
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/about.jade" ));
	if ( index==0)
	{
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"ac-list\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<input" + (jade.attr("id", "ac-"+(index), true, true)) + " name=\"accordion-1\" type=\"radio\" checked=\"\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<label" + (jade.attr("for", "ac-"+(index), true, true)) + ">" + (jade.escape(null == (jade_interp = contentItem.label) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"ac-small\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 64, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (jade.escape(null == (jade_interp = contentItem.content) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	}
	else
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"ac-list\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<input" + (jade.attr("id", "ac-"+(index), true, true)) + " name=\"accordion-1\" type=\"radio\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<label" + (jade.attr("for", "ac-"+(index), true, true)) + ">" + (jade.escape(null == (jade_interp = contentItem.label) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"ac-small\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (jade.escape(null == (jade_interp = contentItem.content) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var index in $$obj) {
	      $$l++;      var contentItem = $$obj[index];
	
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/about.jade" ));
	if ( index==0)
	{
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"ac-list\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<input" + (jade.attr("id", "ac-"+(index), true, true)) + " name=\"accordion-1\" type=\"radio\" checked=\"\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<label" + (jade.attr("for", "ac-"+(index), true, true)) + ">" + (jade.escape(null == (jade_interp = contentItem.label) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"ac-small\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 64, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (jade.escape(null == (jade_interp = contentItem.content) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	}
	else
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"ac-list\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<input" + (jade.attr("id", "ac-"+(index), true, true)) + " name=\"accordion-1\" type=\"radio\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<label" + (jade.attr("for", "ac-"+(index), true, true)) + ">" + (jade.escape(null == (jade_interp = contentItem.label) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"ac-small\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (jade.escape(null == (jade_interp = contentItem.content) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-md-5\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<div class=\"col-md-7\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<article class=\"col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(124), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/about.jade" ));
	if ( pageData.paragraph5)
	{
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/about.jade" ));
	// iterate pageData.paragraph5
	;(function(){
	  var $$obj = pageData.paragraph5;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/about.jade" ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/about.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();}.call(this,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"about\"\n- pageData = copy.content[page]\n\n\n// title and body copy\nsection.row.no-padding.about\n\t.top-main.col-md-12\n\t\t.col-md-5.no-padding\n\t\t\th2!= pageData.blockquote\n\t\t\tp!= pageData.subquote\n\n\t\t\tinclude components/cite-components\n\t\n\t.col-xs-12.col-md-12.no-padding\n\t\t.col-xs-12.col-md-5.no-padding\n\t\t\tfigure\n\t\t\t\timg(src=require('assets/images/about/about-krish-racket.png'))\n\t\t\t\tfigcaption\n\t\t\t\t\th3 Phenotype\n\t\t\t\t\tul \n\t\t\t\t\t\tspan noun\n\t\t\t\t\t\tli= pageData.dictionary.noun\n\t\t\t\t\t\tspan verb\n\t\t\t\t\t\tli= pageData.dictionary.verb\n\t\t\n\t\t.col-xs-12.col-md-7\n\t\t\tarticle.col-md-12.border-bottom\n\t\t\t\tif pageData.paragraph1\n\t\t\t\t\teach par in pageData.paragraph1\n\t\t\t\t\t\tp!= par\n\t\t\tarticle.col-md-12\n\t\t\t\tif pageData.paragraph2\n\t\t\t\t\teach par in pageData.paragraph2\n\t\t\t\t\t\tp!= par\n\n\t.col-xs-12.col-md-12.no-padding.archie\n\t\timg(src=require('assets/images/about/about2.png'))\n\t.col-xs-12.col-md-12.no-padding\n\t\t.col-md-5.no-padding.folders\n\t\t\timg(src=require(\"assets/images/about/pheno-diagram.png\"))\n\t\t.col-md-7\n\t\t\tarticle.col-md-12\n\t\t\t\tif pageData.paragraph3\n\t\t\t\t\teach par in pageData.paragraph3\n\t\t\t\t\t\tp!= par\n\t\t\t\timg(src=require('assets/images/about/about3.png'))\n\t.col-xs-12.col-md-12.ac.no-padding\n\t\t.col-md-7\n\t\t\tarticle.col-md-12\n\t\t\t\tif pageData.paragraph4\n\t\t\t\t\teach par in pageData.paragraph4\n\t\t\t\t\t\tp!= par\n\t\t.col-md-5(sticky offset=\"80\" usePlaceholder=\"false\" media-query=\"min-width: 1024px\").no-padding\n\t\t\tsection.ac-container\n\t\t\t\th4 We are an \u2028Innovations Agency.\n\t\t\t\teach contentItem, index in pageData.accordion\n\t\t\t\t\tif index==0\n\t\t\t\t\t\t.ac-list\n\t\t\t\t\t\t\tinput(id=\"ac-\"+(index) name=\"accordion-1\" type=\"radio\" checked=\"\")\n\t\t\t\t\t\t\tlabel(for=\"ac-\"+(index)\t)= contentItem.label\n\t\t\t\t\t\t\tarticle.ac-small\n\t\t\t\t\t\t\t\tp= contentItem.content\n\t\t\t\t\telse\n\t\t\t\t\t\t.ac-list\n\t\t\t\t\t\t\tinput(id=\"ac-\"+(index) name=\"accordion-1\" type=\"radio\")\n\t\t\t\t\t\t\tlabel(for=\"ac-\"+(index)\t)= contentItem.label\n\t\t\t\t\t\t\tarticle.ac-small\n\t\t\t\t\t\t\t\tp= contentItem.content\n\t.col-xs-12.col-md-12.no-padding\n\t\t.col-md-5\n\t\t.col-md-7\n\t\t\tarticle.col-md-12\n\t\t\t\timg(src=require('assets/images/about/about4.jpg'))\n\t\t\t\tif pageData.paragraph5\n\t\t\t\t\teach par in pageData.paragraph5\n\t\t\t\t\t\tp!= par\n\n");
	}
	}

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f97f7f81a3df971652880a300ab2bc21.png";

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5f774c2d16f957b9e54f5f929d9f950c.png";

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "464834a74cc10926d87907d3446e8de0.png";

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "14911aba9229028975a0d698228bc47f.png";

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8b6e23a8e3df8d6bb4d13ede898e0c61.jpg";

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/work.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (copy, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/work.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/work.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/work.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/work.jade" ));
	page = "work"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/work.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<section class=\"row no-padding work\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<article class=\"col-md-12 top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/work.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/work.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/work.jade" ));
	// iterate pageData.subcontent 
	;(function(){
	  var $$obj = pageData.subcontent ;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/work.jade" ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.readmoreUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<article class=\"col-md-12 no-padding cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-12 col-md-8 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/work.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/work.jade" ));
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-12 col-md-4 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<legend>" + (jade.escape(null == (jade_interp = contentItem.legend) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<h3>" + (null == (jade_interp = contentItem.headline) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.citeName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.citeTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<div class=\"line\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.readmoreUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Read More &gt; ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/work.jade" ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.readmoreUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<article class=\"col-md-12 no-padding cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-12 col-md-8 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/work.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/work.jade" ));
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-12 col-md-4 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<legend>" + (jade.escape(null == (jade_interp = contentItem.legend) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<h3>" + (null == (jade_interp = contentItem.headline) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.citeName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.citeTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<div class=\"line\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/work.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.readmoreUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Read More &gt; ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();}.call(this,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"work\"\n- pageData = copy.content[page]\n\nsection.row.no-padding.work\n\tarticle.col-md-12.top-main\n\t\th2 \n\t\t\tblockquote!= pageData.blockquote\n\t\tinclude components/cite-components\n\t\n\teach contentItem in pageData.subcontent \n\t\ta(href= contentItem.readmoreUrl)\n\t\t\tarticle.col-md-12.no-padding.cf\n\t\t\t\t.col-xs-12.col-sm-12.col-md-8.no-padding\n\t\t\t\t\tif contentItem.image\n\t\t\t\t\t\timg(src= contentItem.imageUrl, alt=contentItem.imageAlt)\n\t\t\t\t.col-xs-12.col-sm-12.col-md-4.no-padding\n\t\t\t\t\tfieldset\n\t\t\t\t\t\tlegend= contentItem.legend\n\t\t\t\t\t\th3!= contentItem.headline \n\t\t\t\t\t\tcite\n\t\t\t\t\t\t\tspan!= contentItem.citeName\n\t\t\t\t\t\t\tspan!= contentItem.citeTitle\n\n\t\t\t\t\t\tdiv.line\n\t\t\t\t\t\tp!= contentItem.description\n\t\t\t\t\t\t\n\t\t\t\t\t\ta.red(href=contentItem.readmoreUrl) Read More &gt; ");
	}
	}

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	page = "wilson-anthem"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	pageData = copy.content[page] 
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	currentProjectIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-anthem.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"wilson-anthem\"\n- pageData = copy.content[page] \n- currentProjectIndex = 0\ninclude ./components/content-template.jade \n\n");
	}
	}

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/wilson-x.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	page = "wilsonX"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	pageData = copy.content[page] 
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	currentProjectIndex = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/wilson-x.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"wilsonX\"\n- pageData = copy.content[page] \n- currentProjectIndex = 3\n\ninclude ./components/content-template.jade\n\n");
	}
	}

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/sls.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/sls.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sls.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sls.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/sls.jade" ));
	page = "sls"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/sls.jade" ));
	pageData = copy.content[page] 
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sls.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sls.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sls.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sls.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"sls\"\n- pageData = copy.content[page] \n\ninclude ./components/content-template.jade\n\n");
	}
	}

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/xome.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, projectIndex, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/xome.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/xome.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/xome.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/xome.jade" ));
	page = "xome"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/xome.jade" ));
	pageData = copy.content[page] 
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/xome.jade" ));
	projectIndex = 5
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/xome.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/xome.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/xome.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/xome.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"projectIndex" in locals_for_with?locals_for_with.projectIndex:typeof projectIndex!=="undefined"?projectIndex:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"xome\"\n- pageData = copy.content[page] \n- projectIndex = 5\ninclude ./components/content-template.jade \n\n");
	}
	}

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/think-thin.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	page = "think-thin"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	pageData = copy.content[page] 
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	currentProjectIndex = 2
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/think-thin.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"think-thin\"\n- pageData = copy.content[page] \n- currentProjectIndex = 2\n\ninclude ./components/content-template.jade\n\n");
	}
	}

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	page = "mens-wearhouse"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	pageData = copy.content[page] 
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	currentProjectIndex = 1
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/mens-wearhouse.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"mens-wearhouse\"\n- pageData = copy.content[page] \n- currentProjectIndex = 1\n\ninclude ./components/content-template.jade\n\n");
	}
	}

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/sunny.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	page = "sunny"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	pageData = copy.content[page] 
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	currentProjectIndex = 4
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/sunny.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"sunny\"\n- pageData = copy.content[page] \n- currentProjectIndex = 4\n\ninclude ./components/content-template.jade\n\n");
	}
	}

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/cooper.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	page = "cooper"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	pageData = copy.content[page] 
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/cooper.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"cooper\"\n- pageData = copy.content[page] \n\ninclude ./components/content-template.jade \n \n");
	}
	}

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/entertainment.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (caseIndex, copy, currentProjectIndex, morecaseNum, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	page = "entertainment"
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	page = "entertainment"
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"row no-padding work work-details\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	page = "entertainment"
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"topcontent\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 top-description no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topDescription
	;(function(){
	  var $$obj = pageData.topDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.topcontent)
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-4 col-md-offset-1 project-detail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-4 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-project-detail\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, jade_debug[0].filename ));
	buf.push("Details");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.clientLogo, true, true)) + " class=\"clientlogo\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, jade_debug[0].filename ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.client) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, jade_debug[0].filename ));
	buf.push("Project");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.project) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<legend>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, jade_debug[0].filename ));
	buf.push("Media");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</legend>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.media) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<aside class=\"col-xs-6 col-md-12\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<fieldset class=\"icon-share-hover\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<input type=\"checkbox\" id=\"toggle-share\" close class=\"view-detail\">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<label class=\"icon-share\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 38, jade_debug[0].filename ));
	buf.push("Share");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</label>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	page = "entertainment"
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<ul class=\"social-icons\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<div class=\"bubble\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"twitter\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-twitter\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"facebook\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-facebook\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a socialshare socialshare-provider=\"linkedin\" socialshare-text=\"Current Project Text\" socialshare-hashtags=\"angularjs, angular-socialshare\"" + (jade.attr("socialshare-url", "http://tech.phenomenonstaging.com:2070/#/"+page, false, true)) + " class=\"icon-linkedin\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<li class=\"social-icon\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/share-icons.jade" ));
	buf.push("<a href=\"mailto:\" class=\"icon-mail\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</fieldset>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</aside>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.topcontent
	;(function(){
	  var $$obj = pageData.topcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-sm-12 col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 51, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"detail-content\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate pageData.detailcontent
	;(function(){
	  var $$obj = pageData.detailcontent;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.video)
	{
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<video-component" + (jade.attr("thumb", contentItem.thumb, true, true)) + (jade.attr("alt", contentItem.thumbAlt, true, true)) + (jade.attr("title", contentItem.thumbTitle, true, true)) + (jade.attr("vimeo", contentItem.vimeo, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</video-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.carousel)
	{
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<carousel-component class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.images
	;(function(){
	  var $$obj = contentItem.images;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var carouselItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", carouselItem.url, true, true)) + (jade.attr("alt", carouselItem.alt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.image)
	{
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.scrollingSite)
	{
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article sticky offset=\"80\" class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<section class=\"image-component component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imageUrl, true, true)) + (jade.attr("alt", contentItem.imageAlt, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( contentItem.mainDescription)
	{
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-12 no-padding tet\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	// iterate contentItem.mainDescription
	;(function(){
	  var $$obj = contentItem.mainDescription;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var par = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<p>" + (null == (jade_interp = par) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	if ( pageData.caseWriter)
	{
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<article class=\"col-md-6 no-padding case-writer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.name) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("/ ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.caseWriter.title) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	buf.push("<div>" + (null == (jade_interp = pageData.caseWriter.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/content-template.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- dynamically populate content from copy.json data-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/entertainment.jade" ));
	page = "entertainment"
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	page = "moreCases"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	caseIndex = 0
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	morecaseNum = 3
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<section class=\"col-md-12 no-padding more-cases\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span class=\"left\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, jade_debug[0].filename ));
	buf.push("More Work Stories");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a href=\"/#/work\" class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, jade_debug[0].filename ));
	buf.push("View All &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper desktop cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
	      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var i in $$obj) {
	      $$l++;      var contentItem = $$obj[i];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<!-- hide current project and show only first 3 cases-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	var klass = ((i === currentProjectIndex) ? 'hide' : 'show')
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( (klass ==='show' ? (caseIndex+=1) : ''))
	{
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	if ( caseIndex <= morecaseNum)
	{
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article" + (jade.cls(['col-sm-4','col-md-4',klass], [null,null,true])) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 23, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"more-case-wrapper mobile cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<carousel-component-center class=\"carousel-component owl-carousel no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	// iterate pageData
	;(function(){
	  var $$obj = pageData;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<article class=\"col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + ">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.projectThumbSrc, true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<p>" + (null == (jade_interp = contentItem.projectName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</p>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 37, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 37, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.writerTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/components/more-cases.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.projectUrl, true, true)) + " class=\"red\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 42, jade_debug[0].filename ));
	buf.push("Read full article &gt;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</carousel-component-center>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();}.call(this,"caseIndex" in locals_for_with?locals_for_with.caseIndex:typeof caseIndex!=="undefined"?caseIndex:undefined,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"currentProjectIndex" in locals_for_with?locals_for_with.currentProjectIndex:typeof currentProjectIndex!=="undefined"?currentProjectIndex:undefined,"morecaseNum" in locals_for_with?locals_for_with.morecaseNum:typeof morecaseNum!=="undefined"?morecaseNum:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n  - page = \"entertainment\"\n\ninclude ./components/content-template.jade\n\n");
	}
	}

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/culture.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (copy, page, pageData) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/culture.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/culture.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/culture.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/culture.jade" ));
	page = "culture"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/culture.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<!-- title and body copy-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<section class=\"row no-padding culture\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 8, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<article class=\"col-md-3 col-md-offset-1 no-padding gif\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(136), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<article class=\"col-md-6 col-md-offset-1 top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 12, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/culture.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/culture.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<article class=\"col-md-12 no-padding margin-bottom-md\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(137), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<article class=\"col-md-12 table\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-12 col-md-5 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(138), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-12 col-md-6 col-md-offset-1\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<h3>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<blockquote>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("I know I&#8217;m at Phenomenon when I walk past the La Brea Tar Pits and see the baby mammoth screaming in anguish as its mother is sucked into a bubbling pit of tar.&#8221;  ");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Jason,");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 32, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 34, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<article class=\"col-md-12 change-order no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 35, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-12 col-md-7 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 36, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(139), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 38, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-12 col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 39, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<h3>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 40, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<blockquote>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 40, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	buf.push("\n");
	jade_debug.unshift(new jade.DebugItem( 41, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Every day there&#8217;s a slew of food trucks in front of their building. I gain 5 pounds every time we have meetings there.&#8221;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 42, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 43, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 44, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 45, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Claire,");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 46, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 47, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 48, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<article class=\"headshots col-xs-12 col-md-12 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 48, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 49, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-6 col-sm-4 col-md-15 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 49, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 50, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<ul class=\"cf\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<!-- fake image tag to gain height of the container-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 52, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(140), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 53, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 54, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 55, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 56, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-6 col-sm-4 col-md-15 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 56, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 57, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<ul>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 58, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(140), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 59, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 60, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 61, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 62, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-6 col-sm-4 col-md-15 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 62, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 63, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<ul>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 64, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(140), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 65, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 66, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 67, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 68, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-6 col-sm-4 col-md-15 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 68, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 69, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<ul>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 70, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(140), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 71, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 72, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 73, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 74, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-6 col-sm-4 col-md-15 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 74, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 75, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<ul>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 76, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(140), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 77, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 78, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 79, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 80, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<article class=\"col-xs-12 col-md-10 no-padding building\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 81, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-7\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 82, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(141), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 83, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(142), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 84, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-5\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 85, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<h3>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 86, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<blockquote>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 87, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("I always know a Pheno because they&#8217;re smiling.");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 88, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 89, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 90, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 91, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("John");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 92, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 93, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Building Security");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 94, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(143), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 95, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<article class=\"col-md-12 no-padding mugs\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 96, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-5\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 97, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(144), true, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 98, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<h3>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 99, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<blockquote>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 100, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("They have quite a collection of ugly mugs. Last time I was there I drank out of Mona Lisa&#8217s head.&#8221;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 101, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 102, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 103, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 104, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Nancy");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 105, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 106, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Client");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 107, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"col-xs-12 col-md-7\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 108, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<h3>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 109, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<blockquote>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 110, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("They&#8217re generally<br> a\u2028 pretty clean bunch.&#8221;");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 111, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 112, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 113, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 114, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Carl Mackey");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 115, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 116, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("Building Custodian");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 118, "/Users/aniwang/pheno-com/views/culture.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(145), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();}.call(this,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"culture\"\n- pageData = copy.content[page]\n\n\n// title and body copy\nsection.row.no-padding.culture \n\tarticle.col-md-3.col-md-offset-1.no-padding.gif\n\t\timg(src=require('assets/images/culture/culture.gif')) \n\tarticle.col-md-6.col-md-offset-1.top-main\n\t\th2 \n\t\t\tblockquote!= pageData.blockquote\n\t\t\n\t\tinclude components/cite-components\n\n\tarticle.col-md-12.no-padding.margin-bottom-md\n\t\timg(src=require('assets/images/culture/culture1.jpg'))\n\n\tarticle.col-md-12.table\n\t\t.col-xs-12.col-sm-12.col-md-5.no-padding\n\t\t\timg(src=require('assets/images/culture/culture2.png'))\n\t\t.col-xs-12.col-sm-12.col-md-6.col-md-offset-1\n\t\t\th3\n\t\t\t\tblockquote\n\t\t\t\t\t| I know I&#8217;m at Phenomenon when I walk past the La Brea Tar Pits and see the baby mammoth screaming in anguish as its mother is sucked into a bubbling pit of tar.&#8221;  \n\t\t\t\tcite\n\t\t\t\t\t.wrapper\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Jason,\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Client\n\n\tarticle.col-md-12.change-order.no-padding\n\t\t.col-xs-12.col-sm-12.col-md-7.no-padding\n\t\t\timg(src=require('assets/images/culture/culture3.png'))\n\n\t\t.col-xs-12.col-sm-12.col-md-4\n\t\t\th3\n\t\t\t\tblockquote \n\t\t\t\t\t| Every day there&#8217;s a slew of food trucks in front of their building. I gain 5 pounds every time we have meetings there.&#8221;\n\t\t\t\tcite\n\t\t\t\t\t.wrapper\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Claire,\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Client\n\tarticle.headshots.col-xs-12.col-md-12.no-padding \n\t\t.col-xs-6.col-sm-4.col-md-15.no-padding \n\t\t\tul.cf\n\t\t\t\t// fake image tag to gain height of the container\n\t\t\t\timg(src=require('assets/images/headshots/fake-img.png')) \n\t\t\t\tli\n\t\t\t\tli\n\t\t\t\tli\n\t\t.col-xs-6.col-sm-4.col-md-15.no-padding  \n\t\t\tul\n\t\t\t\timg(src=require('assets/images/headshots/fake-img.png')) \n\t\t\t\tli\n\t\t\t\tli\n\t\t\t\tli\n\t\t.col-xs-6.col-sm-4.col-md-15.no-padding \n\t\t\tul\n\t\t\t\timg(src=require('assets/images/headshots/fake-img.png')) \n\t\t\t\tli\n\t\t\t\tli\n\t\t\t\tli\n\t\t.col-xs-6.col-sm-4.col-md-15.no-padding \n\t\t\tul\n\t\t\t\timg(src=require('assets/images/headshots/fake-img.png')) \n\t\t\t\tli\n\t\t\t\tli\n\t\t\t\tli\n\t\t.col-xs-6.col-sm-4.col-md-15.no-padding \n\t\t\tul\n\t\t\t\timg(src=require('assets/images/headshots/fake-img.png')) \n\t\t\t\tli\n\t\t\t\tli\n\t\t\t\tli\n\tarticle.col-xs-12.col-md-10.no-padding.building\n\t\t.col-xs-12.col-md-7\n\t\t\timg(src=require('assets/images/culture/culture4.png')) \n\t\t\timg(src=require('assets/images/culture/culture5.png'))\n\t\t.col-xs-12.col-md-5\n\t\t\th3\n\t\t\t\tblockquote\n\t\t\t\t\t| I always know a Pheno because they&#8217;re smiling.\n\t\t\t\tcite\n\t\t\t\t\t.wrapper\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| John\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Building Security\n\t\t\timg(src=require('assets/images/culture/culture6.gif'))\n\tarticle.col-md-12.no-padding.mugs\n\t\t.col-xs-12.col-md-5\n\t\t\timg(src=require('assets/images/culture/culture7.png')) \n\t\t\th3\n\t\t\t\tblockquote\n\t\t\t\t\t| They have quite a collection of ugly mugs. Last time I was there I drank out of Mona Lisa&#8217s head.&#8221;\n\t\t\t\tcite\n\t\t\t\t\t.wrapper\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Nancy\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Client\n\t\t.col-xs-12.col-md-7\n\t\t\th3\n\t\t\t\tblockquote\n\t\t\t\t\t| They&#8217re generally<br> a\u2028 pretty clean bunch.&#8221;\n\t\t\t\tcite\n\t\t\t\t\t.wrapper\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Carl Mackey\n\t\t\t\t\t\tspan\n\t\t\t\t\t\t\t| Building Custodian\n\t\t\t\t\t\t\n\t\t\timg(src=require('assets/images/culture/culture8.png'))\n\t\t\t");
	}
	}

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fb5cb7ab92d3f6ee3926b7906168a352.gif";

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9d42bad24b1bceaaf819f55ee34767ba.jpg";

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6aed38556afdbf98b85d907db305573e.png";

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1b68aefc494524f47d4b5eb48a8e8b53.png";

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ab14610e1d3b2fb902c5bfa62cd76e33.png";

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c92c91084ff598a054e3ba90248065c6.png";

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0a45b31f964ee2ee0ce07fe5931c0c5c.png";

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "feba6b7d79ef66b6e7131694a9123a41.gif";

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "42d4281ab8371077501b0de229eb0e30.png";

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e7c997bd0a95501e5980684815796cb4.png";

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/contact.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (copy, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/contact.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/contact.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/contact.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/contact.jade" ));
	page = "contact"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/contact.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<section class=\"row no-padding contact\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<!--article.col-md-12.no-padding.top-main");
	jade_debug.unshift(new jade.DebugItem( 7, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 11, jade_debug[0].filename ));
	buf.push("h2 ");
	jade_debug.shift();
	buf.push("\n");
	jade_debug.unshift(new jade.DebugItem( 11, jade_debug[0].filename ));
	buf.push("\tblockquote!= pageData.blockquote");
	jade_debug.shift();
	buf.push("\n");
	jade_debug.unshift(new jade.DebugItem( 11, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	buf.push("\n");
	jade_debug.unshift(new jade.DebugItem( 11, jade_debug[0].filename ));
	buf.push("include components/cite-components");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<div class=\"contact-wrppaer\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/contact.jade" ));
	// iterate pageData.offices 
	;(function(){
	  var $$obj = pageData.offices ;
	  if ('number' == typeof $$obj.length) {
	
	    for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
	      var contentItem = $$obj[index];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/contact.jade" ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-6 col-md-6\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<figure>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imgSrc, false, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<figcaption>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<h3>" + (jade.escape(null == (jade_interp = contentItem.name) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<ul>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<a" + (jade.attr("href", 'tel:'+contentItem.href, false, true)) + ">" + (null == (jade_interp = contentItem.phone) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<li>" + (null == (jade_interp = contentItem.address) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</figcaption>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</figure>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var index in $$obj) {
	      $$l++;      var contentItem = $$obj[index];
	
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/contact.jade" ));
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-6 col-md-6\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 15, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<figure>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 16, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<img" + (jade.attr("src", contentItem.imgSrc, false, true)) + ">");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 17, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<figcaption>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<h3>" + (jade.escape(null == (jade_interp = contentItem.name) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</h3>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<ul>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<a" + (jade.attr("href", 'tel:'+contentItem.href, false, true)) + ">" + (null == (jade_interp = contentItem.phone) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 23, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<li>" + (null == (jade_interp = contentItem.address) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</figcaption>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</figure>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 24, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<div class=\"clear\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 25, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<section class=\"contactbiz clearfix\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/contact.jade" ));
	// iterate pageData.departments
	;(function(){
	  var $$obj = pageData.departments;
	  if ('number' == typeof $$obj.length) {
	
	    for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
	      var contentItem = $$obj[index];
	
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/contact.jade" ));
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-4 col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<h4>" + (null == (jade_interp = contentItem.cat) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</h4>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<hr>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<span class=\"red\">" + (null == (jade_interp = contentItem.email) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var index in $$obj) {
	      $$l++;      var contentItem = $$obj[index];
	
	jade_debug.unshift(new jade.DebugItem( 26, "/Users/aniwang/pheno-com/views/contact.jade" ));
	jade_debug.unshift(new jade.DebugItem( 27, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<div class=\"col-xs-12 col-sm-4 col-md-4\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 28, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<h4>" + (null == (jade_interp = contentItem.cat) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</h4>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 29, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<span>" + (null == (jade_interp = contentItem.description) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 30, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<hr>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 31, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<span class=\"red\">" + (null == (jade_interp = contentItem.email) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 33, "/Users/aniwang/pheno-com/views/contact.jade" ));
	buf.push("<!--include components/contact-form-->");
	jade_debug.shift();
	jade_debug.shift();}.call(this,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"contact\"\n- pageData = copy.content[page]\n\nsection.row.no-padding.contact\n\t//article.col-md-12.no-padding.top-main\n\t\th2 \n\t\t\tblockquote!= pageData.blockquote\n\t\t\n\t\tinclude components/cite-components\n\t.contact-wrppaer\n\t\teach contentItem, index in pageData.offices \n\t\t\t.col-xs-12.col-sm-6.col-md-6\n\t\t\t\tfigure\n\t\t\t\t\timg(src!=contentItem.imgSrc)\n\t\t\t\t\tfigcaption\n\t\t\t\t\t\th3= contentItem.name\n\t\t\t\t\t\tul\n\t\t\t\t\t\t\tli\n\t\t\t\t\t\t\t\ta(href!='tel:'+contentItem.href)!= contentItem.phone\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tli!= contentItem.address \n\t\t.clear\n\t\tsection.contactbiz.clearfix\n\t\t\teach contentItem, index in pageData.departments\n\t\t\t\t.col-xs-12.col-sm-4.col-md-4\n\t\t\t\t\th4!= contentItem.cat\n\t\t\t\t\tspan!= contentItem.description\n\t\t\t\t\thr\n\t\t\t\t\tspan.red!= contentItem.email\n\n//include components/contact-form");
	}
	}

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/jobs.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	;var locals_for_with = (locals || {});(function (copy, page, pageData, undefined) {
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	copy = __webpack_require__(35)
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	page = "jobs"
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	pageData = copy.content[page]
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<!-- title and body copy-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<section class=\"row no-padding jobs\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<div class=\"top-main\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 10, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<article class=\"col-md-5\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 11, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<img" + (jade.attr("src", __webpack_require__(148), true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 12, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<article class=\"col-xs-12 col-sm-12 col-md-7 col-sm-offset-0 no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<h2>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 13, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 14, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<blockquote>" + (null == (jade_interp = pageData.blockquote) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</blockquote>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</h2>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<cite>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterAvatar)
	{
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 4, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<img" + (jade.attr("src", pageData.quoterAvatar, true, true)) + ">");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<div class=\"wrapper\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterName)
	{
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 7, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterName) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 8, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	if ( pageData.quoterTitle)
	{
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	jade_debug.unshift(new jade.DebugItem( 9, "/Users/aniwang/pheno-com/views/components/cite-components.jade" ));
	buf.push("<span>" + (null == (jade_interp = pageData.quoterTitle) ? "" : jade_interp));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	}
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</cite>");
	jade_debug.shift();
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 18, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<ul>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 19, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<span>" + (jade.escape(null == (jade_interp = pageData.positions) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	// iterate pageData.listing
	;(function(){
	  var $$obj = pageData.listing;
	  if ('number' == typeof $$obj.length) {
	
	    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {
	      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.listingUrl, true, true)) + " target=\"blank\">" + (jade.escape(null == (jade_interp = contentItem.listingTitle) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  } else {
	    var $$l = 0;
	    for (var $index in $$obj) {
	      $$l++;      var contentItem = $$obj[$index];
	
	jade_debug.unshift(new jade.DebugItem( 20, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	jade_debug.unshift(new jade.DebugItem( 21, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<li>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 21, jade_debug[0].filename ));
	buf.push(" ");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 22, "/Users/aniwang/pheno-com/views/jobs.jade" ));
	buf.push("<a" + (jade.attr("href", contentItem.listingUrl, true, true)) + " target=\"blank\">" + (jade.escape(null == (jade_interp = contentItem.listingTitle) ? "" : jade_interp)));
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</a>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</li>");
	jade_debug.shift();
	jade_debug.shift();
	    }
	
	  }
	}).call(this);
	
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</ul>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</article>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</section>");
	jade_debug.shift();
	jade_debug.shift();}.call(this,"copy" in locals_for_with?locals_for_with.copy:typeof copy!=="undefined"?copy:undefined,"page" in locals_for_with?locals_for_with.page:typeof page!=="undefined"?page:undefined,"pageData" in locals_for_with?locals_for_with.pageData:typeof pageData!=="undefined"?pageData:undefined,"undefined" in locals_for_with?locals_for_with.undefined: false?undefined:undefined));;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "block variables\n- copy = require('app/copy.js')\n- page = \"jobs\"\n- pageData = copy.content[page]\n\n\n// title and body copy\nsection.row.no-padding.jobs\n\t.top-main\n\t\tarticle.col-md-5\n\t\t\timg(src=require('assets/images/jobs/jobs1.png')) \n\t\tarticle.col-xs-12.col-sm-12.col-md-7.col-sm-offset-0.no-padding\n\t\t\th2 \n\t\t\t\tblockquote!= pageData.blockquote\n\t\t\t\t\n\t\t\tinclude components/cite-components\n\t\t\t\n\t\t\tul\n\t\t\t\tspan= pageData.positions\n\t\t\t\teach contentItem in pageData.listing\n\t\t\t\t\tli \n\t\t\t\t\t\ta(href=contentItem.listingUrl target=\"blank\")= contentItem.listingTitle");
	}
	}

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e27d28b10125f390888c5a526633f1db.png";

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(jQuery, $) {'use strict';
	
	/**
	 * Created by rdollete on 4/1/16.
	 */
	
	angular.module('phenoCom').run(function ($rootScope, $window, $location, $anchorScroll) {
	
	    (function (a) {
	        (jQuery.browser = jQuery.browser || {}).mobile = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4));
	    })(navigator.userAgent || navigator.vendor || window.opera);
	
	    $(document).ready(function () {
	        // check if mobile or desktop
	        if ($.browser.mobile) {
	
	            $('body').addClass('mobile');
	        } else {
	            $('body').addClass('desktop');
	        }
	    });
	
	    $(window).load(function () {
	        $('.home .top-main').css('height', $(window).height() - 121);
	    });
	
	    $(window).resize(function () {
	
	        $('.home .top-main').css('height', $(window).height() - 121);
	    });
	
	    var $main = $('main');
	    var $body = $('body');
	    // detect state change
	    $(window).on('hashchange', function (e) {
	        $('html, body').animate({
	            scrollTop: 0
	        }, 300, function () {});
	        $('body, html').removeClass('opend');
	        $('#hamburger').removeClass('open');
	        $('.home .top-main').css('height', $(window).height() - 121);
	    });
	
	    var fixedheader = $("nav.topnav, .logo-wrapper");
	
	    $(window).scroll(function () {
	
	        //$('.featured-contributors').addClass('show').css('marginTop', -($('.home .top-main').height()/2 - $('.top-main .col-md-6').height()));
	
	        $('.featured-contributors').addClass('show');
	
	        if ($(document).scrollTop() > 0) {
	            fixedheader.addClass("fixed");
	        } else {
	            fixedheader.removeClass("fixed");
	        }
	    });
	
	    $('#hamburger').click(function () {
	        $('body, html').toggleClass('opend');
	        $(this).toggleClass('open');
	    });
	
	    $rootScope.$on('$stateChangeSuccess', function () {
	        // scroll to the top
	        $main.animate({ scrollTop: 0 }, 400);
	
	        // close snap drawer
	        $main.trigger('routeChange');
	
	        // fire Google Analytics tracking
	        $window.ga('send', 'pageview', { page: $location.url() });
	    });
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(7)))

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var angular = __webpack_require__(19);
	
	angular.module('phenoCom').controller('phenoController', function ($state, $scope, $cookies) {
	    // temporary onload solution to hide unstyle content for now
	    // don't forgot to remove display: none in layout.jade
	
	    $scope.$on('$viewContentLoaded', function () {
	        $('body').addClass('loaded');
	    });
	    // denote that user has been here, hold data for 15 days
	    var expireDate = new Date();
	    expireDate.setDate(expireDate.getDate() + 30);
	    $cookies.put('visited', 1, { 'expires': expireDate, 'path': '/' });
	
	    // detect state and store in scope
	    $scope.$state = $state;
	
	    // use current state to determine which menu item is selected
	    $scope.isSelected = function (sref) {
	        var s = $state.$current.name;
	        // make work tab selected while view work detail page
	        if (sref == s || sref == s.substring(0, s.indexOf('/'))) {
	            return true;
	        }
	
	        return false;
	    };
	});
	
	angular.module('phenoCom').controller('contactController', function ($scope, $state, $http) {
	
	    $scope.data = {
	        fields: {
	            resume: 'Resume',
	            coverletter: 'Cover Letter'
	        },
	        labels: {
	            resume: 'Choose a File',
	            coverletter: 'Choose a File'
	        },
	        ga: {
	            resume: 'resume',
	            coverletter: 'cover_letter'
	        }
	    };
	
	    $scope.setAttempted = function (element) {
	        element.attempted = true;
	        return;
	    };
	
	    $scope.sendData = function () {
	
	        // fire GA event tracker
	        ga('send', 'event', 'button', 'click', 'contact_submit');
	
	        $scope.contactForm.attempted = true;
	
	        if ($scope.contactForm.$valid) {
	
	            var message = "Incoming Application\n\n" + "First Name: " + $scope.data.firstName + "\n" + "Last Name: " + $scope.data.lastName + "\n" + "Email: " + $scope.data.email + "\n" + "Phone Number: " + $scope.data.phone + "\n\n" + "Portfolio URL: " + $scope.data.portfolioUrl + "\n" + "LinkedIn: " + $scope.data.linkedin;
	
	            var url = '/sendMail';
	
	            // prep data for API
	            var data = {
	                'message': message,
	                'type': 'Pheno VCU',
	                'subject': 'Application from ' + $scope.data.firstName + ' ' + $scope.data.lastName
	            };
	
	            // create multipart/form-data format
	            fd = new FormData();
	            fd.append('data', JSON.stringify(data));
	            fd.append('resume', $scope.resume);
	            fd.append('coverletter', $scope.coverletter);
	
	            // middleware API call
	            $http({
	                method: 'POST',
	                url: url,
	                data: fd,
	                headers: { 'Content-Type': undefined },
	                transformRequest: angular.identity
	            }).then(function (response) {
	
	                $state.go('thanks');
	            }, function (data, status, headers, config) {
	                errorCallback(data);
	                console.log("Error------" + JSON.stringify(data) + " " + status);
	            });
	        } else {
	
	            angular.forEach($scope.contactForm, function (value, key) {
	                if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
	                    var el = $scope.contactForm[key];
	                    if (el.$invalid) {
	                        el.attempted = true;
	                    }
	                }
	            });
	
	            $scope.contactForm.$setPristine();
	            $scope.contactForm.$setUntouched();
	        }
	    };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($, jQuery) {'use strict';
	
	/**
	 * Created by rdollete on 4/1/16.
	 */
	/**
	 * Created by rdollete on 4/1/16.
	 */
	
	angular.module('phenoCom').directive('carouselComponent', function () {
	
	    return {
	        restrict: 'E',
	        link: function link(scope, element, attrs) {
	            var animationSpeed = 150;
	
	            $(element).owlCarousel({
	                items: 1,
	                nav: true,
	                navText: ["<button class='icon-left-arrow'></button>", "<button class='icon-right-arrow'></button>"],
	                loop: true,
	                dots: true,
	                touchDrag: true
	            });
	        }
	    };
	});
	
	angular.module('phenoCom').directive('carouselComponentCenter', function () {
	
	    return {
	        restrict: 'E',
	        link: function link(scope, element, attrs) {
	            var animationSpeed = 150;
	
	            $(element).owlCarousel({
	                items: 2,
	                center: true,
	                nav: false,
	                navText: ["<button class='icon-left-arrow'></button>", "<button class='icon-right-arrow'></button>"],
	                loop: true,
	                dots: false,
	                touchDrag: true
	            });
	        }
	    };
	});
	
	var videoComponentTemplate = __webpack_require__(152);
	var scrolltopTemplate = __webpack_require__(153);
	
	// embedded vimeo player
	angular.module('phenoCom').directive('videoComponent', function () {
	    return {
	        scope: {
	            thumb: '@', alt: '@', title: '@', vimeo: '@'
	        },
	        template: videoComponentTemplate,
	        link: function link(scope, element, attrs) {
	            scope.vimeoUrl = 'https://player.vimeo.com/video/' + scope.vimeo;
	        }
	    };
	});
	
	angular.module('phenoCom').directive('scrolltotop', function () {
	    return {
	        template: scrolltopTemplate,
	        link: function link(scope, element, attrs) {
	
	            element.bind('click', function () {
	                $('html, body').animate({
	                    scrollTop: 0
	                }, 500, function () {});
	            });
	        }
	    };
	});
	
	angular.module('phenoCom').directive('scrolltop2', function () {
	    return {
	        link: function link(scope, element, attrs) {
	            var $windowHeight = $(window).height();
	            var topSpace = 180;
	            $(window).resize(function () {
	                $windowHeight = $(window).height();
	            });
	            element.bind('click', function () {
	                $('html, body').animate({
	                    scrollTop: $windowHeight - topSpace
	                }, 400, function () {});
	            });
	        }
	    };
	});
	
	angular.module('phenoCom').directive('close', function () {
	    return {
	        link: function link(scope, element, attrs) {
	            (function ($) {
	                $.fn.outside = function (ename, cb) {
	                    return this.each(function () {
	                        var $this = $(this),
	                            self = this;
	
	                        $(document).bind(ename, function tempo(e) {
	                            if (e.target !== self && !$.contains(self, e.target)) {
	                                cb.apply(self, [e]);
	                                if (!self.parentNode) $(document.body).unbind(ename, tempo);
	                            }
	                        });
	                    });
	                };
	            })(jQuery);
	            element.bind().outside('click', function () {
	                $(this).prop('checked', false);
	            });
	        }
	    };
	});
	
	// currently not in use: embedded scrollable website
	angular.module('phenoCom').directive('scrollableComponent', function ($window) {
	
	    return {
	        restrict: 'E',
	        link: function link(scope, element, attrs) {
	            var $element = $(element),
	                scrollFlag = false,
	                scrollClass = 'scroll-active';
	
	            angular.element($window).bind("scroll", function () {
	                if (this.pageYOffset >= $element.offset().top && this.pageYOffset <= $element.offset().top + 20) {
	                    if (!scrollFlag) {
	                        $element.toggleClass(scrollClass);
	                        scrollFlag = true;
	                    }
	                } else {
	                    if (scrollFlag) {
	                        $element.toggleClass(scrollClass);
	                        scrollFlag = false;
	                    }
	                }
	            });
	        }
	    };
	});
	
	// use this directive to bring file data into controller scope
	angular.module('phenoCom').directive('fileModel', ['$parse', function ($parse) {
	    return {
	        restrict: 'A',
	        link: function link(scope, element, attr) {
	            var model = $parse(attr.fileModel);
	            var modelSetter = model.assign;
	
	            element.bind('change', function () {
	                scope.$apply(function () {
	
	                    // make file available in scope
	                    modelSetter(scope, element[0].files[0]);
	
	                    // update the H4 (pseudo-field)
	                    var fileName = jQuery('#' + attr.id).val().split('\\').pop();
	                    scope.data.labels[attr.id] = scope.data.fields[attr.id] + ' Attached: ' + fileName;
	
	                    // fire off GA event tracker
	                    ga('send', 'event', 'upload', 'attach', scope.data.ga[attr.id]);
	                });
	            });
	        }
	    };
	}]);
	
	// handle page title changes on state change
	angular.module('phenoCom').directive('updateTitle', ['$rootScope', '$timeout', function ($rootScope, $timeout) {
	    return {
	        link: function link(scope, element) {
	
	            var listener = function listener(event, toState) {
	
	                var title = 'Default Title';
	                if (toState.data && toState.data.pageTitle) title = toState.data.pageTitle;
	
	                $timeout(function () {
	                    element.text(title);
	                }, 0, false);
	            };
	
	            $rootScope.$on('$stateChangeSuccess', listener);
	        }
	    };
	}]);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(7)))

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/video-component.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/video-component.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/video-component.jade" ));
	buf.push("<div class=\"component row no-padding\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/video-component.jade" ));
	buf.push("<div class=\"col-xs-12 no-padding js-video vimeo widescreen\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, "/Users/aniwang/pheno-com/views/components/video-component.jade" ));
	buf.push("<!--.video-thumb");
	jade_debug.unshift(new jade.DebugItem( 3, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 5, jade_debug[0].filename ));
	buf.push("img(src=\"{{thumb}}\", alt=\"{{alt}}\", title=\"{{title}}\")");
	jade_debug.shift();
	buf.push("\n");
	jade_debug.unshift(new jade.DebugItem( 5, jade_debug[0].filename ));
	buf.push("");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("-->");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 6, "/Users/aniwang/pheno-com/views/components/video-component.jade" ));
	buf.push("<iframe src=\"{{vimeoUrl}}\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen class=\"embed-player\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</iframe>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, ".component.row.no-padding\n\t.col-xs-12.no-padding.js-video.vimeo.widescreen\n\t\t//.video-thumb\n\t\t\timg(src=\"{{thumb}}\", alt=\"{{alt}}\", title=\"{{title}}\")\n\n\t\tiframe.embed-player(src=\"{{vimeoUrl}}\",frameborder=\"0\",\n\t\twebkitallowfullscreen,mozallowfullscreen,allowfullscreen)");
	}
	}

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	var jade = __webpack_require__(117);
	
	module.exports = function template(locals) {
	var jade_debug = [ new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/scrolltop.jade" ) ];
	try {
	var buf = [];
	var jade_mixins = {};
	var jade_interp;
	
	jade_debug.unshift(new jade.DebugItem( 0, "/Users/aniwang/pheno-com/views/components/scrolltop.jade" ));
	jade_debug.unshift(new jade.DebugItem( 1, "/Users/aniwang/pheno-com/views/components/scrolltop.jade" ));
	buf.push("<div class=\"backtotop\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 2, "/Users/aniwang/pheno-com/views/components/scrolltop.jade" ));
	buf.push("<span class=\"icon-right-arrow\">");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.unshift(new jade.DebugItem( 3, "/Users/aniwang/pheno-com/views/components/scrolltop.jade" ));
	buf.push("<span>");
	jade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));
	jade_debug.unshift(new jade.DebugItem( 3, jade_debug[0].filename ));
	buf.push("back to top");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</span>");
	jade_debug.shift();
	jade_debug.shift();
	buf.push("</div>");
	jade_debug.shift();
	jade_debug.shift();;return buf.join("");
	} catch (err) {
	  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, ".backtotop\n\tspan.icon-right-arrow\n\tspan back to top");
	}
	}

/***/ }
])
});
;
//# sourceMappingURL=data:application/json;base64,